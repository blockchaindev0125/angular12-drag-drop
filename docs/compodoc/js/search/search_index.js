var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AutocompleteComponent.html",[0,0.295,1,1.17]],["body/components/AutocompleteComponent.html",[0,0.424,1,1.835,2,1.255,3,0.177,4,0.159,5,2.148,6,1.23,7,1.014,8,0.141,9,2.79,10,1.515,11,2.829,12,0.967,13,1.683,14,2.017,15,5.049,16,5.385,17,0.019,18,4.633,19,0.39,20,4.633,21,5.385,22,5.385,23,3.543,24,3.471,25,5.385,26,5.385,27,5.385,28,4.157,29,4.955,30,2.666,31,3.014,32,3.471,33,4.137,34,3.014,35,4.633,36,4.633,37,3.767,38,2.745,39,4.137,40,3.014,41,3.014,42,1.378,43,5.87,44,0.423,45,5.385,46,5.385,47,5.385,48,1.142,49,3.084,50,4.622,51,1.445,52,5.385,53,5.385,54,5.385,55,3.233,56,3.225,57,0.316,58,0.744,59,1.277,60,3.243,61,4.622,62,3.243,63,1.704,64,3.243,65,3.767,66,3.243,67,3.243,68,1.09,69,0.944,70,4.622,71,3.243,72,0.662,73,0.788,74,0.436,75,1.267,76,1.315,77,3.084,78,3.243,79,4.137,80,1.704,81,3.243,82,2.768,83,3.243,84,1.154,85,2.341,86,3.243,87,0.294,88,1.685,89,3.233,90,2.79,91,0.215,92,3.243,93,3.976,94,0.923,95,2.428,96,2.79,97,1.704,98,0.159,99,0.307,100,3.243,101,3.243,102,5.385,103,2.79,104,3.243,105,3.243,106,1.516,107,4.622,108,2.768,109,3.243,110,2.491,111,3.243,112,3.243,113,3.243,114,1.942,115,3.243,116,2.491,117,3.243,118,3.243,119,1.211,120,3.243,121,3.243,122,3.243,123,4.622,124,3.243,125,3.243,126,1.23,127,1.684,128,1.445,129,0.802,130,2.226,131,1.23,132,1.23,133,1.014,134,2.226,135,1.014,136,0.765,137,1.014,138,1.23,139,0.967,140,1.171,141,1.014,142,1.014,143,1.23,144,1.014,145,1.23,146,0.923,147,1.23,148,1.014,149,1.014,150,1.23,151,1.014,152,1.23,153,1.014,154,1.23,155,1.014,156,1.23,157,1.014,158,0.881,159,0.967,160,0.881,161,1.23,162,0.967,163,1.23,164,0.662,165,1.23,166,0.967,167,1.171,168,1.23,169,0.011,170,0.011]],["title/components/ClassEditorComponent.html",[0,0.295,133,1.17]],["body/components/ClassEditorComponent.html",[0,0.509,1,1.455,2,1.601,3,0.254,4,0.228,6,1.765,7,1.455,8,0.202,12,1.388,13,1.744,14,2.098,17,0.018,19,0.309,42,1.758,51,1.843,57,0.228,59,0.861,73,0.869,87,0.322,88,1.601,91,0.309,98,0.228,99,0.452,126,1.765,127,2.023,128,1.843,129,1.15,130,2.58,131,1.765,132,1.765,133,2.127,134,2.58,135,1.455,136,1.097,137,1.455,138,1.765,139,1.388,140,1.68,141,1.455,142,1.455,143,1.765,144,1.455,145,1.765,146,1.324,147,1.765,148,1.455,149,1.455,150,1.765,151,1.455,152,1.765,153,1.455,154,1.765,155,1.455,156,1.765,157,1.455,158,1.264,159,1.388,160,1.264,161,1.765,162,1.388,163,1.765,164,0.95,165,1.765,166,1.388,167,1.68,168,1.765,169,0.014,170,0.014,171,5.072,172,2.787,173,2.61,174,2.61,175,3.8,176,5.567,177,3.203,178,3.026,179,3.203,180,4.654,181,2.06,182,2.605]],["title/interfaces/ComponentConfig.html",[183,0.393,184,1.116]],["body/interfaces/ComponentConfig.html",[0,0.262,3,0.182,4,0.163,8,0.144,17,0.019,19,0.221,44,0.431,57,0.352,58,0.844,59,0.615,73,0.447,74,0.797,75,1.212,84,0.712,85,2.177,87,0.365,91,0.221,94,0.946,95,1.747,97,1.747,98,0.267,99,0.221,119,1.652,136,1.61,169,0.011,170,0.011,177,2.938,183,0.494,184,2.1,185,1.09,186,2.325,187,2.394,188,3.324,189,2.472,190,3.324,191,1.277,192,3.614,193,4.152,194,3.818,195,3.614,196,2.554,197,1.991,198,2.554,199,2.554,200,2.554,201,2.554,202,2.554,203,3.614,204,2.325,205,2.554,206,3.519,207,2.143,208,1.646,209,2.554,210,1.991,211,3.1,212,1.991,213,2.472,214,1.326,215,1.555,216,2.154,217,1.039,218,2.554,219,2.554,220,1.115,221,1.63,222,2.554,223,2.554,224,2.554,225,2.554,226,2.554,227,2.554,228,2.554,229,2.554,230,3.614,231,2.554,232,1.741,233,2.554,234,2.554,235,2.554,236,2.554,237,2.554,238,2.554,239,3.614,240,2.554,241,1.991,242,2.554,243,2.554,244,2.554,245,1.689,246,2.554,247,2.554,248,2.554,249,3.614,250,0.903,251,2.554,252,2.554,253,2.554,254,3.614,255,2.554,256,2.554,257,2.554,258,2.554,259,2.143,260,2.554,261,2.554,262,2.554,263,1.784,264,2.325,265,0.946,266,2.554,267,2.554,268,1.991,269,2.554,270,2.554,271,1.991,272,2.325,273,2.143,274,2.143,275,2.325,276,2.325,277,2.554,278,2.554,279,2.554,280,2.554,281,2.554,282,2.554,283,2.554,284,2.554,285,2.554,286,2.554,287,2.554,288,2.554,289,2.554,290,2.554,291,2.554,292,2.554,293,1.991,294,2.554,295,2.554,296,2.554,297,4.194,298,1.876,299,2.554,300,2.554,301,2.554,302,2.554,303,2.554,304,2.554,305,2.554,306,2.554,307,2.554,308,2.554,309,2.554,310,2.554,311,2.554,312,2.554,313,1.991,314,2.554,315,1.991,316,2.554]],["title/interfaces/ComponentCreator.html",[183,0.393,317,1.967]],["body/interfaces/ComponentCreator.html",[0,0.511,3,0.225,4,0.201,8,0.178,17,0.019,19,0.483,23,3.019,38,2.852,44,0.498,57,0.339,58,0.805,63,2.859,85,2.17,87,0.333,91,0.273,94,1.17,98,0.298,99,0.273,169,0.013,170,0.013,183,0.572,184,1.226,185,1.348,187,1.348,191,1.477,197,2.462,211,3.342,215,1.923,216,1.414,217,1.907,220,1.325,221,0.924,232,1.283,250,1.656,263,2.757,268,2.462,298,2.589,317,3.41,318,2.16,319,2.301,320,2.876,321,3.632,322,2.035,323,3.931,324,3.016,325,3.258,326,1.923,327,2.301,328,3.159,329,3.159,330,4.685,331,4.948,332,4.18,333,1.923,334,2.65,335,3.159,336,4.18,337,3.159,338,3.159,339,3.159,340,4.18,341,3.159,342,1.923,343,2.16,344,3.159,345,3.159,346,3.159,347,4.18,348,3.159,349,3.159,350,3.159,351,3.159,352,3.159,353,4.265,354,3.806,355,3.159,356,3.159,357,3.159,358,2.876,359,3.159,360,3.159,361,3.159,362,3.159,363,4.18,364,3.159,365,3.159,366,4.986,367,5.186,368,3.159,369,3.159,370,3.159]],["title/interfaces/Condition.html",[136,0.883,183,0.393]],["body/interfaces/Condition.html",[3,0.209,4,0.187,8,0.166,13,0.86,17,0.019,19,0.254,44,0.475,56,2.29,57,0.351,58,0.819,74,0.847,75,1.418,84,0.82,87,0.209,91,0.254,98,0.288,99,0.254,119,1.676,136,1.689,169,0.012,170,0.012,183,0.545,185,1.254,191,1.038,216,1.315,220,1.345,232,1.553,245,1.475,250,1.712,265,1.977,271,3.775,293,3.104,371,2.675,372,2.597,373,4.246,374,3.775,375,4.246,376,5.337,377,4.232,378,3.12,379,2.938,380,2.724,381,2.675,382,2.01,383,2.938,384,1.872,385,3.982,386,2.938,387,2.938,388,2.938,389,1.546,390,3.982,391,2.938,392,2.938,393,2.938,394,4.842,395,2.938,396,2.938,397,2.938,398,2.938,399,2.938,400,4.517,401,4.842,402,2.938,403,2.938,404,2.938,405,2.938,406,2.938,407,2.938,408,2.938,409,2.938,410,2.938,411,2.938,412,2.938,413,3.982,414,2.938,415,2.938,416,2.938,417,2.938,418,2.938,419,2.938,420,2.938,421,2.938,422,2.938,423,2.938,424,2.938,425,2.938,426,2.938,427,2.938,428,2.465,429,2.465,430,2.675,431,2.938]],["title/components/ConditionEditorComponent.html",[0,0.295,135,1.17]],["body/components/ConditionEditorComponent.html",[0,0.434,1,0.765,2,1.019,3,0.134,4,0.12,5,1.821,6,0.929,7,0.765,8,0.106,10,1.231,12,0.73,13,1.623,14,1.937,15,3.927,17,0.019,19,0.34,23,2.26,28,3.557,29,3.507,30,2.26,31,3.259,32,2.942,33,3.507,34,2.555,35,3.927,36,3.927,37,3.193,38,2.925,42,0.73,44,0.344,48,0.928,51,1.174,57,0.349,58,0.8,59,1.341,68,1.613,69,1.379,72,1.359,73,0.929,74,0.894,75,1.277,76,0.697,84,0.525,87,0.249,88,1.019,91,0.163,98,0.12,99,0.249,119,0.844,126,0.929,127,1.427,128,1.174,129,0.605,130,1.941,131,0.929,132,0.929,133,0.765,134,1.941,135,1.6,136,1.762,137,0.765,138,0.929,139,0.73,140,0.884,141,0.765,142,0.765,143,0.929,144,0.765,145,0.929,146,0.697,147,0.929,148,0.765,149,0.765,150,0.929,151,0.765,152,0.929,153,0.765,154,0.929,155,0.765,156,0.929,157,0.765,158,0.665,159,0.73,160,0.665,161,0.929,162,0.73,163,0.929,164,0.5,165,0.929,166,0.73,167,0.884,168,0.929,169,0.009,170,0.009,172,1.466,173,1.662,174,1.662,175,2.419,178,2.135,179,2.26,181,1.084,182,1.37,220,0.766,232,1.076,245,1.068,250,1.239,265,1.456,298,2.201,324,1.917,372,2.378,373,4.133,374,3.487,375,2.942,377,3.065,382,3.37,389,1.526,428,2.419,429,2.419,430,1.712,432,6.266,433,2.135,434,2.942,435,4.565,436,1.576,437,2.883,438,5.519,439,4.565,440,5.118,441,3.754,442,2.533,443,3.754,444,3.754,445,3.754,446,3.754,447,2.419,448,3.229,449,3.754,450,5.118,451,3.754,452,2.248,453,4.565,454,0.885,455,2.448,456,3.754,457,2.106,458,2.448,459,3.754,460,2.448,461,2.448,462,3.754,463,2.448,464,3.754,465,2.448,466,3.754,467,2.448,468,3.754,469,2.448,470,3.754,471,2.106,472,2.448,473,3.754,474,2.448,475,3.754,476,2.448,477,2.448,478,3.754,479,2.448,480,2.448,481,2.448,482,2.448,483,2.448,484,2.448,485,2.448,486,2.448,487,2.448,488,0.884,489,4.748,490,3.754,491,2.448,492,4.565,493,2.734,494,2.448,495,2.448,496,2.448,497,2.448,498,2.448,499,2.448,500,2.448,501,2.448,502,2.448,503,2.625,504,3.754,505,2.448,506,2.448,507,4.403,508,2.448,509,2.448,510,2.448,511,2.448,512,2.448,513,2.448,514,2.448,515,3.754,516,3.754,517,2.106,518,1.578,519,2.448,520,2.448,521,2.448,522,2.448,523,2.448,524,2.448,525,2.448,526,4.565,527,1.145,528,2.448,529,2.448,530,1.37,531,2.448,532,2.448,533,2.448,534,3.932,535,2.448,536,2.448,537,2.448,538,2.448,539,1.578,540,2.448,541,2.041,542,3.754,543,3.754,544,3.754,545,2.883]],["title/pipes/ConditionPipe.html",[114,2.242,546,2.413]],["body/pipes/ConditionPipe.html",[3,0.29,4,0.26,8,0.23,10,1.74,12,1.583,17,0.018,44,0.486,48,1.312,57,0.313,59,1.183,68,1.251,72,1.084,73,0.922,74,0.713,75,1.306,87,0.349,91,0.352,98,0.26,99,0.352,114,3.829,119,1.438,136,1.68,169,0.015,170,0.015,232,1.508,265,1.819,318,3.606,382,3.606,389,1.583,454,1.251,546,4.121,547,5.307,548,4.565,549,6.394,550,3.42,551,6.394,552,6.863,553,5.307,554,3.712,555,6.394,556,5.307,557,6.394,558,5.307,559,5.307,560,5.307]],["title/interfaces/ConditionValue.html",[183,0.393,377,2.242]],["body/interfaces/ConditionValue.html",[3,0.214,4,0.191,8,0.17,13,0.879,17,0.019,19,0.26,44,0.482,56,2.341,57,0.311,58,0.807,74,0.854,75,1.485,84,0.838,87,0.214,91,0.26,98,0.291,99,0.26,119,1.681,136,1.675,169,0.012,170,0.012,183,0.553,185,1.282,191,1.061,216,1.345,220,1.355,232,1.565,245,1.497,250,1.727,265,1.988,271,3.809,293,3.15,371,2.734,372,2.571,373,3.391,374,2.341,375,3.832,376,5.587,377,4.183,378,3.148,379,3.003,380,2.764,381,2.734,382,2.054,383,3.003,384,1.899,385,4.041,386,3.003,387,3.003,388,3.003,389,1.569,390,4.041,391,3.003,392,3.003,393,3.003,394,4.886,395,3.003,396,3.003,397,3.003,398,3.003,399,3.003,400,4.568,401,4.886,402,3.003,403,3.003,404,3.003,405,3.003,406,3.003,407,3.003,408,3.003,409,3.003,410,3.003,411,3.003,412,3.003,413,4.041,414,3.003,415,3.003,416,3.003,417,3.003,418,3.003,419,3.003,420,3.003,421,3.003,422,3.003,423,3.003,424,3.003,425,3.003,426,3.003,427,3.003,428,2.52,429,2.52,430,2.734,431,3.003]],["title/injectables/ConditionsService.html",[191,1.016,382,1.967]],["body/injectables/ConditionsService.html",[3,0.174,4,0.156,8,0.138,13,0.716,17,0.019,19,0.211,48,1.128,56,1.907,57,0.341,58,0.827,59,1.272,68,1.621,72,1.404,73,0.924,74,0.924,75,1.49,84,0.682,87,0.174,91,0.211,98,0.261,99,0.211,119,1.63,136,1.807,169,0.011,170,0.011,183,0.479,191,0.865,216,1.095,220,1.258,232,1.721,245,1.656,250,1.937,265,1.985,271,3.486,293,2.732,371,2.227,372,2.6,373,2.94,374,1.907,375,3.436,376,4.733,377,4.342,378,3.343,379,2.446,380,2.397,381,2.227,382,2.397,383,3.505,384,2.315,385,3.505,386,2.446,387,3.505,388,2.446,389,1.361,390,4.472,391,2.446,392,2.446,393,3.505,394,4.472,395,2.446,396,2.446,397,2.446,398,2.446,399,3.505,400,4.095,401,4.472,402,2.446,403,2.446,404,2.446,405,2.446,406,2.446,407,3.505,408,2.446,409,2.446,410,3.505,411,2.446,412,2.446,413,3.505,414,2.446,415,3.505,416,2.446,417,2.446,418,3.505,419,2.446,420,2.446,421,3.505,422,2.446,423,2.446,424,2.446,425,2.446,426,2.446,427,2.446,428,2.052,429,2.052,430,2.227,431,2.446,554,4.31,561,1.782,562,4.562,563,4.562,564,4.562,565,4.562,566,4.562,567,4.562,568,4.562,569,4.562,570,3.184,571,3.184,572,3.184,573,3.184,574,3.184,575,3.184,576,3.184,577,3.184,578,3.184]],["title/interfaces/ConfigModal.html",[183,0.393,579,2.413]],["body/interfaces/ConfigModal.html",[0,0.496,2,1.195,3,0.166,4,0.148,5,1.208,8,0.131,10,0.993,11,2.312,13,0.681,14,0.823,17,0.019,19,0.201,24,2.837,30,1.5,38,2.825,40,1.696,41,1.696,42,0.904,44,0.403,49,1.592,57,0.362,58,0.8,63,2.312,69,0.619,76,0.862,84,0.943,85,2.067,87,0.355,88,1.545,91,0.201,94,0.862,98,0.215,99,0.201,119,1.279,127,1.778,146,0.862,164,1.234,169,0.01,170,0.01,173,1.341,174,1.341,178,1.417,181,1.341,182,1.696,183,0.463,184,1.802,185,0.993,187,2.184,212,1.814,213,2.723,214,1.208,217,1.62,220,0.899,221,1.527,232,1.222,241,1.814,245,1.475,263,1.669,265,1.252,317,2.723,319,1.696,321,3.382,322,1.5,325,1.814,326,2.424,343,3.501,384,1.094,389,1.697,433,2.058,434,1.953,436,1.272,442,1.5,454,0.714,488,1.094,530,1.696,541,2.594,579,3.341,580,1.953,581,4.063,582,3.382,583,3.417,584,4.132,585,3.382,586,2.635,587,1.514,588,2.119,589,1.953,590,1.953,591,1.417,592,2.058,593,2.837,594,3.894,595,3.078,596,3.381,597,3.104,598,1.696,599,1.696,600,1.696,601,2.119,602,1.696,603,1.696,604,2.327,605,1.953,606,1.953,607,2.837,608,1.953,609,1.953,610,2.327,611,1.814,612,2.327,613,1.953,614,1.953,615,3.381,616,1.953,617,2.327,618,3.625,619,2.837,620,1.592,621,1.814,622,1.814,623,2.327,624,1.814,625,1.814,626,1.953,627,1.953,628,1.5,629,2.327,630,1.592,631,2.058,632,2.327,633,2.327,634,1.953,635,2.327,636,3.078,637,2.327,638,2.327,639,2.327,640,2.327,641,2.327,642,2.327,643,2.119,644,2.119,645,2.837,646,2.119,647,2.327,648,1.696,649,3.078,650,2.312,651,2.327,652,2.327,653,3.381,654,2.327,655,2.327,656,3.982,657,4.063,658,2.327,659,2.327,660,1.814,661,2.327,662,3.381,663,2.119,664,2.327,665,2.327,666,2.327,667,2.327,668,2.327,669,2.327,670,2.327,671,2.327,672,2.327,673,2.327,674,2.327,675,2.327,676,2.327,677,2.327,678,3.381,679,2.327,680,1.814,681,2.327,682,2.119,683,2.327,684,2.327,685,3.381,686,3.982,687,2.327,688,2.327,689,2.327,690,2.327,691,1.953,692,2.327,693,1.814,694,2.327,695,3.381,696,2.327,697,2.327,698,2.327,699,3.078,700,2.327,701,1.953,702,1.953,703,2.327,704,2.119,705,2.327,706,2.327,707,2.119,708,2.327,709,2.327,710,2.327,711,2.327,712,2.327,713,2.327,714,2.327]],["title/injectables/ConfigService.html",[191,1.016,217,1.17]],["body/injectables/ConfigService.html",[0,0.306,3,0.14,4,0.125,8,0.111,17,0.019,19,0.17,44,0.356,48,0.96,57,0.357,58,0.845,59,1.35,68,1.704,69,1.21,72,1.409,73,0.937,74,0.927,75,1.149,84,0.548,85,2.245,87,0.336,91,0.17,94,0.728,95,1.344,97,1.344,98,0.23,99,0.17,119,1.582,136,1.106,169,0.009,170,0.009,177,1.266,183,0.408,184,2.185,186,1.79,187,2.381,189,1.344,191,1.054,192,2.982,193,4.306,194,3.281,195,2.982,196,1.966,197,1.532,198,1.966,199,1.966,200,1.966,201,1.966,202,1.966,203,2.982,204,1.79,205,1.966,206,3.023,207,1.649,208,1.266,209,1.966,210,1.532,211,3.139,212,1.532,213,2.04,214,1.021,215,1.196,216,1.936,217,1.214,218,3.603,219,2.982,220,0.958,221,1.568,222,2.982,223,1.966,224,1.966,225,1.966,226,1.966,227,1.966,228,1.966,229,2.982,230,2.982,231,1.966,232,1.815,233,4.022,234,1.966,235,4.022,236,1.966,237,2.982,238,1.966,239,2.982,240,1.966,241,1.532,242,1.966,243,1.966,244,1.966,245,1.805,246,1.966,247,1.966,248,1.966,249,2.982,250,1.274,251,2.982,252,1.966,253,2.982,254,2.982,255,1.966,256,1.966,257,1.966,258,1.966,259,1.649,260,2.982,261,1.966,262,1.966,263,1.779,264,2.715,265,1.335,266,1.966,267,2.982,268,1.532,269,2.982,270,1.966,271,2.325,272,2.715,273,2.502,274,2.502,275,2.715,276,2.715,277,2.982,278,1.966,279,2.982,280,1.966,281,1.966,282,1.966,283,1.966,284,2.982,285,1.966,286,1.966,287,1.966,288,1.966,289,1.966,290,1.966,291,1.966,292,1.966,293,1.532,294,2.982,295,1.966,296,2.982,297,3.603,298,1.548,299,1.966,300,1.966,301,1.966,302,1.966,303,1.966,304,1.966,305,1.966,306,1.966,307,1.966,308,1.966,309,4.022,310,1.966,311,4.022,312,1.966,313,3.135,314,1.966,315,3.135,316,1.966,447,2.502,527,1.815,561,1.432,715,3.882,716,3.882,717,3.882,718,3.882,719,3.882,720,2.982,721,3.339,722,3.882,723,3.882,724,3.882,725,3.882,726,2.559,727,2.559,728,2.559,729,2.559,730,2.559,731,2.559,732,2.559,733,2.559,734,2.559,735,2.559,736,2.559,737,2.559,738,2.559,739,2.559,740,2.559,741,2.559,742,2.559,743,2.559,744,2.559,745,2.559,746,2.559]],["title/interfaces/Configurable.html",[183,0.393,587,1.288]],["body/interfaces/Configurable.html",[3,0.206,4,0.184,8,0.163,17,0.019,19,0.25,44,0.469,57,0.349,58,0.823,63,3.289,69,1.046,74,0.946,75,0.768,84,1.342,85,2.044,87,0.358,91,0.25,94,1.07,95,1.976,97,1.976,98,0.251,99,0.25,119,1.311,128,1.602,158,1.779,160,1.021,164,0.768,169,0.012,170,0.012,183,0.395,185,1.233,187,2.268,191,1.392,208,2.537,215,1.759,216,1.294,220,0.768,221,0.846,245,2.003,250,1.392,324,2.448,372,2.153,378,3.099,384,2.44,527,1.759,585,3.263,587,2.582,591,1.759,747,2.889,748,4.379,749,4.809,750,4.809,751,4.809,752,3.504,753,3.236,754,2.889,755,1.862,756,3.236,757,3.236,758,3.263,759,3.236,760,3.236,761,2.889,762,2.889,763,4.809,764,3.236,765,3.236,766,3.236,767,3.236,768,3.937,769,2.889,770,3.236,771,2.631,772,3.236,773,3.236,774,5.815,775,2.889,776,3.236,777,5.815,778,3.236,779,3.236,780,3.236,781,3.236,782,5.635,783,5.015,784,4.409,785,4.409,786,3.236,787,2.631,788,3.236,789,3.236,790,3.236,791,3.236,792,3.585,793,3.236,794,3.236,795,3.236,796,3.236,797,3.236,798,3.236,799,3.236,800,3.236,801,2.889,802,2.631,803,3.236,804,3.236]],["title/directives/ConfigurableDirective.html",[129,0.925,160,1.016]],["body/directives/ConfigurableDirective.html",[3,0.172,4,0.154,8,0.136,10,1.483,11,2.782,12,0.938,13,1.017,14,1.665,17,0.019,19,0.209,44,0.414,48,1.118,49,3.042,51,1.414,57,0.357,58,0.738,59,1.403,68,1.641,69,1.421,72,1.252,73,0.824,74,0.824,80,3.042,87,0.289,88,1.828,91,0.209,98,0.154,99,0.424,108,4.388,110,4.447,119,1.479,128,1.656,129,1.118,158,1.438,159,0.938,160,1.228,164,0.642,169,0.011,170,0.011,187,1.736,220,0.924,250,1.438,265,0.895,324,1.899,372,1.821,378,2.621,384,2.09,452,2.709,454,1.066,489,3.891,527,2.115,587,2.196,591,1.471,648,1.761,701,2.028,748,3.704,749,4.068,750,4.711,751,4.447,752,2.964,755,3.257,758,3.432,763,3.475,787,2.201,805,2.707,806,5.295,807,5.79,808,6.579,809,5.79,810,4.523,811,5.79,812,5.79,813,5.295,814,3.891,815,4.523,816,4.523,817,5.295,818,2.707,819,3.673,820,3.24,821,5.295,822,5.79,823,4.523,824,3.147,825,3.147,826,3.147,827,3.147,828,3.147,829,3.147,830,3.147,831,3.147,832,4.523,833,5.79,834,4.523,835,4.523,836,4.523,837,4.523,838,3.147,839,4.523,840,7.118,841,4.523,842,3.147,843,4.523,844,4.523,845,4.523,846,4.523,847,4.523,848,4.523,849,3.147,850,3.147,851,3.147,852,3.147,853,4.523,854,3.147,855,2.417,856,3.147,857,3.147,858,3.147,859,3.147,860,3.147,861,2.707,862,3.147,863,2.707,864,6.133,865,3.147,866,3.147,867,3.147,868,3.147,869,3.147,870,3.147,871,2.201,872,2.707,873,3.147,874,2.707,875,3.147,876,3.147,877,3.147,878,3.147,879,3.147,880,4.523,881,4.523,882,3.147,883,4.523,884,4.523,885,3.147,886,2.417,887,2.707]],["title/modules/ConfigurableModule.html",[888,2.413,889,2.413]],["body/modules/ConfigurableModule.html",[3,0.297,4,0.266,8,0.236,17,0.018,87,0.379,91,0.362,98,0.266,99,0.362,106,2.545,160,2.1,169,0.015,170,0.015,754,4.182,889,4.852,890,2.86,891,3.411,892,4.683,893,4.683,894,4.683,895,3.887,896,3.26,897,5.443,898,4.184,899,4.184,900,4.541,901,3.046,902,4.184,903,3.807]],["title/injectables/ConfigurableService.html",[191,1.016,755,1.853]],["body/injectables/ConfigurableService.html",[3,0.182,4,0.163,8,0.145,17,0.019,19,0.221,44,0.432,48,1.165,57,0.335,58,0.779,59,1.359,68,1.612,69,1.419,72,1.28,73,0.842,74,0.934,75,1.28,76,1.691,84,1.434,85,2.181,87,0.343,91,0.221,94,0.949,95,1.752,97,1.752,98,0.231,99,0.221,119,1.23,128,1.474,158,1.28,160,0.905,164,0.681,169,0.011,170,0.011,183,0.351,187,2.056,191,1.28,208,2.942,215,1.559,216,1.147,220,0.681,221,0.75,245,2.005,250,1.768,324,1.4,372,1.147,378,1.651,384,1.702,452,2.823,527,1.559,561,1.866,585,3.327,587,2.633,591,1.559,747,2.562,748,2.333,749,2.562,750,2.562,751,2.562,752,1.866,753,2.869,754,2.562,755,2.334,756,4.704,757,2.869,758,3.51,759,2.869,760,2.869,761,2.562,762,2.562,763,4.566,764,2.869,765,4.704,766,4.056,767,4.704,768,3.622,769,2.562,770,2.869,771,2.333,772,4.704,773,2.869,774,5.6,775,4.201,776,4.056,777,5.6,778,4.056,779,2.869,780,4.056,781,4.056,782,5.395,783,4.704,784,4.056,785,4.056,786,2.869,787,2.333,788,2.869,789,2.869,790,2.869,791,2.869,792,3.297,793,2.869,794,5.113,795,2.869,796,2.869,797,2.869,798,5.113,799,2.869,800,4.704,801,4.566,802,2.333,803,2.869,804,2.869,904,4.715,905,4.715,906,4.715,907,4.715,908,3.335,909,3.335,910,3.335,911,3.335,912,3.335,913,3.335,914,3.335,915,3.335,916,3.335,917,3.335,918,3.335,919,3.335,920,3.335,921,3.335,922,3.335,923,3.335,924,3.335]],["title/components/ConfiguratorComponent.html",[0,0.295,137,1.17]],["body/components/ConfiguratorComponent.html",[0,0.469,1,0.728,2,0.98,3,0.127,4,0.114,5,1.764,6,0.883,7,1.383,8,0.101,12,0.694,13,1.61,14,1.934,17,0.019,19,0.358,23,1.787,28,2.327,38,2.33,42,0.694,44,0.331,48,0.892,51,1.129,57,0.349,58,0.496,59,1.317,68,1.346,69,1.101,72,1.101,73,0.826,74,0.724,75,1.165,76,1.535,77,1.897,80,2.324,84,0.499,85,1.764,87,0.353,88,1.201,91,0.155,94,0.662,96,2.003,97,1.223,98,0.177,99,0.24,108,2.649,119,0.523,126,0.883,127,1.383,128,1.129,129,0.575,130,1.89,131,0.883,132,0.883,133,0.728,134,1.89,135,0.728,136,0.549,137,1.558,138,0.883,139,0.694,140,1.304,141,0.728,142,0.728,143,0.883,144,0.728,145,0.883,146,0.662,147,0.883,148,0.728,149,0.728,150,0.883,151,0.728,152,0.883,153,0.728,154,0.883,155,0.728,156,0.883,157,0.728,158,1.464,159,0.694,160,0.632,161,0.883,162,0.694,163,0.883,164,0.737,165,0.883,166,0.694,167,0.841,168,0.883,169,0.009,170,0.009,173,1.598,174,1.598,177,1.152,178,2.068,179,1.152,181,1.031,182,1.303,184,1.319,187,1.184,208,1.152,211,1.787,213,1.223,214,0.929,217,2.019,220,1.29,221,1.12,232,1.346,250,0.632,259,1.5,263,2.258,265,1.027,298,1.764,322,1.152,333,1.688,334,1.5,342,1.688,343,2.324,353,1.628,354,1.628,384,1.799,389,1.884,436,1.516,454,0.851,488,2.222,517,2.003,518,1.5,527,1.089,530,2.475,541,1.44,581,1.5,582,1.303,583,3.128,586,2.984,587,2.048,588,1.628,592,1.089,597,2.649,611,2.649,620,2.998,630,2.618,631,2.954,645,1.5,646,2.525,691,1.5,752,1.303,755,3.196,758,2.475,769,1.788,771,1.628,792,1.628,820,3.019,925,1.788,926,6.574,927,4.423,928,4.423,929,4.423,930,3.094,931,4.423,932,3.611,933,4.423,934,3.398,935,4.423,936,4.423,937,4.984,938,3.486,939,3.828,940,3.772,941,3.611,942,4.984,943,4.423,944,2.328,945,3.611,946,2.774,947,2.475,948,3.828,949,2.328,950,2.328,951,3.611,952,2.328,953,2.328,954,3.106,955,3.106,956,2.328,957,2.324,958,3.611,959,2.328,960,3.611,961,3.611,962,3.611,963,2.328,964,3.611,965,2.328,966,3.805,967,3.106,968,2.328,969,2.328,970,2.328,971,2.328,972,2.328,973,2.328,974,2.328,975,3.611,976,2.328,977,3.611,978,2.328,979,2.003,980,1.788,981,4.423,982,3.805,983,2.328,984,2.003,985,1.788,986,2.003,987,1.5,988,1.5,989,1.5,990,1.5,991,1.5,992,1.5,993,2.328,994,2.328,995,2.328,996,2.328,997,2.328,998,2.328,999,2.328,1000,2.328,1001,2.328,1002,2.328,1003,2.328,1004,2.328,1005,2.003,1006,1.788,1007,2.328,1008,1.788,1009,2.328,1010,2.328,1011,2.328,1012,3.611,1013,2.328,1014,2.328,1015,2.003,1016,2.328,1017,2.328,1018,2.328,1019,2.003,1020,3.106,1021,2.328,1022,2.328,1023,2.328,1024,2.003,1025,2.003,1026,2.003,1027,2.328,1028,2.328,1029,2.003,1030,2.328,1031,2.328,1032,2.328,1033,2.003,1034,2.003,1035,2.328,1036,3.611,1037,3.611,1038,4.984,1039,2.328,1040,3.611,1041,4.423,1042,3.611,1043,2.003,1044,2.328,1045,2.328,1046,3.611,1047,2.328,1048,3.611,1049,3.611,1050,1.5,1051,3.611,1052,3.611,1053,3.106,1054,3.106]],["title/interfaces/ConfiguratorContext.html",[179,1.853,183,0.393]],["body/interfaces/ConfiguratorContext.html",[0,0.536,2,1.602,3,0.255,4,0.228,8,0.202,17,0.019,19,0.31,44,0.54,57,0.344,58,0.523,63,3.101,69,0.952,87,0.354,98,0.317,158,1.848,164,0.952,169,0.014,170,0.014,178,3.354,179,2.921,183,0.681,184,2.03,185,1.528,221,1.53,265,2.133,380,3.101,384,2.338,488,2.535,539,3.803,582,3.81,583,3.101,587,2.415,591,2.179,592,3.028,598,2.608,599,2.608,600,2.608,602,2.608,603,2.608,630,3.874,631,3.354,648,3.303,758,3.303,871,4.127,947,3.81,987,3.004,988,3.004,989,3.004,990,3.004,991,3.004,992,3.004,1055,3.26,1056,4.533,1057,4.533,1058,4.127,1059,4.533]],["title/modules/ConfiguratorModule.html",[888,2.413,1060,2.618]],["body/modules/ConfiguratorModule.html",[3,0.238,4,0.213,8,0.189,17,0.019,87,0.41,91,0.289,98,0.213,99,0.289,106,2.033,133,2.202,135,2.202,137,2.348,139,2.101,141,2.202,146,2.004,153,2.348,155,2.202,169,0.013,170,0.013,333,2.033,342,2.033,890,2.285,891,2.966,895,3.38,896,2.604,898,3.638,899,3.638,900,3.948,901,2.434,902,3.638,903,3.948,955,3.741,986,3.741,1060,5.453,1061,3.741,1062,3.741,1063,3.741,1064,3.741,1065,4.497,1066,4.116,1067,4.348,1068,5.644,1069,3.34,1070,4.855,1071,2.604,1072,3.948,1073,3.741,1074,3.34,1075,3.741,1076,2.604,1077,3.741,1078,3.741,1079,4.348,1080,4.348,1081,4.348,1082,3.741]],["title/interfaces/ConfiguratorOptions.html",[183,0.393,947,2.095]],["body/interfaces/ConfiguratorOptions.html",[0,0.461,2,1.253,3,0.252,4,0.226,8,0.2,17,0.019,19,0.306,44,0.537,57,0.356,58,0.517,69,0.942,74,1.026,87,0.352,98,0.315,158,1.592,164,0.942,169,0.014,170,0.014,178,2.742,179,2.284,183,0.677,184,1.749,185,1.512,221,1.037,265,2.213,380,2.424,384,1.666,488,2.327,539,2.973,582,2.582,583,2.424,587,2.217,591,2.157,592,3.44,598,2.582,599,2.582,600,2.582,602,2.582,603,2.582,630,3.386,631,2.742,648,2.582,758,2.582,871,3.227,947,3.607,987,4.371,988,4.371,989,4.371,990,4.371,991,4.371,992,4.371,1055,3.227,1056,3.544,1057,3.544,1058,3.227,1059,3.544]],["title/interfaces/ContainerConfig.html",[183,0.393,211,1.853]],["body/interfaces/ContainerConfig.html",[0,0.269,3,0.187,4,0.167,8,0.148,17,0.019,19,0.227,44,0.439,57,0.342,58,0.831,73,0.459,75,1.226,84,0.732,85,2.209,87,0.368,91,0.227,94,0.971,95,1.794,97,1.794,98,0.271,99,0.227,119,1.658,136,1.306,169,0.011,170,0.011,177,1.69,183,0.504,184,2.112,185,1.119,186,2.388,187,2.347,189,1.794,191,1.301,192,3.682,193,4.201,194,3.874,195,3.682,196,2.622,197,2.044,198,2.622,199,2.622,200,2.622,201,2.622,202,2.622,203,3.682,204,2.388,205,2.622,206,3.57,207,2.2,208,1.69,209,2.622,210,2.044,211,3.247,212,2.87,213,2.518,214,2.395,215,1.596,216,2.176,217,1.067,218,2.622,219,2.622,220,1.131,221,1.637,222,2.622,223,2.622,224,2.622,225,2.622,226,2.622,227,2.622,228,2.622,229,2.622,230,3.682,231,2.622,232,1.748,233,2.622,234,2.622,235,2.622,236,2.622,237,2.622,238,2.622,239,3.682,240,2.622,241,2.044,242,2.622,243,2.622,244,2.622,245,1.709,246,2.622,247,2.622,248,2.622,249,3.682,250,0.927,251,2.622,252,2.622,253,2.622,254,3.682,255,2.622,256,2.622,257,2.622,258,2.622,259,2.2,260,2.622,261,2.622,262,2.622,263,1.818,264,2.388,265,0.971,266,2.622,267,2.622,268,2.044,269,2.622,270,2.622,271,2.044,272,2.388,273,2.2,274,2.2,275,2.388,276,2.388,277,2.622,278,2.622,279,2.622,280,2.622,281,2.622,282,2.622,283,2.622,284,2.622,285,2.622,286,2.622,287,2.622,288,2.622,289,2.622,290,2.622,291,2.622,292,2.622,293,2.044,294,2.622,295,2.622,296,2.622,297,4.255,298,1.912,299,2.622,300,2.622,301,2.622,302,2.622,303,2.622,304,2.622,305,2.622,306,2.622,307,2.622,308,2.622,309,2.622,310,2.622,311,2.622,312,2.622,313,2.044,314,2.622,315,2.044,316,2.622]],["title/interfaces/ContainerIndex.html",[183,0.393,323,2.413]],["body/interfaces/ContainerIndex.html",[0,0.511,3,0.225,4,0.201,8,0.178,17,0.019,19,0.495,23,3.019,38,2.852,44,0.498,57,0.298,58,0.805,85,2.17,87,0.333,91,0.273,94,1.17,98,0.298,99,0.273,169,0.013,170,0.013,183,0.572,184,1.226,185,1.348,187,1.348,191,1.477,197,2.462,211,3.342,215,1.923,216,1.414,217,1.907,220,1.325,221,0.924,232,1.283,250,1.656,263,2.825,268,2.462,298,2.589,317,3.204,318,2.16,319,2.301,320,2.876,321,2.301,322,2.035,323,4.183,324,3.082,325,3.258,326,1.923,327,2.301,328,3.159,329,3.159,330,4.685,331,4.948,332,4.18,333,1.923,334,2.65,335,3.159,336,4.18,337,3.159,338,3.159,339,3.159,340,4.18,341,3.159,342,1.923,343,2.16,344,3.159,345,3.159,346,3.159,347,4.18,348,3.159,349,3.159,350,3.159,351,3.159,352,3.159,353,4.265,354,3.806,355,3.159,356,3.159,357,3.159,358,2.876,359,3.159,360,3.159,361,3.159,362,3.159,363,4.18,364,3.159,365,3.159,366,4.986,367,5.186,368,3.159,369,3.159,370,3.159]],["title/injectables/DragDropService.html",[191,1.016,326,1.75]],["body/injectables/DragDropService.html",[0,0.514,3,0.184,4,0.165,8,0.146,17,0.019,19,0.491,23,2.719,38,2.569,44,0.434,48,1.172,57,0.341,58,0.808,59,1.267,68,1.483,69,1.284,72,1.333,73,0.877,74,0.92,85,1.892,87,0.3,91,0.223,94,0.957,98,0.269,99,0.223,169,0.011,170,0.011,183,0.498,184,1.638,187,1.103,191,1.288,197,2.014,211,3.595,215,1.573,216,1.157,217,2.177,220,1.218,221,0.756,232,1.615,245,1.35,250,1.891,263,2.733,268,2.014,298,2.38,317,3.135,318,3.659,319,3.898,320,2.352,321,1.882,322,1.665,323,4.055,324,3.176,325,2.84,326,2.218,327,1.882,328,4.22,329,4.22,330,5.014,331,4.871,332,3.643,333,1.573,334,2.168,335,2.584,336,3.643,337,2.584,338,2.584,339,2.584,340,3.643,341,2.584,342,1.573,343,1.767,344,2.584,345,2.584,346,2.584,347,3.643,348,2.584,349,2.584,350,2.584,351,2.584,352,4.22,353,3.842,354,3.317,355,4.22,356,2.584,357,2.584,358,2.352,359,4.22,360,4.22,361,4.22,362,2.584,363,3.643,364,2.584,365,4.22,366,5.014,367,5.153,368,2.584,369,2.584,370,2.584,454,0.793,561,1.882,1083,2.168,1084,3.363,1085,3.363,1086,3.363,1087,3.363,1088,3.363,1089,3.363,1090,3.363,1091,3.363,1092,3.363,1093,3.363,1094,3.363,1095,3.363,1096,3.363]],["title/modules/DynamicViewsModule.html",[888,2.413,1097,2.618]],["body/modules/DynamicViewsModule.html",[3,0.256,4,0.229,8,0.203,17,0.019,87,0.41,91,0.311,98,0.229,99,0.311,106,2.192,142,2.246,157,2.372,169,0.014,170,0.014,318,2.463,333,2.192,342,2.192,546,4.891,889,4.631,890,2.463,891,3.112,895,3.547,896,2.807,898,3.818,899,3.818,900,4.143,901,2.624,902,3.818,903,4.143,1065,4.544,1066,4.213,1070,5.095,1071,2.807,1072,4.143,1073,4.033,1074,3.601,1075,4.033,1076,2.807,1077,4.033,1078,4.033,1082,4.033,1097,5.42,1098,4.033,1099,4.033,1100,4.033,1101,4.688,1102,4.688,1103,4.688,1104,4.688,1105,4.688,1106,4.688,1107,4.688]],["title/components/FlexEditorComponent.html",[0,0.295,139,1.116]],["body/components/FlexEditorComponent.html",[0,0.324,1,0.65,2,0.897,3,0.114,4,0.102,5,0.829,6,0.788,7,0.65,8,0.09,10,1.083,12,0.62,13,1.581,14,1.883,17,0.019,19,0.138,29,4.179,30,1.635,31,2.3,34,2.3,40,1.163,41,1.163,42,0.985,44,0.303,48,0.816,51,1.033,57,0.312,58,0.715,59,1.234,68,0.969,69,0.956,72,0.839,73,0.731,74,0.552,75,1.529,76,1.548,87,0.18,88,0.897,91,0.138,95,1.092,98,0.102,99,0.273,106,1.544,119,0.743,126,0.788,127,1.285,128,1.033,129,0.514,130,2.245,131,0.788,132,0.788,133,0.65,134,1.776,135,0.65,136,0.49,137,0.65,138,0.788,139,1.396,140,2.624,141,0.65,142,0.65,143,0.788,144,0.65,145,0.788,146,0.591,147,0.788,148,0.65,149,1.033,150,0.788,151,0.65,152,0.788,153,0.65,154,0.788,155,0.65,156,0.788,157,0.65,158,0.564,159,0.62,160,0.564,161,0.788,162,0.62,163,0.788,164,0.424,165,0.788,166,0.62,167,0.75,168,0.788,169,0.008,170,0.01,172,1.244,175,2.649,177,2.529,183,0.218,184,1.226,189,3.546,214,2.822,217,1.906,220,0.424,221,0.924,232,0.969,298,0.829,433,1.922,436,1.387,437,2.537,442,1.635,447,3.018,452,1.978,454,0.779,457,1.788,471,1.788,488,0.75,493,4.43,518,1.339,534,1.596,541,1.868,550,2.129,593,1.339,607,3.018,608,2.129,609,1.339,611,1.978,613,2.129,614,2.129,616,3.293,620,2.46,625,1.244,626,1.339,628,2.823,650,1.092,657,4.756,680,1.244,693,1.244,940,1.454,957,3.887,1050,3.815,1083,1.339,1108,5.185,1109,2.31,1110,3.536,1111,3.536,1112,3.536,1113,3.536,1114,4.769,1115,3.597,1116,3.303,1117,3.573,1118,3.925,1119,2.078,1120,2.078,1121,2.31,1122,3.275,1123,2.078,1124,2.841,1125,3.536,1126,4.607,1127,2.078,1128,2.31,1129,2.078,1130,2.129,1131,5.238,1132,4.56,1133,2.129,1134,4.585,1135,2.129,1136,5.238,1137,2.129,1138,5.582,1139,2.129,1140,4.68,1141,4.028,1142,4.028,1143,4.028,1144,2.841,1145,2.078,1146,2.078,1147,2.129,1148,2.841,1149,2.129,1150,2.841,1151,4.68,1152,2.078,1153,3.819,1154,2.841,1155,5.091,1156,4.68,1157,2.841,1158,4.179,1159,2.078,1160,2.078,1161,2.078,1162,1.788,1163,2.078,1164,2.078,1165,1.596,1166,1.788,1167,1.788,1168,1.788,1169,1.788,1170,1.788,1171,1.596,1172,1.788,1173,2.537,1174,1.788,1175,1.596,1176,1.788,1177,1.788,1178,1.788,1179,1.788,1180,1.788,1181,2.537,1182,1.788,1183,1.788,1184,1.788,1185,1.788,1186,1.788,1187,1.788,1188,3.303,1189,1.788,1190,3.303,1191,1.788,1192,2.078,1193,2.078,1194,5.703,1195,1.596,1196,2.841,1197,2.078,1198,3.018,1199,1.596,1200,1.788,1201,4.682,1202,3.303,1203,3.303,1204,2.078,1205,2.078,1206,2.537,1207,2.078,1208,2.078,1209,2.078,1210,2.078,1211,3.157,1212,1.788,1213,1.788,1214,3.275,1215,4.028,1216,4.179,1217,4.11,1218,1.788,1219,3.303,1220,2.841,1221,1.788,1222,1.788,1223,3.303,1224,2.078,1225,1.788,1226,2.078,1227,3.303,1228,2.841]],["title/interfaces/FlexOption.html",[183,0.393,1126,2.618]],["body/interfaces/FlexOption.html",[0,0.383,3,0.19,4,0.171,8,0.151,10,1.142,13,0.784,14,0.946,17,0.019,19,0.231,30,1.725,44,0.445,57,0.297,58,0.829,69,0.712,75,1.541,87,0.266,88,1.32,91,0.231,95,1.831,98,0.171,99,0.323,119,1.093,139,1.039,140,2.618,169,0.012,170,0.013,172,2.087,175,2.246,177,2.772,183,0.366,184,1.45,185,1.142,189,3.776,214,2.8,217,1.751,220,0.712,221,0.784,232,0.822,298,1.39,433,2.274,436,1.463,437,2.677,447,2.246,454,0.822,488,1.258,493,4.52,518,2.246,534,2.677,593,2.246,620,2.555,657,4.791,680,2.087,693,2.087,940,2.437,957,3.966,1050,4.255,1108,2.677,1109,2.437,1110,2.998,1111,2.998,1112,2.998,1113,2.998,1114,4.618,1115,3.735,1117,2.437,1118,2.677,1121,2.437,1122,3.401,1124,2.998,1125,2.998,1126,4.834,1128,2.437,1130,2.246,1131,5.309,1132,4.525,1133,2.246,1134,4.525,1135,2.246,1136,5.309,1137,2.246,1138,5.68,1139,2.246,1140,4.818,1141,4.183,1142,4.183,1143,4.183,1144,2.998,1147,2.246,1148,2.998,1149,2.246,1150,2.998,1151,5.213,1153,3.817,1154,2.998,1155,5.213,1156,4.818,1157,2.998,1158,4.302,1165,2.677,1166,2.998,1167,2.998,1168,2.998,1169,2.998,1170,2.998,1171,2.677,1172,2.998,1173,3.735,1174,2.998,1175,2.677,1176,2.998,1177,2.998,1178,2.998,1179,2.998,1180,2.998,1181,3.735,1182,2.998,1183,2.998,1184,2.998,1185,2.998,1186,2.998,1187,2.998]],["title/components/HtmlEditorComponent.html",[0,0.295,141,1.17]],["body/components/HtmlEditorComponent.html",[0,0.499,1,1.394,2,1.557,3,0.244,4,0.218,5,2.529,6,1.691,7,1.394,8,0.193,12,1.33,13,1.738,14,2.09,17,0.018,19,0.296,42,1.711,51,1.793,57,0.218,59,0.825,73,0.852,87,0.313,88,1.557,91,0.296,98,0.218,99,0.381,126,1.691,127,2.284,128,1.793,129,1.102,130,2.54,131,1.691,132,1.691,133,1.394,134,2.54,135,1.394,136,1.051,137,1.394,138,1.691,139,1.33,140,1.61,141,2.093,142,1.394,143,1.691,144,1.394,145,1.691,146,1.269,147,1.691,148,1.394,149,1.394,150,1.691,151,1.394,152,1.691,153,1.394,154,1.691,155,1.394,156,1.691,157,1.394,158,1.21,159,1.33,160,1.21,161,1.691,162,1.33,163,1.691,164,0.91,165,1.691,166,1.33,167,1.61,168,1.691,169,0.014,170,0.014,172,2.67,175,3.697,178,2.966,179,3.139,182,2.495,621,4.246,622,3.798,663,4.436,1162,3.835,1229,4.934,1230,6.342,1231,6.342,1232,6.342,1233,5.456,1234,6.342]],["title/components/ItemComponent.html",[0,0.295,142,1.17]],["body/components/ItemComponent.html",[0,0.362,1,0.776,2,1.03,3,0.136,4,0.121,5,0.989,6,0.941,7,0.776,8,0.108,10,1.243,11,2.418,12,0.74,13,1.626,14,1.973,17,0.019,19,0.342,23,1.228,31,1.388,34,1.388,38,2.937,42,0.74,44,0.347,48,0.937,49,2.708,51,1.185,57,0.359,58,0.791,59,1.381,68,1.549,69,1.314,72,1.195,73,0.865,74,0.844,75,0.94,76,1.31,77,1.303,80,1.303,87,0.333,88,1.654,91,0.165,94,0.706,98,0.121,99,0.342,108,3.086,116,1.906,119,1.035,126,0.941,127,1.439,128,1.185,129,0.613,130,2.22,131,0.941,132,0.941,133,0.776,134,1.955,135,0.776,136,1.215,137,0.776,138,0.941,139,0.74,140,1.662,141,0.776,142,1.611,143,0.941,144,0.776,145,0.941,146,0.706,147,0.941,148,0.776,149,0.776,150,0.941,151,0.776,152,0.941,153,0.776,154,0.941,155,0.776,156,0.941,157,0.776,158,1.399,159,0.74,160,0.674,161,0.941,162,0.74,163,0.941,164,0.774,165,0.941,166,0.74,167,0.896,168,0.941,169,0.009,170,0.009,173,1.679,174,1.679,177,2.278,181,1.098,184,1.746,187,1.243,214,0.989,217,2.013,220,0.774,221,1.248,232,1.649,245,0.706,263,0.941,264,2.652,265,1.31,318,3.931,322,1.228,324,2.458,326,3.072,333,1.773,342,2.152,372,1.583,378,2.278,382,3.451,384,1.861,389,1.537,433,2.152,436,1.592,442,1.877,447,2.444,448,4.433,454,0.894,488,0.896,493,1.485,503,1.735,507,2.134,541,0.989,586,3.325,587,1.583,590,1.599,591,1.16,621,2.271,622,1.485,627,1.599,628,2.551,650,1.303,721,3.262,748,3.219,752,2.576,814,3.262,819,3.325,820,3.107,855,1.906,863,3.262,886,2.913,946,4.265,1006,1.906,1050,1.599,1071,1.485,1083,1.599,1109,2.652,1114,1.735,1121,2.652,1122,3.604,1132,1.599,1134,2.444,1153,1.485,1173,3.535,1175,1.906,1221,2.134,1235,2.134,1236,2.756,1237,4.602,1238,3.792,1239,4.602,1240,3.959,1241,5.153,1242,3.086,1243,3.792,1244,3.262,1245,5.153,1246,3.792,1247,2.481,1248,2.481,1249,2.481,1250,2.481,1251,2.481,1252,2.481,1253,2.481,1254,3.792,1255,2.481,1256,2.481,1257,2.481,1258,2.481,1259,2.481,1260,3.792,1261,2.481,1262,3.792,1263,4.433,1264,2.481,1265,2.481,1266,3.792,1267,2.481,1268,2.481,1269,2.481,1270,2.481,1271,2.481,1272,2.481,1273,2.481,1274,2.481,1275,2.481,1276,3.219,1277,2.481,1278,1.906,1279,2.481,1280,2.481,1281,2.481,1282,2.481,1283,3.792,1284,2.481,1285,2.481,1286,2.481,1287,3.792,1288,2.481,1289,2.481,1290,2.481,1291,2.481,1292,2.481,1293,1.906,1294,2.481,1295,3.792,1296,2.481,1297,2.481,1298,2.481,1299,2.481,1300,2.481,1301,2.134,1302,3.262,1303,2.481,1304,2.134,1305,2.481,1306,2.481,1307,2.481,1308,2.481,1309,2.481,1310,2.481,1311,2.481,1312,2.481,1313,2.481,1314,3.959,1315,2.481,1316,2.481,1317,2.481,1318,3.792]],["title/components/ModalComponent.html",[0,0.295,144,1.17]],["body/components/ModalComponent.html",[0,0.461,1,1.187,2,1.401,3,0.207,4,0.186,6,1.44,7,1.187,8,0.165,10,1.691,12,1.132,13,1.712,14,2.056,17,0.019,19,0.252,42,1.538,44,0.472,48,1.275,51,1.613,55,3.608,57,0.332,58,0.578,59,1.323,65,4.098,68,1.482,69,1.283,72,0.775,73,0.844,74,0.787,77,1.995,80,1.995,82,3.089,84,0.814,87,0.282,88,1.591,89,3.608,91,0.252,98,0.186,99,0.343,126,1.44,127,1.832,128,1.613,129,0.939,130,2.384,131,1.44,132,1.44,133,1.187,134,2.384,135,1.187,136,0.895,137,1.187,138,1.44,139,1.132,140,1.371,141,1.187,142,1.187,143,1.44,144,1.965,145,1.44,146,1.081,147,1.44,148,1.187,149,1.187,150,1.44,151,1.187,152,1.44,153,1.187,154,1.44,155,1.187,156,1.44,157,1.187,158,1.031,159,1.132,160,1.031,161,1.44,162,1.132,163,1.44,164,0.775,165,1.44,166,1.132,167,1.371,168,1.44,169,0.012,170,0.012,173,2.284,174,2.284,181,1.681,245,1.081,263,1.44,265,1.87,389,1.538,433,2.739,442,3.111,581,3.776,584,4.059,634,4.61,699,4.098,704,4.098,707,3.608,819,3.508,820,3.279,939,4.828,957,1.995,980,2.917,1015,4.438,1236,3.508,1242,3.764,1319,3.267,1320,5.04,1321,5.859,1322,4.438,1323,5.04,1324,3.797,1325,3.797,1326,3.797,1327,3.797,1328,3.797,1329,3.797,1330,3.797,1331,3.267,1332,5.159,1333,3.797,1334,3.797,1335,3.797,1336,3.797,1337,3.797,1338,3.797,1339,3.797,1340,3.267,1341,3.797,1342,3.797,1343,3.797,1344,3.797,1345,3.797,1346,3.797]],["title/directives/NgModelChangeDebouncedDirective.html",[129,0.925,162,1.116]],["body/directives/NgModelChangeDebouncedDirective.html",[3,0.256,4,0.229,8,0.203,10,1.942,12,1.398,13,1.332,17,0.019,19,0.311,44,0.542,48,1.464,51,1.852,55,4.143,57,0.334,59,1.329,65,4.541,68,1.397,69,1.393,72,0.957,73,0.63,74,0.63,75,0.957,76,1.334,84,1.005,87,0.373,88,1.608,89,4.143,91,0.311,94,1.334,97,2.463,98,0.229,99,0.311,114,2.807,129,1.464,159,1.398,162,1.766,169,0.014,170,0.014,250,1.763,324,1.969,454,1.105,938,4.771,1069,3.601,1236,3.888,1240,5.586,1242,4.085,1276,4.541,1347,6.276,1348,4.033,1349,4.988,1350,7.035,1351,6.493,1352,4.688,1353,7.185,1354,5.923,1355,5.923,1356,4.688,1357,4.688,1358,4.688,1359,4.688,1360,4.688,1361,5.923,1362,3.601,1363,4.688,1364,4.688,1365,4.688,1366,4.688,1367,4.688,1368,4.688]],["title/components/PaletteComponent.html",[0,0.295,146,1.065]],["body/components/PaletteComponent.html",[0,0.485,1,0.669,2,1.624,3,0.117,4,0.105,5,1.672,6,0.812,7,0.669,8,0.093,10,1.109,11,2.202,12,0.639,13,1.589,14,1.893,17,0.019,19,0.142,24,3.552,30,2.075,38,3.102,40,2.346,41,2.346,42,1.009,44,0.31,48,0.836,49,2.502,51,1.057,57,0.361,58,0.762,59,1.299,68,1.452,69,1.257,72,1.125,73,0.827,74,0.803,75,0.691,76,1.193,84,1.181,85,1.899,87,0.315,88,1.293,91,0.142,94,0.609,98,0.166,99,0.225,119,1.071,126,0.812,127,1.804,128,1.057,129,0.529,130,1.806,131,0.812,132,0.812,133,0.669,134,1.806,135,0.669,136,0.505,137,0.669,138,0.812,139,0.639,140,0.773,141,0.669,142,0.669,143,0.812,144,0.669,145,0.812,146,1.355,147,0.812,148,0.669,149,0.669,150,0.812,151,0.669,152,0.812,153,0.669,154,0.812,155,0.669,156,0.812,157,0.669,158,0.581,159,0.639,160,0.581,161,0.812,162,0.639,163,0.812,164,1.125,165,0.812,166,0.639,167,0.773,168,0.812,169,0.008,170,0.008,173,1.497,174,1.497,178,1.96,181,0.948,182,1.198,183,0.355,184,1.546,187,2.018,212,1.282,213,2.202,214,0.854,217,1.971,220,0.691,221,1.239,232,1.452,241,1.282,245,1.193,263,1.283,265,1.355,317,2.202,319,1.198,321,2.901,322,1.06,325,1.282,326,2.879,343,3.569,384,1.221,389,1.42,433,1.96,434,2.702,436,1.42,442,2.357,454,0.797,488,0.773,530,2.346,541,2.455,554,1.498,579,2.702,580,1.38,581,3.341,582,1.893,583,2.895,584,3.455,585,2.346,586,3.104,587,1.442,588,1.498,589,1.38,590,1.38,591,1.001,592,1.96,593,2.18,594,4.144,595,2.365,596,2.598,597,2.851,598,1.198,599,1.198,600,1.198,601,1.498,602,1.198,603,1.198,604,2.598,605,2.702,606,2.702,607,3.552,608,2.702,609,2.702,610,3.22,611,2.51,612,3.22,613,2.702,614,2.702,615,4.233,616,2.702,617,3.22,618,4.306,619,3.552,620,2.202,621,2.51,622,2.51,623,3.22,624,2.51,625,2.51,626,2.702,627,2.702,628,2.075,629,3.22,630,2.202,631,2.226,632,3.22,633,3.22,634,2.702,635,3.982,636,3.33,637,1.645,638,1.645,639,1.645,640,1.645,641,1.645,642,1.645,643,1.498,644,1.498,645,2.18,646,1.498,647,1.645,648,1.198,649,2.365,650,1.777,651,1.645,652,3.658,653,2.598,654,1.645,655,1.645,656,3.22,657,3.552,658,1.645,659,1.645,660,1.282,661,1.645,662,2.598,663,1.498,664,1.645,665,1.645,666,1.645,667,1.645,668,1.645,669,1.645,670,1.645,671,1.645,672,1.645,673,1.645,674,1.645,675,1.645,676,2.598,677,1.645,678,2.598,679,1.645,680,1.282,681,1.645,682,1.498,683,1.645,684,1.645,685,2.598,686,3.22,687,1.645,688,1.645,689,1.645,690,1.645,691,1.38,692,1.645,693,1.282,694,2.598,695,2.598,696,3.658,697,2.598,698,1.645,699,2.365,700,1.645,701,1.38,702,1.38,703,1.645,704,1.498,705,1.645,706,1.645,707,2.365,708,1.645,709,1.645,710,1.645,711,1.645,712,2.598,713,1.645,714,1.645,1322,2.909,1331,1.842,1369,3.382,1370,3.382,1371,3.382,1372,3.382,1373,2.141,1374,3.382,1375,2.141,1376,2.141,1377,2.141,1378,2.141,1379,2.141,1380,2.141,1381,2.141,1382,2.141,1383,2.141,1384,2.141,1385,2.141,1386,2.141,1387,2.141,1388,2.141,1389,2.141,1390,2.141,1391,2.141,1392,2.141,1393,2.909,1394,2.909,1395,3.382,1396,3.382,1397,3.382,1398,3.382,1399,3.382]],["title/interfaces/PaletteItem.html",[183,0.393,594,2.413]],["body/interfaces/PaletteItem.html",[0,0.493,2,1.181,3,0.163,4,0.146,5,1.189,8,0.129,10,0.977,11,2.285,13,0.67,14,0.809,17,0.019,19,0.198,24,2.804,30,1.476,38,2.807,40,1.668,41,1.668,42,0.889,44,0.398,49,1.566,57,0.366,58,0.828,63,2.285,69,0.609,74,0.891,76,0.848,84,0.932,85,2.048,87,0.354,88,1.533,91,0.198,94,0.848,98,0.213,99,0.198,119,1.269,127,1.765,146,0.848,164,1.049,169,0.01,170,0.01,173,1.32,174,1.32,178,1.394,181,1.32,182,1.668,183,0.457,184,1.532,185,0.977,187,2.175,212,2.605,213,2.698,214,1.189,217,1.606,220,0.888,221,1.409,232,1.211,241,1.785,245,1.461,263,1.65,265,1.606,317,2.966,319,1.668,321,3.713,322,1.476,325,1.785,326,2.401,343,3.485,384,1.076,389,1.684,433,2.034,434,1.921,436,1.252,442,1.476,454,0.703,488,1.076,530,1.668,541,2.742,579,2.804,580,1.921,581,3.31,582,2.434,583,2.966,584,4.116,585,2.874,586,2.605,587,1.496,588,2.085,589,1.921,590,1.921,591,1.394,592,2.034,593,2.804,594,4.04,595,4.199,596,4.612,597,3.075,598,1.668,599,1.668,600,1.668,601,2.085,602,1.668,603,1.668,604,2.29,605,1.921,606,1.921,607,2.804,608,1.921,609,1.921,610,2.29,611,1.785,612,2.29,613,1.921,614,1.921,615,3.341,616,1.921,617,2.29,618,3.592,619,2.804,620,1.566,621,1.785,622,1.785,623,2.29,624,1.785,625,1.785,626,1.921,627,1.921,628,1.476,629,2.29,630,1.566,631,2.034,632,2.29,633,2.29,634,1.921,635,2.29,636,3.042,637,2.29,638,2.29,639,2.29,640,2.29,641,2.29,642,2.29,643,2.085,644,2.085,645,2.804,646,2.085,647,2.29,648,1.668,649,3.042,650,2.285,651,2.29,652,2.29,653,3.341,654,2.29,655,2.29,656,3.945,657,4.04,658,2.29,659,2.29,660,1.785,661,2.29,662,3.341,663,2.085,664,2.29,665,2.29,666,2.29,667,2.29,668,2.29,669,2.29,670,2.29,671,2.29,672,2.29,673,2.29,674,2.29,675,2.29,676,2.29,677,2.29,678,3.341,679,2.29,680,1.785,681,2.29,682,2.085,683,2.29,684,2.29,685,3.341,686,3.945,687,2.29,688,2.29,689,2.29,690,2.29,691,1.921,692,2.29,693,1.785,694,2.29,695,3.341,696,2.29,697,2.29,698,2.29,699,3.042,700,2.29,701,1.921,702,1.921,703,2.29,704,2.085,705,2.29,706,2.29,707,2.085,708,2.29,709,2.29,710,2.29,711,2.29,712,2.29,713,2.29,714,2.29]],["title/interfaces/PaletteOptions.html",[183,0.393,592,1.75]],["body/interfaces/PaletteOptions.html",[0,0.469,2,1.286,3,0.259,4,0.232,8,0.205,17,0.019,19,0.315,44,0.546,57,0.345,58,0.731,69,0.967,74,1.01,87,0.356,98,0.319,158,1.619,164,0.967,169,0.014,170,0.014,178,2.788,179,2.345,183,0.686,184,1.778,185,1.553,221,1.065,265,2.203,380,2.489,384,1.71,488,2.356,539,3.053,582,2.651,583,2.489,587,2.244,591,2.215,592,3.202,598,3.832,599,3.832,600,3.832,602,3.832,603,3.832,630,3.428,631,2.788,648,2.651,758,2.651,871,3.313,947,3.337,987,3.053,988,3.053,989,3.053,990,3.053,991,3.053,992,3.053,1055,3.313,1056,3.639,1057,3.639,1058,3.313,1059,3.639]],["title/interfaces/SVG_CONFIG.html",[183,0.393,1400,1.967]],["body/interfaces/SVG_CONFIG.html",[3,0.272,4,0.244,8,0.216,17,0.018,19,0.331,44,0.563,57,0.357,58,0.854,73,0.669,74,1.003,84,1.431,87,0.272,91,0.331,98,0.351,169,0.015,170,0.015,183,0.647,185,1.633,220,1.363,372,1.714,628,3.451,1400,3.233,1401,2.466,1402,3.485,1403,5.997,1404,4.493,1405,5.355,1406,5.355,1407,4.24,1408,6.153,1409,4.286,1410,3.827,1411,3.827,1412,3.827,1413,3.827,1414,3.827,1415,3.827,1416,3.827,1417,3.827,1418,2.618,1419,3.827,1420,3.211,1421,3.827,1422,3.211,1423,3.827]],["title/classes/SvgIcon.html",[99,0.249,1424,2.618]],["body/classes/SvgIcon.html",[3,0.233,4,0.209,8,0.185,17,0.019,19,0.283,32,3.59,44,0.51,57,0.273,58,0.812,59,1.148,72,0.87,73,0.748,74,0.572,75,0.87,76,1.212,77,3.261,84,1.194,87,0.339,91,0.283,98,0.209,99,0.37,119,1.575,149,1.332,169,0.013,170,0.013,177,2.109,189,2.239,191,1.512,208,2.109,210,3.335,215,1.992,216,1.465,220,1.43,221,0.958,232,1.313,245,1.943,250,1.685,327,2.385,372,1.465,389,1.271,454,1.005,720,4.767,901,2.385,1153,4.334,1198,3.59,1400,2.927,1401,3.258,1404,3.59,1407,3.473,1418,2.239,1424,3.896,1425,3.273,1426,4.261,1427,5.57,1428,4.261,1429,5.338,1430,2.98,1431,4.792,1432,2.98,1433,2.551,1434,3.665,1435,3.665,1436,3.273,1437,3.665,1438,3.665,1439,3.665,1440,3.665,1441,3.665,1442,3.665,1443,3.665,1444,3.665,1445,3.665,1446,3.665,1447,4.792,1448,3.665,1449,3.665,1450,3.665,1451,3.665,1452,3.665,1453,3.665,1454,3.665,1455,3.665,1456,4.792,1457,3.665,1458,3.665,1459,3.665,1460,3.665,1461,3.665,1462,3.665,1463,3.665,1464,4.792,1465,3.665,1466,4.792,1467,4.792,1468,4.792,1469,4.792,1470,3.665,1471,4.792]],["title/components/SvgIconComponent.html",[0,0.295,148,1.17]],["body/components/SvgIconComponent.html",[0,0.385,1,0.858,2,1.111,3,0.15,4,0.134,5,1.952,6,1.041,7,0.858,8,0.119,12,0.818,13,1.649,14,1.948,17,0.019,19,0.182,31,3.036,34,3.036,42,0.818,44,0.375,48,1.011,51,1.279,57,0.343,58,0.834,59,1.336,63,1.442,68,1.486,69,1.242,72,1.287,73,0.949,74,0.847,75,1.287,87,0.267,88,1.711,91,0.182,98,0.134,99,0.272,106,2.288,119,1.219,126,1.041,127,1.53,128,1.814,129,0.678,130,2.057,131,1.041,132,1.041,133,0.858,134,2.057,135,0.858,136,0.647,137,0.858,138,1.041,139,0.818,140,0.991,141,0.858,142,0.858,143,1.041,144,0.858,145,1.041,146,0.781,147,1.041,148,1.696,149,1.53,150,1.041,151,0.858,152,1.041,153,0.858,154,1.041,155,0.858,156,1.041,157,0.858,158,0.745,159,0.818,160,0.745,161,1.041,162,0.818,163,1.041,164,0.56,165,1.041,166,0.818,167,0.991,168,1.041,169,0.01,170,0.01,173,1.812,174,1.812,181,1.215,189,2.85,220,0.836,221,1.1,250,1.881,321,3.036,324,2.909,389,0.818,452,2.45,454,0.965,503,1.919,527,2.845,541,1.952,550,3.921,605,3.154,606,3.154,613,1.769,621,2.93,622,3.774,628,3.011,820,3.036,1025,3.52,1076,4.349,1196,4.209,1198,4.175,1211,2.108,1212,4.209,1213,4.209,1214,3.422,1215,4.209,1216,3.759,1228,4.209,1293,2.108,1400,3.312,1401,3.595,1406,2.108,1410,2.108,1411,2.108,1412,2.108,1413,2.108,1414,3.143,1415,2.108,1416,2.108,1417,2.108,1418,1.442,1430,1.919,1432,1.919,1433,3.248,1436,2.108,1472,2.108,1473,4.842,1474,4.893,1475,5.424,1476,4.893,1477,4.893,1478,5.424,1479,2.744,1480,4.666,1481,4.092,1482,4.092,1483,4.092,1484,4.092,1485,4.092,1486,4.092,1487,4.092,1488,2.744,1489,2.744,1490,2.744,1491,2.744,1492,2.744,1493,2.744,1494,2.744,1495,2.744,1496,2.744,1497,2.744,1498,2.744,1499,2.744,1500,2.744,1501,2.744,1502,2.744,1503,2.744,1504,2.744,1505,2.744,1506,2.744,1507,4.092,1508,2.744,1509,2.744,1510,2.744,1511,4.893,1512,2.744,1513,2.744,1514,2.744,1515,4.666,1516,2.744,1517,2.744,1518,2.744,1519,2.744,1520,2.744,1521,2.744,1522,2.744,1523,2.744,1524,2.744,1525,2.744,1526,2.744,1527,2.744,1528,2.744,1529,2.744,1530,2.744]],["title/injectables/SvgIconRegistry.html",[191,1.016,1433,2.242]],["body/injectables/SvgIconRegistry.html",[3,0.205,4,0.184,8,0.163,17,0.019,19,0.249,32,3.298,44,0.469,48,1.265,57,0.331,58,0.823,59,1.301,68,1.543,69,0.766,72,1.336,73,0.928,74,0.879,75,0.766,76,1.068,77,2.689,84,1.248,87,0.318,91,0.249,98,0.184,99,0.34,119,1.519,149,1.173,169,0.012,170,0.012,189,2.689,191,1.389,208,2.533,210,4.045,215,1.755,216,1.291,220,1.379,221,1.309,245,2.03,250,1.937,327,2.1,372,1.291,389,1.119,454,0.885,561,2.1,720,2.883,901,2.1,1058,3.579,1153,4.045,1198,3.298,1400,3.286,1401,3.532,1404,3.753,1407,3.869,1418,1.972,1424,2.625,1425,2.883,1429,5.81,1430,2.625,1431,5.63,1432,2.625,1433,3.064,1434,5.009,1435,4.402,1436,2.883,1437,3.228,1438,3.228,1439,3.228,1440,3.228,1441,3.228,1442,3.228,1443,5.38,1444,3.228,1445,4.402,1446,3.228,1447,4.402,1448,3.228,1449,3.228,1450,3.228,1451,3.228,1452,3.228,1453,3.228,1454,3.228,1455,3.228,1456,4.402,1457,3.228,1458,4.402,1459,3.228,1460,3.228,1461,3.228,1462,3.228,1463,4.402,1464,5.009,1465,3.228,1466,4.402,1467,4.402,1468,4.402,1469,4.402,1470,4.402,1471,5.009,1531,5.117,1532,5.117,1533,5.117,1534,3.752,1535,3.752,1536,3.752,1537,3.752,1538,3.752,1539,3.752]],["title/interfaces/SvgIconType.html",[183,0.393,1407,2.095]],["body/interfaces/SvgIconType.html",[3,0.286,4,0.256,8,0.227,17,0.018,19,0.348,44,0.581,57,0.31,58,0.866,73,0.953,84,1.462,87,0.286,91,0.348,98,0.355,169,0.015,170,0.015,183,0.667,185,1.717,220,1.393,372,2.439,628,2.592,1400,2.752,1401,2.592,1402,3.663,1403,4.505,1404,3.375,1405,4.023,1406,4.023,1407,4.065,1409,4.505,1410,4.023,1411,4.023,1412,4.023,1413,4.023,1414,4.023,1415,4.023,1416,4.023,1417,4.023,1418,2.752,1419,4.023,1420,3.375,1421,4.023,1422,3.375,1423,4.023]],["title/modules/SvgIconsModule.html",[888,2.413,1066,2.242]],["body/modules/SvgIconsModule.html",[3,0.245,4,0.219,8,0.194,17,0.019,48,1.107,57,0.281,59,1.064,68,1.356,72,1.174,73,0.773,74,0.932,75,0.914,76,1.274,82,4.016,87,0.366,91,0.297,98,0.219,99,0.297,106,2.093,119,1.293,148,2.357,149,1.4,169,0.014,170,0.014,221,1.293,250,1.216,389,1.335,454,1.056,768,3.439,890,2.352,891,3.022,895,3.444,896,2.681,898,3.707,899,3.707,902,4.322,1034,4.948,1066,4.424,1076,3.805,1400,2.352,1401,3.145,1404,4.322,1405,4.418,1407,4.168,1418,3.022,1420,3.707,1422,2.885,1430,3.131,1432,3.131,1433,3.444,1480,3.851,1540,3.851,1541,3.851,1542,3.851,1543,4.477,1544,4.477,1545,5.752,1546,4.477,1547,6.937,1548,4.477,1549,5.752,1550,4.882,1551,4.477,1552,4.477,1553,5.752,1554,5.752,1555,5.752,1556,4.477,1557,4.477,1558,4.477,1559,4.477,1560,4.477,1561,4.477]],["title/directives/TemplateNameDirective.html",[129,0.925,164,0.764]],["body/directives/TemplateNameDirective.html",[3,0.276,4,0.247,8,0.219,12,1.505,13,1.394,14,1.901,17,0.018,19,0.335,42,2.25,44,0.568,51,1.939,57,0.358,58,0.839,59,1.353,72,1.03,73,0.678,74,0.678,79,5.521,87,0.276,88,1.901,91,0.335,98,0.247,99,0.335,129,1.533,159,1.505,164,1.266,169,0.015,170,0.015,210,4.02,232,1.462,327,2.824,454,1.19,541,2.677,584,4.02,595,4.695,1278,3.876,1562,6.376,1563,4.341,1564,5.046,1565,6.201,1566,5.046,1567,5.046,1568,5.046,1569,5.046,1570,5.046]],["title/components/ToastComponent.html",[0,0.295,151,1.17]],["body/components/ToastComponent.html",[0,0.464,1,1.2,2,1.411,3,0.21,4,0.188,6,1.456,7,1.2,8,0.166,10,1.704,12,1.145,13,1.714,14,2.058,17,0.019,19,0.255,42,1.145,44,0.476,48,1.284,51,1.625,57,0.333,58,0.66,59,1.308,68,1.225,69,1.289,72,0.784,73,0.848,74,0.516,75,0.784,76,1.092,80,2.017,82,3.112,87,0.345,88,1.411,91,0.255,94,1.092,98,0.188,99,0.345,126,1.456,127,1.842,128,1.625,129,0.949,130,2.394,131,1.456,132,1.456,133,1.2,134,2.394,135,1.2,136,0.905,137,1.2,138,1.456,139,1.145,140,1.386,141,1.2,142,1.2,143,1.456,144,1.2,145,1.456,146,1.092,147,1.456,148,1.2,149,1.2,150,1.456,151,1.974,152,1.456,153,1.2,154,1.456,155,1.2,156,1.456,157,1.2,158,1.042,159,1.145,160,1.042,161,1.456,162,1.145,163,1.456,164,0.784,165,1.456,166,1.145,167,1.386,168,1.456,169,0.012,170,0.012,250,1.6,389,2.028,436,2.182,454,0.905,631,2.755,645,2.474,660,3.528,819,3.528,820,3.297,939,4.85,957,2.017,980,2.949,1236,3.528,1242,3.78,1276,4.12,1320,5.068,1362,2.949,1571,3.302,1572,7.073,1573,5.196,1574,5.85,1575,3.839,1576,4.756,1577,5.196,1578,5.196,1579,5.196,1580,5.196,1581,4.47,1582,5.196,1583,3.839,1584,3.839,1585,3.839,1586,5.196,1587,3.839,1588,3.839,1589,3.839,1590,3.839,1591,3.302,1592,3.839,1593,3.839,1594,3.839,1595,3.839,1596,3.839,1597,3.839,1598,3.839,1599,3.839,1600,3.302]],["title/injectables/ToastService.html",[191,1.016,1576,2.618]],["body/injectables/ToastService.html",[3,0.378,4,0.265,8,0.235,17,0.018,19,0.36,44,0.593,48,1.6,57,0.265,58,0.726,59,1.28,68,1.277,69,1.106,72,1.106,73,0.727,74,0.727,75,1.106,76,1.541,84,1.387,87,0.354,91,0.36,94,1.541,98,0.265,99,0.36,169,0.015,170,0.015,191,1.47,216,1.863,381,3.788,454,1.632,561,3.031,585,3.874,1574,4.659,1576,4.527,1601,4.659,1602,6.922,1603,6.472,1604,5.416,1605,5.416,1606,5.416,1607,5.416]],["title/components/ToolbarComponent.html",[0,0.295,153,1.17]],["body/components/ToolbarComponent.html",[0,0.446,1,1.115,2,1.342,3,0.195,4,0.175,5,2.262,6,1.353,7,1.115,8,0.155,12,1.064,13,1.701,14,2.086,17,0.019,19,0.237,31,3.173,34,3.173,40,3.722,41,3.173,42,1.826,44,0.453,48,1.222,57,0.3,59,1.189,68,0.841,69,0.728,72,0.728,73,0.822,74,0.479,76,1.613,77,2.597,79,4.356,80,1.874,82,2.959,87,0.31,90,3.069,91,0.237,98,0.175,99,0.328,126,1.353,127,1.773,128,1.545,129,0.882,130,2.322,131,1.353,132,1.353,133,1.115,134,2.322,135,1.115,136,0.841,137,1.115,138,1.353,139,1.064,140,2.21,141,1.115,142,1.115,143,1.353,144,1.115,145,1.353,146,1.015,147,1.353,148,1.115,149,1.914,150,1.353,151,1.115,152,1.353,153,1.914,154,1.353,155,1.115,156,1.353,157,1.115,158,0.969,159,1.064,160,0.969,161,1.353,162,1.064,163,1.353,164,0.728,165,1.353,166,1.064,167,2.21,168,1.353,169,0.012,170,0.012,173,2.188,174,2.188,181,1.579,214,2.262,217,2.206,232,1.568,434,3.655,436,2.075,454,1.165,488,1.288,541,2.653,587,1.227,755,3.537,771,3.966,801,4.702,930,5.048,1008,4.356,1083,2.299,1132,3.655,1134,3.655,1195,4.356,1198,3.655,1199,4.356,1200,4.878,1214,3.966,1216,4.356,1608,3.069,1609,5.67,1610,4.878,1611,4.878,1612,5.67,1613,5.67,1614,5.67,1615,5.67,1616,4.942,1617,4.942,1618,3.567,1619,3.567,1620,3.567,1621,4.942,1622,3.567]],["title/directives/TooltipDirective.html",[129,0.925,166,1.116]],["body/directives/TooltipDirective.html",[0,0.434,3,0.185,4,0.166,8,0.147,10,1.563,12,1.01,13,1.072,14,1.863,17,0.019,19,0.225,30,2.36,37,4.187,44,0.437,48,1.178,51,1.871,57,0.336,58,0.671,59,1.335,68,1.411,69,1.288,72,0.692,73,0.455,74,0.741,75,1.126,76,1.953,77,2.505,87,0.261,88,1.777,91,0.225,98,0.166,99,0.225,103,2.915,127,2.102,128,2.102,129,1.363,159,1.01,166,1.422,167,2.746,169,0.011,170,0.011,221,1.24,232,1.124,245,1.357,263,2.482,265,1.357,274,2.184,327,1.896,374,2.855,389,1.422,433,2.579,442,2.963,454,0.799,488,1.721,527,2.229,530,2.668,541,1.351,584,3.303,619,3.073,620,2.505,625,2.855,631,3.209,650,1.78,787,2.37,802,2.37,819,3.584,820,3.531,855,2.603,861,2.915,872,4.101,874,2.915,930,4.187,938,4.187,940,2.37,957,3.315,1008,4.598,1026,4.101,1115,5.027,1165,3.662,1206,4.598,1236,3.303,1242,3.584,1278,2.603,1293,2.603,1349,4.237,1473,3.662,1550,3.662,1581,5.149,1610,4.101,1623,2.915,1624,5.986,1625,3.388,1626,4.768,1627,5.986,1628,4.768,1629,6.543,1630,3.388,1631,4.768,1632,3.662,1633,4.768,1634,4.101,1635,4.101,1636,4.768,1637,4.768,1638,3.388,1639,6.543,1640,3.662,1641,3.388,1642,3.388,1643,3.388,1644,3.388,1645,3.388,1646,3.388,1647,4.101,1648,4.768,1649,3.388,1650,3.388,1651,3.388,1652,3.388,1653,3.388,1654,2.915,1655,3.388,1656,4.768,1657,4.768,1658,4.768,1659,2.915,1660,3.388,1661,3.388,1662,3.388,1663,3.388,1664,3.388,1665,3.388]],["title/components/TreeComponent.html",[0,0.295,155,1.17]],["body/components/TreeComponent.html",[0,0.471,1,0.738,2,0.991,3,0.129,4,0.115,5,0.941,6,0.895,7,2.276,8,0.102,10,1.196,12,0.704,13,1.614,14,1.926,17,0.019,18,2.029,19,0.333,23,3.51,24,3.235,28,2.351,30,2.484,31,2.809,32,2.351,33,2.802,34,2.809,37,1.65,40,2.042,41,2.042,42,0.704,44,0.334,48,0.902,51,1.14,56,2.671,57,0.31,58,0.761,59,1.143,68,1.28,69,0.911,72,1.108,73,0.83,74,0.729,84,0.506,87,0.244,88,0.991,91,0.157,98,0.115,99,0.242,119,1.003,126,0.895,127,1.394,128,1.14,129,0.583,130,1.904,131,0.895,132,0.895,133,0.738,134,1.904,135,0.738,136,0.556,137,0.738,138,0.895,139,0.704,140,1.812,141,0.738,142,0.738,143,0.895,144,0.738,145,0.895,146,0.671,147,0.895,148,0.738,149,0.738,150,0.895,151,0.738,152,0.895,153,0.738,154,0.895,155,1.569,156,0.895,157,0.738,158,0.641,159,0.704,160,0.641,161,0.895,162,0.704,163,0.895,164,0.482,165,0.895,166,0.704,167,0.852,168,0.895,169,0.009,170,0.009,184,1.33,187,2.34,208,2.484,214,1.455,216,1.726,220,1.108,245,0.671,250,1.211,273,3.235,298,1.455,324,0.991,380,1.24,433,2.086,436,1.532,442,1.806,454,0.556,488,1.812,493,2.671,527,1.706,541,2.164,550,3.235,587,0.811,605,2.875,606,2.875,607,4.316,608,3.698,609,3.698,611,3.005,614,3.498,616,1.521,618,3.12,620,1.24,625,3.25,626,2.351,627,2.351,628,2.686,650,1.24,702,1.521,755,2.84,775,2.802,818,2.029,819,2.671,887,3.138,934,4.596,1005,2.029,1033,2.029,1050,1.521,1109,2.551,1114,1.65,1117,1.65,1121,2.551,1122,3.51,1128,2.551,1131,2.802,1132,2.351,1134,2.875,1153,3.25,1199,2.802,1206,3.426,1211,1.812,1214,2.551,1218,5.317,1220,2.029,1222,4.936,1225,4.318,1233,2.029,1314,4.318,1362,1.812,1550,3.856,1640,4.748,1666,2.029,1667,4.46,1668,3.648,1669,4.46,1670,3.648,1671,2.359,1672,3.648,1673,2.359,1674,2.029,1675,3.648,1676,2.359,1677,2.359,1678,3.648,1679,2.359,1680,2.359,1681,2.359,1682,2.359,1683,2.359,1684,3.648,1685,2.029,1686,2.359,1687,2.359,1688,2.359,1689,2.359,1690,2.359,1691,2.359,1692,2.029,1693,5.427,1694,2.359,1695,4.46,1696,3.648,1697,2.359,1698,3.648,1699,1.812,1700,2.359,1701,2.359,1702,3.648,1703,3.648,1704,2.359,1705,2.359,1706,2.359,1707,2.359,1708,2.359,1709,3.648,1710,2.359,1711,2.359,1712,3.648,1713,3.648,1714,3.648,1715,2.359,1716,2.359,1717,2.359,1718,2.359,1719,6.18,1720,6.597,1721,6.989,1722,2.359,1723,2.359,1724,4.46,1725,4.46,1726,2.359,1727,3.648,1728,4.46,1729,3.648,1730,3.648,1731,2.359,1732,3.648,1733,3.648,1734,2.359,1735,3.648,1736,5.738,1737,5.738,1738,5.019,1739,2.359,1740,4.46,1741,2.359,1742,2.359,1743,2.359,1744,3.648,1745,2.359,1746,2.359,1747,3.648,1748,3.648,1749,2.359,1750,2.359,1751,2.359,1752,2.359,1753,2.359,1754,2.029,1755,2.359,1756,2.359,1757,2.359,1758,4.46,1759,2.359,1760,2.359,1761,2.359,1762,2.359,1763,2.359,1764,3.138,1765,2.359,1766,2.359,1767,2.359,1768,2.359]],["title/interfaces/UIBuilderIcon.html",[183,0.393,1769,2.618]],["body/interfaces/UIBuilderIcon.html",[3,0.211,4,0.189,7,1.631,8,0.167,17,0.019,19,0.256,44,0.478,57,0.31,58,0.663,73,1.033,98,0.376,169,0.012,170,0.012,183,0.406,185,1.266,220,1.557,313,3.124,315,3.124,372,2.646,624,3.124,1130,3.363,1133,3.363,1135,3.363,1137,3.363,1139,3.363,1147,3.363,1149,3.363,1769,5.36,1770,2.701,1771,2.701,1772,5.444,1773,2.967,1774,4.008,1775,2.967,1776,4.008,1777,2.967,1778,4.008,1779,2.967,1780,4.008,1781,2.967,1782,4.008,1783,2.967,1784,4.008,1785,2.967,1786,2.967,1787,2.967,1788,2.967,1789,2.967,1790,2.967,1791,2.967,1792,2.967,1793,2.967,1794,2.967,1795,2.967,1796,4.008,1797,2.967,1798,2.967,1799,4.008,1800,2.967,1801,4.008,1802,3.322,1803,3.862]],["title/modules/UtilsModule.html",[888,2.413,1065,2.242]],["body/modules/UtilsModule.html",[1,2.366,3,0.251,4,0.225,8,0.199,17,0.019,42,1.372,87,0.402,91,0.305,98,0.225,99,0.305,106,2.151,144,2.366,151,2.366,162,2.257,164,1.545,166,2.257,169,0.014,170,0.014,890,2.417,891,3.075,895,3.504,896,2.755,898,3.772,899,3.772,900,4.093,901,2.574,902,3.772,903,3.217,985,3.534,1065,4.657,1804,3.957,1805,3.957,1806,3.957,1807,4.6,1808,4.6,1809,4.6,1810,4.6,1811,4.6,1812,4.6,1813,4.6]],["title/components/ZoneComponent.html",[0,0.295,157,1.17]],["body/components/ZoneComponent.html",[0,0.41,1,0.954,2,1.201,3,0.167,4,0.149,6,1.157,7,0.954,8,0.132,10,1.45,11,2.734,12,0.91,13,1.671,14,2.001,17,0.019,19,0.42,42,0.91,44,0.405,48,1.093,49,2.998,51,1.383,55,3.093,57,0.352,58,0.496,59,1.369,65,3.639,68,1.428,69,1.237,72,1.062,73,0.849,74,0.699,75,0.903,76,1.258,80,1.602,84,0.654,87,0.356,88,1.549,89,3.093,91,0.203,94,0.868,98,0.149,99,0.294,108,3.903,116,2.343,119,0.686,126,1.157,127,1.627,128,1.383,129,0.754,130,2.164,131,1.157,132,1.157,133,0.954,134,2.164,135,0.954,136,0.719,137,0.954,138,1.157,139,0.91,140,1.101,141,0.954,142,0.954,143,1.157,144,0.954,145,1.157,146,0.868,147,1.157,148,0.954,149,0.954,150,1.157,151,0.954,152,1.157,153,0.954,154,1.157,155,0.954,156,1.157,157,1.784,158,1.413,159,0.91,160,0.828,161,1.157,162,0.91,163,1.157,164,0.903,165,1.157,166,0.91,167,1.101,168,1.157,169,0.01,170,0.01,173,1.958,174,1.958,181,1.35,187,1.706,217,2.127,221,0.686,232,1.668,245,0.868,265,0.868,318,3.905,322,1.51,324,2.396,326,3.231,333,1.426,342,2.068,372,2.296,378,2.575,384,2.06,436,1.857,452,2.648,454,1.043,503,2.133,554,3.093,586,3.628,587,1.049,590,1.966,650,1.602,660,3.116,752,2.912,755,3.42,802,3.639,886,2.343,934,3.997,938,3.991,946,4.654,966,4.476,967,3.804,979,2.624,984,2.624,985,2.343,1006,2.343,1019,2.624,1020,3.804,1071,1.826,1083,1.966,1236,3.116,1242,3.417,1244,3.804,1263,4.909,1276,3.639,1301,2.624,1302,3.804,1304,2.624,1349,3.997,1591,2.624,1600,2.624,1814,2.624,1815,4.422,1816,4.422,1817,5.203,1818,5.203,1819,4.422,1820,3.05,1821,3.05,1822,3.05,1823,3.05,1824,3.05,1825,3.05,1826,3.05,1827,4.422,1828,3.05,1829,4.422,1830,3.05,1831,3.05,1832,3.05,1833,3.05,1834,3.05,1835,3.05,1836,4.422,1837,3.05,1838,3.05,1839,3.05,1840,3.05,1841,3.05,1842,3.05,1843,3.05,1844,3.05,1845,3.05,1846,3.05,1847,3.05,1848,3.05]],["title/coverage.html",[1849,4.395]],["body/coverage.html",[0,0.571,1,1.002,8,0.139,9,2.756,17,0.019,23,3.888,57,0.157,63,1.683,84,0.687,99,0.213,114,1.918,129,1.443,133,1.002,135,1.002,136,0.755,137,1.002,139,0.955,141,1.002,142,1.002,144,1.002,146,0.912,148,1.002,151,1.002,153,1.002,155,1.002,157,1.002,160,0.87,162,0.955,164,0.654,166,0.955,169,0.011,170,0.011,171,2.756,172,3.698,179,1.586,183,0.772,184,0.955,186,3.741,191,1.744,211,1.586,217,1.002,317,1.683,318,3.375,319,2.994,320,3.741,323,2.065,326,1.498,371,3.741,377,1.918,382,1.683,432,2.756,546,2.065,548,2.756,579,2.065,580,3.762,587,1.102,592,1.498,594,2.065,597,1.918,747,3.52,755,1.586,805,2.756,925,3.52,947,1.793,948,2.461,1055,3.741,1072,2.241,1076,2.744,1108,3.52,1126,2.241,1229,2.756,1235,2.756,1319,2.756,1347,2.756,1348,2.756,1400,1.683,1401,3.408,1402,4.32,1407,1.793,1418,1.683,1420,2.065,1422,2.065,1424,2.241,1425,3.52,1433,1.918,1472,3.52,1562,2.756,1563,2.756,1571,2.756,1576,2.241,1601,2.756,1608,2.756,1623,2.756,1666,2.756,1769,2.241,1770,5.247,1771,5.247,1773,2.461,1775,2.461,1777,2.461,1779,2.461,1781,2.461,1783,2.461,1785,2.461,1786,2.461,1787,2.461,1788,2.461,1789,2.461,1790,2.461,1791,2.461,1792,2.461,1793,2.461,1794,2.461,1795,2.461,1797,2.461,1798,2.461,1800,2.461,1814,2.756,1849,2.756,1850,2.756,1851,3.204,1852,3.204,1853,3.204,1854,3.204,1855,5.838,1856,6.176,1857,5.349,1858,2.756,1859,3.204,1860,4.582,1861,6.176,1862,3.204,1863,3.204,1864,6.537,1865,7.63,1866,3.204,1867,3.204,1868,3.204,1869,4.582,1870,4.582,1871,3.204,1872,5.349,1873,3.204,1874,3.204,1875,5.349,1876,3.204,1877,3.204,1878,2.756,1879,2.756,1880,3.204,1881,2.756,1882,3.204,1883,3.204,1884,3.204,1885,3.204]],["title/dependencies.html",[891,2.366,1886,2.69]],["body/dependencies.html",[17,0.019,91,0.362,94,1.552,169,0.015,170,0.015,194,4.856,204,3.814,206,3.514,207,3.514,333,2.55,342,2.55,589,3.514,891,2.865,901,3.052,957,2.865,1069,4.189,1071,3.265,1887,5.453,1888,7.591,1889,5.453,1890,6.499,1891,5.59,1892,5.453,1893,5.453,1894,5.453,1895,5.453,1896,5.453,1897,5.453,1898,5.453,1899,5.453,1900,5.453,1901,5.453,1902,5.453,1903,5.453,1904,5.453,1905,5.453,1906,5.453]],["title/miscellaneous/functions.html",[1907,1.872,1908,3.873]],["body/miscellaneous/functions.html",[17,0.017,19,0.391,57,0.288,58,0.66,68,1.388,72,1.202,73,0.791,74,0.791,75,1.202,169,0.016,170,0.016,1076,3.525,1401,2.914,1472,5.222,1515,5.064,1881,5.848,1907,3.525,1908,5.064,1909,4.523]],["title/index.html",[19,0.208,1910,2.69,1911,2.69]],["body/index.html",[0,0.542,2,1.849,4,0.112,5,0.909,7,1.541,8,0.099,10,0.747,11,1.866,13,0.513,14,0.964,17,0.017,20,3.754,28,1.469,39,1.751,42,2.052,49,1.198,51,1.111,56,1.365,57,0.299,59,0.911,72,1.006,73,0.843,74,0.477,76,1.011,82,3.388,84,0.935,87,0.292,88,1.185,91,0.151,94,0.649,98,0.174,99,0.151,110,1.751,127,1.541,136,0.838,158,1.868,169,0.008,170,0.008,176,3.056,187,1.855,193,1.594,206,2.813,207,1.469,213,1.866,214,1.741,216,0.784,217,1.364,221,0.799,232,0.537,263,2.146,273,1.469,274,2.289,275,4.274,276,1.594,298,1.417,331,1.594,333,2.936,334,1.469,342,3.001,343,2.293,358,1.594,372,2.032,373,2.289,374,2.613,375,1.469,378,1.128,380,2.806,389,0.68,428,2.289,429,1.469,454,0.537,488,2.646,493,1.365,518,1.469,527,1.066,530,1.988,539,2.813,541,2.56,545,3.785,550,2.289,583,3.299,589,2.289,619,2.813,630,1.866,631,1.066,634,1.469,636,1.594,643,1.594,644,3.736,649,1.594,660,2.613,680,2.127,682,1.594,691,3.442,693,1.365,701,1.469,702,3.176,752,3.946,761,2.729,762,1.751,792,3.052,930,1.594,954,3.056,957,2.806,1024,1.961,1029,3.056,1043,1.961,1053,4.595,1054,3.056,1071,3.198,1074,4.694,1117,1.594,1118,1.751,1128,1.594,1136,1.751,1158,1.751,1171,1.751,1189,3.056,1191,1.961,1195,1.751,1323,1.961,1340,1.961,1393,3.754,1394,3.056,1473,3.785,1611,1.961,1632,4.346,1634,3.056,1635,3.056,1640,1.751,1647,3.056,1659,1.961,1674,4.239,1685,1.961,1692,4.239,1699,2.729,1864,1.961,1912,6.944,1913,6.539,1914,2.28,1915,4.364,1916,6.278,1917,3.552,1918,3.552,1919,6.944,1920,3.552,1921,2.28,1922,2.28,1923,2.28,1924,2.28,1925,4.364,1926,3.552,1927,2.28,1928,2.28,1929,4.364,1930,3.552,1931,3.552,1932,2.28,1933,5.908,1934,4.928,1935,2.28,1936,3.552,1937,1.961,1938,4.928,1939,2.28,1940,2.28,1941,2.28,1942,2.28,1943,5.658,1944,2.28,1945,2.28,1946,4.928,1947,3.552,1948,3.754,1949,2.28,1950,2.28,1951,4.239,1952,1.961,1953,4.364,1954,5.341,1955,2.28,1956,2.28,1957,3.552,1958,4.364,1959,4.364,1960,4.364,1961,4.928,1962,2.28,1963,3.056,1964,3.552,1965,4.928,1966,2.28,1967,2.28,1968,6.111,1969,2.28,1970,2.28,1971,2.28,1972,3.552,1973,2.28,1974,2.28,1975,2.28,1976,3.552,1977,3.552,1978,4.928,1979,4.928,1980,2.28,1981,2.28,1982,2.28,1983,6.642,1984,2.28,1985,2.28,1986,2.28,1987,5.341,1988,2.28,1989,4.364,1990,2.28,1991,2.28,1992,2.28,1993,3.552,1994,2.28,1995,2.28,1996,2.28,1997,2.28,1998,3.552,1999,2.28,2000,2.28,2001,2.28,2002,2.28,2003,4.364,2004,2.28,2005,3.552,2006,2.28,2007,2.28,2008,2.28,2009,4.928,2010,2.28,2011,2.28,2012,2.28,2013,2.28,2014,2.28,2015,2.28,2016,2.28,2017,2.28,2018,2.28,2019,2.28,2020,4.364,2021,3.552,2022,2.28,2023,2.28,2024,2.28,2025,2.28,2026,2.28,2027,2.28,2028,2.28,2029,2.28,2030,2.28,2031,2.28,2032,2.28,2033,2.28,2034,2.28,2035,2.28,2036,2.28,2037,2.28,2038,2.28,2039,2.28,2040,2.28,2041,2.28,2042,3.552,2043,4.928,2044,2.28,2045,4.364,2046,3.552,2047,3.552,2048,4.364,2049,2.28,2050,2.28,2051,2.28,2052,3.552,2053,2.28,2054,2.28,2055,2.28,2056,2.28,2057,3.552,2058,2.28,2059,3.552,2060,2.28,2061,2.28,2062,2.28,2063,2.28,2064,2.28,2065,2.28,2066,2.28,2067,2.28,2068,4.364,2069,3.552,2070,2.28,2071,3.552,2072,2.28,2073,2.28,2074,2.28,2075,2.28,2076,2.28,2077,3.552,2078,2.28,2079,2.28,2080,2.28,2081,2.28,2082,2.28,2083,2.28,2084,2.28,2085,2.28,2086,2.28,2087,3.552,2088,3.552,2089,2.28,2090,2.28,2091,3.552,2092,2.28,2093,2.28,2094,2.28,2095,2.28,2096,2.28,2097,2.28,2098,2.28,2099,4.364,2100,2.28,2101,2.28,2102,2.28,2103,2.28,2104,2.28,2105,2.28,2106,3.552,2107,2.28,2108,2.28,2109,2.28,2110,2.28,2111,2.28,2112,2.28,2113,2.28,2114,2.28,2115,2.28,2116,2.28,2117,2.28,2118,2.28,2119,2.28,2120,2.28,2121,3.552,2122,2.28,2123,3.552,2124,2.28,2125,2.28,2126,2.28,2127,2.28,2128,2.28,2129,3.552,2130,2.28,2131,2.28,2132,2.28,2133,2.28,2134,2.28,2135,3.552,2136,2.28,2137,2.28,2138,2.28,2139,2.28,2140,2.28,2141,2.28,2142,2.28,2143,3.552,2144,2.28,2145,2.28,2146,2.28,2147,2.28,2148,2.28,2149,2.28,2150,3.552,2151,1.961,2152,2.28,2153,2.28,2154,2.28]],["title/license.html",[1910,2.69,1911,2.69,2155,2.69]],["body/license.html",[17,0.015,39,3.99,93,4.468,106,2.429,108,3.11,169,0.015,170,0.015,259,4.068,272,3.633,545,3.99,585,2.907,1181,3.99,1632,4.848,1654,4.468,1699,5.223,1850,4.468,1937,4.468,1948,4.468,1951,4.468,1952,5.429,1963,5.429,2155,4.468,2156,5.194,2157,6.799,2158,5.194,2159,5.194,2160,6.311,2161,5.194,2162,5.194,2163,5.194,2164,5.194,2165,5.194,2166,5.194,2167,7.579,2168,5.194,2169,5.194,2170,5.194,2171,5.194,2172,5.194,2173,5.194,2174,5.194,2175,5.194,2176,5.194,2177,5.194,2178,5.194,2179,6.311,2180,5.194,2181,5.194,2182,5.194,2183,6.311,2184,5.194,2185,5.194,2186,5.194,2187,5.194,2188,5.194,2189,5.194,2190,5.194,2191,5.194,2192,5.194,2193,5.194,2194,5.194,2195,5.194,2196,5.194,2197,5.194,2198,5.194,2199,5.194,2200,5.194,2201,5.194,2202,5.194,2203,5.194,2204,5.194,2205,5.194,2206,5.194,2207,5.194,2208,5.194,2209,5.194]],["title/modules.html",[890,2.684]],["body/modules.html",[17,0.016,149,2.336,169,0.016,170,0.016,889,3.753,890,3.059,1060,4.072,1065,3.487,1066,3.487,1097,4.072,1891,6.427,2151,6.427,2210,7.472]],["title/overview.html",[2211,4.395]],["body/overview.html",[1,2.205,2,1.102,17,0.019,99,0.27,106,1.898,114,2.431,133,1.894,135,1.894,137,2.205,139,1.807,141,1.894,142,1.894,144,2.205,146,1.724,148,2.205,151,2.205,153,2.205,155,1.894,157,2.205,159,1.211,160,1.915,162,2.103,164,1.44,166,2.103,169,0.013,170,0.013,185,1.331,298,2.152,546,4.546,561,2.272,889,4.454,890,2.133,891,2.835,892,3.492,893,3.492,894,3.492,895,3.231,896,2.431,1060,5.412,1061,3.492,1062,3.492,1063,3.492,1064,3.492,1065,4.652,1066,4.223,1097,5.317,1098,3.492,1099,3.492,1100,3.492,1540,3.492,1541,3.492,1542,3.492,1754,3.492,1764,3.492,1804,3.492,1805,3.492,1806,3.492,1858,3.492,2211,3.492,2212,4.059,2213,4.059]],["title/properties.html",[44,0.412,1886,2.69]],["body/properties.html",[17,0.017,44,0.556,169,0.016,170,0.016,2214,6.067,2215,6.067]],["title/miscellaneous/typealiases.html",[1907,1.872,2216,4.502]],["body/miscellaneous/typealiases.html",[7,1.722,17,0.019,19,0.366,57,0.27,169,0.015,170,0.015,313,3.299,315,3.299,624,3.299,982,5.625,1130,3.551,1133,3.551,1135,3.551,1137,3.551,1139,3.551,1147,3.551,1149,3.551,1770,3.853,1771,4.877,1772,5.625,1774,4.232,1776,4.232,1778,4.232,1780,4.232,1782,4.232,1784,4.232,1796,4.232,1799,4.232,1801,4.232,1802,5.625,1907,3.299,1909,5.023,2217,5.51,2218,5.51,2219,5.51]],["title/miscellaneous/variables.html",[1907,1.872,2220,3.873]],["body/miscellaneous/variables.html",[7,1.043,17,0.019,19,0.221,57,0.371,73,1.009,75,1.557,76,2.17,84,1.172,169,0.011,170,0.011,313,1.997,315,1.997,372,2.583,389,2.102,580,2.149,592,2.205,597,3.275,598,1.866,599,1.866,600,1.866,601,2.333,602,1.866,603,1.866,624,1.997,925,2.562,947,1.866,948,3.622,987,2.149,988,2.149,989,2.149,990,2.149,991,2.149,992,2.149,1072,3.297,1130,2.149,1133,2.149,1135,2.149,1137,2.149,1139,2.149,1147,2.149,1149,2.149,1401,1.651,1402,2.333,1418,2.477,1419,2.562,1420,3.039,1421,2.562,1422,3.039,1423,2.562,1769,5.253,1770,2.333,1771,5.27,1773,4.201,1774,2.562,1775,4.201,1776,2.562,1777,4.201,1778,2.562,1779,4.201,1780,2.562,1781,4.201,1782,2.562,1783,4.201,1784,2.562,1785,4.201,1786,4.201,1787,4.201,1788,4.201,1789,4.201,1790,4.201,1791,4.201,1792,4.201,1793,4.201,1794,4.201,1795,4.201,1796,2.562,1797,4.201,1798,4.201,1799,2.562,1800,4.201,1801,2.562,1878,2.869,1879,4.056,1907,1.997,1909,5.77,2220,2.869,2221,3.335,2222,3.335,2223,3.335,2224,5.469]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"interfaces/UIBuilderIcon.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":23,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentCreator.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/ItemComponent.html":{},"components/TreeComponent.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1906,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":612,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["0.2rem",{"_index":1210,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["0.2s",{"_index":1215,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SvgIconComponent.html":{}}}],["0.3rem",{"_index":1219,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["0.3s",{"_index":1741,"title":{},"body":{"components/TreeComponent.html":{}}}],["0.4s",{"_index":1223,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["0.5rem",{"_index":613,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SvgIconComponent.html":{}}}],["0.5s",{"_index":1767,"title":{},"body":{"components/TreeComponent.html":{}}}],["0.75rem",{"_index":1525,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["0.7em",{"_index":623,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["0/1",{"_index":1865,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1855,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1880,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1871,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1854,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1877,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1869,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1870,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":1853,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1861,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":1876,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1857,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1860,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1856,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1872,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1868,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1875,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":1225,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/TreeComponent.html":{}}}],["0deg",{"_index":1213,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SvgIconComponent.html":{}}}],["0px",{"_index":1727,"title":{},"body":{"components/TreeComponent.html":{}}}],["1",{"_index":298,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"components/ConditionEditorComponent.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/TreeComponent.html":{},"index.html":{},"overview.html":{}}}],["1).join",{"_index":308,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["1.0.0",{"_index":2215,"title":{},"body":{"properties.html":{}}}],["1.0.1",{"_index":1897,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":1895,"title":{},"body":{"dependencies.html":{}}}],["1.1.19",{"_index":1894,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":1526,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["1/22",{"_index":1859,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1874,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":32,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"components/TreeComponent.html":{}}}],["1000",{"_index":1355,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["105px",{"_index":1192,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["10px",{"_index":1722,"title":{},"body":{"components/TreeComponent.html":{}}}],["11",{"_index":1873,"title":{},"body":{"coverage.html":{}}}],["12.2.5",{"_index":1888,"title":{},"body":{"dependencies.html":{}}}],["12px",{"_index":1233,"title":{},"body":{"components/HtmlEditorComponent.html":{},"components/TreeComponent.html":{}}}],["14",{"_index":2213,"title":{},"body":{"overview.html":{}}}],["14l6",{"_index":1763,"title":{},"body":{"components/TreeComponent.html":{}}}],["15",{"_index":1862,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1754,"title":{},"body":{"components/TreeComponent.html":{},"overview.html":{}}}],["16'%3e%3cpath",{"_index":1755,"title":{},"body":{"components/TreeComponent.html":{}}}],["1].match(/\\d",{"_index":304,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["1fr",{"_index":1193,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["1px",{"_index":608,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/TreeComponent.html":{}}}],["1rem",{"_index":1475,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["2",{"_index":1964,"title":{},"body":{"index.html":{}}}],["2.0.0",{"_index":1901,"title":{},"body":{"dependencies.html":{}}}],["2.11.0",{"_index":1899,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1904,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":1528,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["200px",{"_index":35,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{}}}],["2021",{"_index":2158,"title":{},"body":{"license.html":{}}}],["20px",{"_index":1314,"title":{},"body":{"components/ItemComponent.html":{},"components/TreeComponent.html":{}}}],["22px",{"_index":1199,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{}}}],["25px",{"_index":1200,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/ToolbarComponent.html":{}}}],["2px",{"_index":627,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/TreeComponent.html":{}}}],["2rem",{"_index":1527,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["3",{"_index":20,"title":{},"body":{"components/AutocompleteComponent.html":{},"index.html":{}}}],["3.0.0",{"_index":1896,"title":{},"body":{"dependencies.html":{}}}],["3/20",{"_index":1863,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1882,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":1628,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["35px",{"_index":1747,"title":{},"body":{"components/TreeComponent.html":{}}}],["3px",{"_index":615,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["3s",{"_index":1615,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["4",{"_index":1858,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["4/13",{"_index":1883,"title":{},"body":{"coverage.html":{}}}],["40px",{"_index":435,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["43",{"_index":1312,"title":{},"body":{"components/ItemComponent.html":{}}}],["4px",{"_index":1220,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/TreeComponent.html":{}}}],["5",{"_index":2212,"title":{},"body":{"overview.html":{}}}],["5.1.3",{"_index":1900,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":1867,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1208,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["5000",{"_index":1582,"title":{},"body":{"components/ToastComponent.html":{}}}],["5px",{"_index":24,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/TreeComponent.html":{}}}],["6",{"_index":1764,"title":{},"body":{"components/TreeComponent.html":{},"overview.html":{}}}],["6'/%3e%3c/svg%3e",{"_index":1765,"title":{},"body":{"components/TreeComponent.html":{}}}],["6.6.3",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["61",{"_index":1207,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["73",{"_index":1204,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["75",{"_index":1205,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["7c7c7c",{"_index":629,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["7px",{"_index":25,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["8",{"_index":27,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["83",{"_index":1866,"title":{},"body":{"coverage.html":{}}}],["90deg",{"_index":1197,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["90px",{"_index":928,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["9px",{"_index":1726,"title":{},"body":{"components/TreeComponent.html":{}}}],["_",{"_index":691,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["_class",{"_index":817,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["_container",{"_index":213,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["_data",{"_index":1239,"title":{},"body":{"components/ItemComponent.html":{}}}],["_getconfig",{"_index":715,"title":{},"body":{"injectables/ConfigService.html":{}}}],["_getconfig(id",{"_index":251,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["_hoveredid",{"_index":756,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["_raw",{"_index":662,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["_showtree",{"_index":933,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["a.orders[id",{"_index":1707,"title":{},"body":{"components/TreeComponent.html":{}}}],["a:focus",{"_index":1737,"title":{},"body":{"components/TreeComponent.html":{}}}],["a:hover",{"_index":1736,"title":{},"body":{"components/TreeComponent.html":{}}}],["above",{"_index":1951,"title":{},"body":{"index.html":{},"license.html":{}}}],["abritrarily",{"_index":2044,"title":{},"body":{"index.html":{}}}],["absolute",{"_index":1725,"title":{},"body":{"components/TreeComponent.html":{}}}],["accessors",{"_index":452,"title":{},"body":{"components/ConditionEditorComponent.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/FlexEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ZoneComponent.html":{}}}],["according",{"_index":1972,"title":{},"body":{"index.html":{}}}],["achieved",{"_index":1947,"title":{},"body":{"index.html":{}}}],["action",{"_index":39,"title":{},"body":{"components/AutocompleteComponent.html":{},"index.html":{},"license.html":{}}}],["activate",{"_index":453,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["activate(value",{"_index":528,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["actual_component",{"_index":168,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["add",{"_index":680,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["addentities",{"_index":197,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["addentities(config",{"_index":231,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["addentities(v",{"_index":291,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["addhighlight",{"_index":807,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["additional",{"_index":2088,"title":{},"body":{"index.html":{}}}],["additionally",{"_index":2064,"title":{},"body":{"index.html":{}}}],["addvalue",{"_index":440,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["addvaluetolist",{"_index":441,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["addvaluetolist(values",{"_index":459,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["aftercontentinit",{"_index":1349,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{},"directives/TooltipDirective.html":{},"components/ZoneComponent.html":{}}}],["afterviewinit",{"_index":1320,"title":{},"body":{"components/ModalComponent.html":{},"components/ToastComponent.html":{}}}],["aliases",{"_index":2217,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1132,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{}}}],["align:center",{"_index":1313,"title":{},"body":{"components/ItemComponent.html":{}}}],["align_x_center",{"_index":1774,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["align_x_end",{"_index":1776,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["align_x_space_around",{"_index":1778,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["align_x_space_between",{"_index":1780,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["align_x_start",{"_index":1782,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["align_x_stretch",{"_index":1784,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["align_y_baseline",{"_index":1139,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["align_y_center",{"_index":1133,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["align_y_end",{"_index":1135,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["align_y_start",{"_index":1130,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["align_y_stretch",{"_index":1137,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["alignment",{"_index":1118,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"index.html":{}}}],["alignmenthorizontal",{"_index":1111,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["alignmentvertical",{"_index":1112,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["allconfigchanges",{"_index":1287,"title":{},"body":{"components/ItemComponent.html":{}}}],["allow",{"_index":1610,"title":{},"body":{"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{}}}],["allows",{"_index":2043,"title":{},"body":{"index.html":{}}}],["allsuggests",{"_index":52,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["already",{"_index":693,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["always",{"_index":2037,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":2177,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1916,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1887,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":901,"title":{},"body":{"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"modules/UtilsModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1889,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":91,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":1069,"title":{},"body":{"modules/ConfiguratorModule.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1890,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1892,"title":{},"body":{"dependencies.html":{}}}],["anim",{"_index":1614,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["animation",{"_index":1579,"title":{},"body":{"components/ToastComponent.html":{}}}],["another",{"_index":334,"title":{},"body":{"interfaces/ComponentCreator.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"index.html":{}}}],["anymore",{"_index":2148,"title":{},"body":{"index.html":{}}}],["anywhere",{"_index":2063,"title":{},"body":{"index.html":{}}}],["app",{"_index":1938,"title":{},"body":{"index.html":{}}}],["append",{"_index":1639,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["application",{"_index":1919,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1917,"title":{},"body":{"index.html":{}}}],["apply",{"_index":1843,"title":{},"body":{"components/ZoneComponent.html":{}}}],["arborescence",{"_index":1984,"title":{},"body":{"index.html":{}}}],["arguments",{"_index":833,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["aria",{"_index":1500,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["arising",{"_index":2207,"title":{},"body":{"license.html":{}}}],["around",{"_index":1156,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["arrange",{"_index":658,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["array",{"_index":1172,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["array.isarray(icons",{"_index":1459,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["array.isarray(this.data",{"_index":1845,"title":{},"body":{"components/ZoneComponent.html":{}}}],["arrow",{"_index":1613,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["arrow_down",{"_index":1147,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["arrow_forward",{"_index":1149,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["associated",{"_index":2168,"title":{},"body":{"license.html":{}}}],["authors",{"_index":2199,"title":{},"body":{"license.html":{}}}],["auto",{"_index":37,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{}}}],["autocomplete",{"_index":15,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{}}}],["autocomplete'},{'name",{"_index":132,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["autocomplete.component",{"_index":1810,"title":{},"body":{"modules/UtilsModule.html":{}}}],["autocompletecomponent",{"_index":1,"title":{"components/AutocompleteComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["autohide",{"_index":1580,"title":{},"body":{"components/ToastComponent.html":{}}}],["automatically",{"_index":1993,"title":{},"body":{"index.html":{}}}],["available",{"_index":2061,"title":{},"body":{"index.html":{}}}],["avoid",{"_index":929,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["b",{"_index":1706,"title":{},"body":{"components/TreeComponent.html":{}}}],["b.orders[id",{"_index":1708,"title":{},"body":{"components/TreeComponent.html":{}}}],["backdrop",{"_index":1015,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ModalComponent.html":{}}}],["background",{"_index":616,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/TreeComponent.html":{}}}],["based",{"_index":2020,"title":{},"body":{"index.html":{}}}],["baseline",{"_index":1140,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["basket",{"_index":1931,"title":{},"body":{"index.html":{}}}],["becomes",{"_index":2121,"title":{},"body":{"index.html":{}}}],["before",{"_index":701,"title":{},"body":{"interfaces/ConfigModal.html":{},"directives/ConfigurableDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["behavior",{"_index":760,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["behaviorsubject",{"_index":753,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["behaviorsubject(false",{"_index":766,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["being",{"_index":2124,"title":{},"body":{"index.html":{}}}],["between",{"_index":1158,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"index.html":{}}}],["bg",{"_index":1201,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["bindings",{"_index":1990,"title":{},"body":{"index.html":{}}}],["black",{"_index":1766,"title":{},"body":{"components/TreeComponent.html":{}}}],["block",{"_index":606,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SvgIconComponent.html":{},"components/TreeComponent.html":{}}}],["blocks",{"_index":1942,"title":{},"body":{"index.html":{}}}],["blur",{"_index":107,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["blur').pipe(filter",{"_index":104,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["body",{"_index":927,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["bold",{"_index":1316,"title":{},"body":{"components/ItemComponent.html":{}}}],["boolean",{"_index":265,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"directives/TooltipDirective.html":{},"components/ZoneComponent.html":{}}}],["bootstrap",{"_index":957,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ModalComponent.html":{},"components/ToastComponent.html":{},"directives/TooltipDirective.html":{},"dependencies.html":{},"index.html":{}}}],["bootstrap/dist/css/bootstrap",{"_index":2113,"title":{},"body":{"index.html":{}}}],["border",{"_index":607,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/TreeComponent.html":{}}}],["bottom",{"_index":620,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{}}}],["box",{"_index":21,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["browse",{"_index":2210,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1891,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["btn",{"_index":434,"title":{},"body":{"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ToolbarComponent.html":{}}}],["btn.disabled",{"_index":1609,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["builder",{"_index":1913,"title":{},"body":{"index.html":{}}}],["builder\";(obviously",{"_index":2116,"title":{},"body":{"index.html":{}}}],["builder/styles/ui",{"_index":2115,"title":{},"body":{"index.html":{}}}],["builder:make",{"_index":2130,"title":{},"body":{"index.html":{}}}],["building",{"_index":1941,"title":{},"body":{"index.html":{}}}],["built",{"_index":2009,"title":{},"body":{"index.html":{}}}],["buttons",{"_index":1195,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["c",{"_index":1181,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"license.html":{}}}],["c.id",{"_index":688,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["c.type",{"_index":686,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["call",{"_index":871,"title":{},"body":{"directives/ConfigurableDirective.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{}}}],["callback",{"_index":1057,"title":{},"body":{"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{}}}],["cancel",{"_index":1321,"title":{},"body":{"components/ModalComponent.html":{}}}],["canredo",{"_index":311,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["canundo",{"_index":309,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["capture",{"_index":993,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["card",{"_index":16,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["care",{"_index":2141,"title":{},"body":{"index.html":{}}}],["case",{"_index":518,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"index.html":{}}}],["cases",{"_index":2092,"title":{},"body":{"index.html":{}}}],["catch(e",{"_index":426,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["caused",{"_index":109,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["causes",{"_index":1337,"title":{},"body":{"components/ModalComponent.html":{}}}],["ccc",{"_index":1222,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/TreeComponent.html":{}}}],["cdr",{"_index":946,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ZoneComponent.html":{}}}],["cdref",{"_index":635,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["center",{"_index":1134,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{}}}],["certain",{"_index":2085,"title":{},"body":{"index.html":{}}}],["change",{"_index":539,"title":{},"body":{"components/ConditionEditorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"index.html":{}}}],["change.directive",{"_index":1812,"title":{},"body":{"modules/UtilsModule.html":{}}}],["change.directive.ts",{"_index":1348,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{},"coverage.html":{}}}],["change.directive.ts:11",{"_index":1354,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["change.directive.ts:15",{"_index":1358,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["change.directive.ts:26",{"_index":1359,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["change.directive.ts:8",{"_index":1356,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["change.directive.ts:9",{"_index":1357,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["changedetection",{"_index":173,"title":{},"body":{"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SvgIconComponent.html":{},"components/ToolbarComponent.html":{},"components/ZoneComponent.html":{}}}],["changedetectionstrategy",{"_index":181,"title":{},"body":{"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SvgIconComponent.html":{},"components/ToolbarComponent.html":{},"components/ZoneComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":174,"title":{},"body":{"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SvgIconComponent.html":{},"components/ToolbarComponent.html":{},"components/ZoneComponent.html":{}}}],["changedetectorref",{"_index":586,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ZoneComponent.html":{}}}],["changes",{"_index":650,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["changes.conditionsdata",{"_index":1281,"title":{},"body":{"components/ItemComponent.html":{}}}],["changes.config",{"_index":1170,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["changes.dataindex",{"_index":1280,"title":{},"body":{"components/ItemComponent.html":{}}}],["changing",{"_index":2125,"title":{},"body":{"index.html":{}}}],["charge",{"_index":2164,"title":{},"body":{"license.html":{}}}],["check",{"_index":562,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["check(condition",{"_index":387,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["checkcondition",{"_index":563,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["checkcondition(condition",{"_index":410,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["checkdata",{"_index":564,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["checkdata(condition",{"_index":407,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["checked",{"_index":1202,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["checkequals",{"_index":565,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["checkequals(condition",{"_index":418,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["checkregexp",{"_index":566,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["checkregexp(condition",{"_index":421,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["checksinglevalue",{"_index":567,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["checksinglevalue(condition",{"_index":415,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["child",{"_index":1691,"title":{},"body":{"components/TreeComponent.html":{}}}],["child's",{"_index":1694,"title":{},"body":{"components/TreeComponent.html":{}}}],["child::after",{"_index":1730,"title":{},"body":{"components/TreeComponent.html":{}}}],["child::before",{"_index":1734,"title":{},"body":{"components/TreeComponent.html":{}}}],["child:before",{"_index":1731,"title":{},"body":{"components/TreeComponent.html":{}}}],["children",{"_index":934,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["children(id",{"_index":1672,"title":{},"body":{"components/TreeComponent.html":{}}}],["claim",{"_index":2202,"title":{},"body":{"license.html":{}}}],["class",{"_index":99,"title":{"classes/SvgIcon.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["classeditorcomponent",{"_index":133,"title":{"components/ClassEditorComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":177,"title":{},"body":{"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"classes/SvgIcon.html":{}}}],["cli",{"_index":2128,"title":{},"body":{"index.html":{}}}],["click",{"_index":110,"title":{},"body":{"components/AutocompleteComponent.html":{},"directives/ConfigurableDirective.html":{},"index.html":{}}}],["click(event",{"_index":839,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["clickconfigurable",{"_index":904,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["clickconfigurable(configurable",{"_index":781,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["clickinprogress",{"_index":45,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["clicks",{"_index":2007,"title":{},"body":{"index.html":{}}}],["close",{"_index":581,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["cluster_configurablemodule",{"_index":892,"title":{},"body":{"modules/ConfigurableModule.html":{},"overview.html":{}}}],["cluster_configurablemodule_declarations",{"_index":894,"title":{},"body":{"modules/ConfigurableModule.html":{},"overview.html":{}}}],["cluster_configurablemodule_exports",{"_index":893,"title":{},"body":{"modules/ConfigurableModule.html":{},"overview.html":{}}}],["cluster_configuratormodule",{"_index":1061,"title":{},"body":{"modules/ConfiguratorModule.html":{},"overview.html":{}}}],["cluster_configuratormodule_declarations",{"_index":1063,"title":{},"body":{"modules/ConfiguratorModule.html":{},"overview.html":{}}}],["cluster_configuratormodule_exports",{"_index":1062,"title":{},"body":{"modules/ConfiguratorModule.html":{},"overview.html":{}}}],["cluster_configuratormodule_imports",{"_index":1064,"title":{},"body":{"modules/ConfiguratorModule.html":{},"overview.html":{}}}],["cluster_dynamicviewsmodule",{"_index":1098,"title":{},"body":{"modules/DynamicViewsModule.html":{},"overview.html":{}}}],["cluster_dynamicviewsmodule_declarations",{"_index":1099,"title":{},"body":{"modules/DynamicViewsModule.html":{},"overview.html":{}}}],["cluster_dynamicviewsmodule_exports",{"_index":1100,"title":{},"body":{"modules/DynamicViewsModule.html":{},"overview.html":{}}}],["cluster_dynamicviewsmodule_imports",{"_index":1101,"title":{},"body":{"modules/DynamicViewsModule.html":{}}}],["cluster_svgiconsmodule",{"_index":1540,"title":{},"body":{"modules/SvgIconsModule.html":{},"overview.html":{}}}],["cluster_svgiconsmodule_declarations",{"_index":1541,"title":{},"body":{"modules/SvgIconsModule.html":{},"overview.html":{}}}],["cluster_svgiconsmodule_exports",{"_index":1542,"title":{},"body":{"modules/SvgIconsModule.html":{},"overview.html":{}}}],["cluster_utilsmodule",{"_index":1804,"title":{},"body":{"modules/UtilsModule.html":{},"overview.html":{}}}],["cluster_utilsmodule_declarations",{"_index":1805,"title":{},"body":{"modules/UtilsModule.html":{},"overview.html":{}}}],["cluster_utilsmodule_exports",{"_index":1806,"title":{},"body":{"modules/UtilsModule.html":{},"overview.html":{}}}],["code",{"_index":1915,"title":{},"body":{"index.html":{}}}],["coercecsspixelvalue",{"_index":1881,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["coercecsspixelvalue(value",{"_index":1515,"title":{},"body":{"components/SvgIconComponent.html":{},"miscellaneous/functions.html":{}}}],["color",{"_index":628,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/SVG_CONFIG.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconType.html":{},"components/TreeComponent.html":{}}}],["color(color",{"_index":1519,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["column",{"_index":1050,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/TreeComponent.html":{}}}],["columns",{"_index":1191,"title":{},"body":{"components/FlexEditorComponent.html":{},"index.html":{}}}],["comes",{"_index":2119,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":900,"title":{},"body":{"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/UtilsModule.html":{}}}],["compatible",{"_index":683,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["compile",{"_index":2145,"title":{},"body":{"index.html":{}}}],["complete",{"_index":638,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["completely",{"_index":2069,"title":{},"body":{"index.html":{}}}],["complex",{"_index":2045,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":1893,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"index.html":{}}}],["component.id",{"_index":357,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["component_template",{"_index":131,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["componentconfig",{"_index":184,"title":{"interfaces/ComponentConfig.html":{}},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/TreeComponent.html":{},"coverage.html":{}}}],["componentconfig|undefined",{"_index":268,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["componentcreator",{"_index":317,"title":{"interfaces/ComponentCreator.html":{}},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"coverage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{},"overview.html":{}}}],["condition",{"_index":136,"title":{"interfaces/Condition.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"index.html":{}}}],["condition.$regexp",{"_index":424,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["condition.data",{"_index":385,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["condition.field",{"_index":516,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["condition.or",{"_index":395,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["condition.pipe",{"_index":1107,"title":{},"body":{"modules/DynamicViewsModule.html":{}}}],["condition.type",{"_index":404,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["condition.value",{"_index":430,"title":{},"body":{"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["condition.value.tolowercase",{"_index":419,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["condition.values.every(v",{"_index":414,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["condition.values.find(v",{"_index":412,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["condition.values.map(v",{"_index":396,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["conditional",{"_index":1054,"title":{},"body":{"components/ConfiguratorComponent.html":{},"index.html":{}}}],["conditionally",{"_index":542,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["conditioneditorcomponent",{"_index":135,"title":{"components/ConditionEditorComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["conditionpipe",{"_index":546,"title":{"pipes/ConditionPipe.html":{}},"body":{"pipes/ConditionPipe.html":{},"modules/DynamicViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["conditions",{"_index":545,"title":{},"body":{"components/ConditionEditorComponent.html":{},"index.html":{},"license.html":{}}}],["conditions.service",{"_index":209,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["conditionsdata",{"_index":378,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ItemComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["conditionsdata?.[condition.data",{"_index":386,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["conditionservice",{"_index":555,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["conditionsservice",{"_index":382,"title":{"injectables/ConditionsService.html":{}},"body":{"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"components/ItemComponent.html":{},"coverage.html":{}}}],["conditionvalue",{"_index":377,"title":{"interfaces/ConditionValue.html":{}},"body":{"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"coverage.html":{}}}],["conf",{"_index":269,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["conf?.type",{"_index":270,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["config",{"_index":221,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"directives/TooltipDirective.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["config.currency",{"_index":1957,"title":{},"body":{"index.html":{}}}],["config.icons",{"_index":1439,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["config.id",{"_index":1041,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["config.jsonthe",{"_index":2132,"title":{},"body":{"index.html":{}}}],["config.missingiconfallback",{"_index":1441,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["config2",{"_index":1048,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["config2.id",{"_index":1049,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["config=my",{"_index":2131,"title":{},"body":{"index.html":{}}}],["configchanged",{"_index":582,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{}}}],["configchanges",{"_index":1284,"title":{},"body":{"components/ItemComponent.html":{}}}],["configmodal",{"_index":579,"title":{"interfaces/ConfigModal.html":{}},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"coverage.html":{}}}],["configs",{"_index":1380,"title":{},"body":{"components/PaletteComponent.html":{}}}],["configs.filter(c",{"_index":679,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["configservice",{"_index":217,"title":{"injectables/ConfigService.html":{}},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ToolbarComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"index.html":{}}}],["configservice.watchconfig(context!.id).pipe",{"_index":999,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["configurable",{"_index":587,"title":{"interfaces/Configurable.html":{}},"body":{"interfaces/ConfigModal.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{}}}],["configurable.directive",{"_index":754,"title":{},"body":{"interfaces/Configurable.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{}}}],["configurable.id",{"_index":777,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["configurable.service",{"_index":857,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["configurable.zone",{"_index":785,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["configurable/configurable.module",{"_index":1104,"title":{},"body":{"modules/DynamicViewsModule.html":{}}}],["configurable/configurable.service",{"_index":588,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["configurable]'},{'name",{"_index":161,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["configurabledirective",{"_index":160,"title":{"directives/ConfigurableDirective.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configurabledirectivemap",{"_index":772,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["configurablemodule",{"_index":889,"title":{"modules/ConfigurableModule.html":{}},"body":{"modules/ConfigurableModule.html":{},"modules/DynamicViewsModule.html":{},"modules.html":{},"overview.html":{}}}],["configurableservice",{"_index":755,"title":{"injectables/ConfigurableService.html":{}},"body":{"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{}}}],["configurableservice.watchedited().pipe",{"_index":995,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["configuration",{"_index":488,"title":{},"body":{"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["configuration/conditions.service",{"_index":558,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["configuration/config.service",{"_index":322,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ZoneComponent.html":{}}}],["configurationmap",{"_index":1669,"title":{},"body":{"components/TreeComponent.html":{}}}],["configurations",{"_index":1999,"title":{},"body":{"index.html":{}}}],["configurator",{"_index":583,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"index.html":{}}}],["configurator'},{'name",{"_index":138,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["configurator.component",{"_index":1079,"title":{},"body":{"modules/ConfiguratorModule.html":{}}}],["configurator.component.html",{"_index":932,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["configurator.models",{"_index":182,"title":{},"body":{"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["configuratorcomponent",{"_index":137,"title":{"components/ConfiguratorComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["configuratorcontext",{"_index":179,"title":{"interfaces/ConfiguratorContext.html":{}},"body":{"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/HtmlEditorComponent.html":{},"interfaces/PaletteOptions.html":{},"coverage.html":{}}}],["configuratormodule",{"_index":1060,"title":{"modules/ConfiguratorModule.html":{}},"body":{"modules/ConfiguratorModule.html":{},"modules.html":{},"overview.html":{}}}],["configuratoroptions",{"_index":947,"title":{"interfaces/ConfiguratorOptions.html":{}},"body":{"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configurators",{"_index":630,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"index.html":{}}}],["configure",{"_index":1393,"title":{},"body":{"components/PaletteComponent.html":{},"index.html":{}}}],["configured",{"_index":1396,"title":{},"body":{"components/PaletteComponent.html":{}}}],["configuring",{"_index":2082,"title":{},"body":{"index.html":{}}}],["conflict",{"_index":2102,"title":{},"body":{"index.html":{}}}],["connection",{"_index":2208,"title":{},"body":{"license.html":{}}}],["connector",{"_index":1739,"title":{},"body":{"components/TreeComponent.html":{}}}],["conponent",{"_index":1397,"title":{},"body":{"components/PaletteComponent.html":{}}}],["console.error(\"unexpected",{"_index":351,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["console.log(\"remove",{"_index":713,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["console.log('cancelled",{"_index":1305,"title":{},"body":{"components/ItemComponent.html":{}}}],["console.log('change",{"_index":247,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["console.log('dropped",{"_index":1301,"title":{},"body":{"components/ItemComponent.html":{},"components/ZoneComponent.html":{}}}],["console.log('new",{"_index":287,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["console.log('update",{"_index":285,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["console.log('watch",{"_index":238,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["console.warn(\"incorrect",{"_index":427,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["console.warn('toast",{"_index":1598,"title":{},"body":{"components/ToastComponent.html":{}}}],["const",{"_index":220,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"components/TreeComponent.html":{},"interfaces/UIBuilderIcon.html":{}}}],["constraint",{"_index":2000,"title":{},"body":{"index.html":{}}}],["constructed",{"_index":637,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["constructor",{"_index":454,"title":{},"body":{"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConfigModal.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["constructor(cdr",{"_index":944,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["constructor(conditionsservice",{"_index":455,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["constructor(configservice",{"_index":1083,"title":{},"body":{"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"components/ToolbarComponent.html":{},"components/ZoneComponent.html":{}}}],["constructor(configurableservice",{"_index":818,"title":{},"body":{"directives/ConfigurableDirective.html":{},"components/TreeComponent.html":{}}}],["constructor(content",{"_index":1426,"title":{},"body":{"classes/SvgIcon.html":{}}}],["constructor(dragdropservice",{"_index":1373,"title":{},"body":{"components/PaletteComponent.html":{}}}],["constructor(el",{"_index":1625,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["constructor(host",{"_index":1479,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["constructor(injector",{"_index":1435,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["constructor(ngmodel",{"_index":1352,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["constructor(private",{"_index":1362,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{},"components/ToastComponent.html":{},"components/TreeComponent.html":{}}}],["constructor(public",{"_index":327,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"directives/TemplateNameDirective.html":{},"directives/TooltipDirective.html":{}}}],["constructor(template",{"_index":1564,"title":{},"body":{"directives/TemplateNameDirective.html":{}}}],["constructor(toastservice",{"_index":1575,"title":{},"body":{"components/ToastComponent.html":{}}}],["contain",{"_index":2042,"title":{},"body":{"index.html":{}}}],["container",{"_index":263,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"directives/TooltipDirective.html":{},"index.html":{}}}],["container.items.findindex(item",{"_index":1037,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["container.items.splice(index",{"_index":353,"title":{},"body":{"interfaces/ComponentCreator.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["container.items.splice(index+1",{"_index":1045,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["container.items.splice(newindex",{"_index":369,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["container.items.splice(oldindex",{"_index":368,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["containerconfig",{"_index":211,"title":{"interfaces/ContainerConfig.html":{}},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"coverage.html":{}}}],["containerid",{"_index":330,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["containerindex",{"_index":323,"title":{"interfaces/ContainerIndex.html":{}},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"coverage.html":{}}}],["containerindex).container",{"_index":335,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["containers",{"_index":1983,"title":{},"body":{"index.html":{}}}],["containing",{"_index":2137,"title":{},"body":{"index.html":{}}}],["content",{"_index":1153,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"components/TreeComponent.html":{}}}],["contentchild",{"_index":90,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ToolbarComponent.html":{}}}],["contentchild(\"itemtpl",{"_index":100,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["contentchild('itemtpl",{"_index":81,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["contentchild(templateref",{"_index":1621,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["contentchildren",{"_index":979,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ZoneComponent.html":{}}}],["contentchildren(templatenamedirective",{"_index":967,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ZoneComponent.html":{}}}],["context",{"_index":178,"title":{},"body":{"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/HtmlEditorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{}}}],["context.id",{"_index":1038,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["context.parentid",{"_index":1035,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["contract",{"_index":2205,"title":{},"body":{"license.html":{}}}],["convert",{"_index":1171,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"index.html":{}}}],["copies",{"_index":2179,"title":{},"body":{"license.html":{}}}],["copy",{"_index":259,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"license.html":{}}}],["copyright",{"_index":2157,"title":{},"body":{"license.html":{}}}],["correct",{"_index":875,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["correctly",{"_index":2111,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":1976,"title":{},"body":{"index.html":{}}}],["corresponds",{"_index":1965,"title":{},"body":{"index.html":{}}}],["cost",{"_index":2120,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1849,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":530,"title":{},"body":{"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"directives/TooltipDirective.html":{},"index.html":{}}}],["createconfig",{"_index":321,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SvgIconComponent.html":{}}}],["createconfig(newid",{"_index":348,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["creates",{"_index":1994,"title":{},"body":{"index.html":{}}}],["createstate",{"_index":192,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["creating",{"_index":2028,"title":{},"body":{"index.html":{}}}],["creator",{"_index":325,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["css",{"_index":176,"title":{},"body":{"components/ClassEditorComponent.html":{},"index.html":{}}}],["currency",{"_index":1934,"title":{},"body":{"index.html":{}}}],["current",{"_index":489,"title":{},"body":{"components/ConditionEditorComponent.html":{},"directives/ConfigurableDirective.html":{}}}],["currentcolor",{"_index":1474,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["currently",{"_index":757,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["cursor",{"_index":40,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{}}}],["custom",{"_index":644,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["customizing",{"_index":2118,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":1652,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["d='m5",{"_index":1762,"title":{},"body":{"components/TreeComponent.html":{}}}],["damages",{"_index":2203,"title":{},"body":{"license.html":{}}}],["dashed",{"_index":1221,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{}}}],["data",{"_index":372,"title":{},"body":{"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ItemComponent.html":{},"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"interfaces/UIBuilderIcon.html":{},"components/ZoneComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data'}['${condition.field",{"_index":405,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["data'}['${condition.field}'].match(/${value.value",{"_index":403,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["data.description",{"_index":1956,"title":{},"body":{"index.html":{}}}],["data.name",{"_index":1955,"title":{},"body":{"index.html":{}}}],["data?.[condition.field]?.tostring",{"_index":408,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["data[index",{"_index":1847,"title":{},"body":{"components/ZoneComponent.html":{}}}],["dataindex",{"_index":748,"title":{},"body":{"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ItemComponent.html":{}}}],["deal",{"_index":2170,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2209,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":1360,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["debouncetime(this.ngmodeldebouncetime",{"_index":1365,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["debug",{"_index":492,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["debugtext",{"_index":438,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["declarations",{"_index":898,"title":{},"body":{"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/SvgIconsModule.html":{},"modules/UtilsModule.html":{}}}],["declare",{"_index":593,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["decoration",{"_index":1735,"title":{},"body":{"components/TreeComponent.html":{}}}],["decorators",{"_index":80,"title":{},"body":{"components/AutocompleteComponent.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/ZoneComponent.html":{}}}],["deep",{"_index":258,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["default",{"_index":76,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/ZoneComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultconfiguratoroptions",{"_index":948,"title":{},"body":{"components/ConfiguratorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultpaletteoptions",{"_index":597,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1025,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/SvgIconComponent.html":{}}}],["defaultsize",{"_index":1403,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{}}}],["define",{"_index":1953,"title":{},"body":{"index.html":{}}}],["defined",{"_index":59,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["defines",{"_index":2016,"title":{},"body":{"index.html":{}}}],["delay",{"_index":1581,"title":{},"body":{"components/ToastComponent.html":{},"directives/TooltipDirective.html":{}}}],["delete",{"_index":533,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["deleteallentities",{"_index":203,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["deleteentities",{"_index":202,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["depend",{"_index":1971,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":891,"title":{"dependencies.html":{}},"body":{"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/SvgIconsModule.html":{},"modules/UtilsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependent",{"_index":2098,"title":{},"body":{"index.html":{}}}],["depending",{"_index":1059,"title":{},"body":{"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{}}}],["description",{"_index":1674,"title":{},"body":{"components/TreeComponent.html":{},"index.html":{}}}],["desirable",{"_index":2126,"title":{},"body":{"index.html":{}}}],["detection",{"_index":1651,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["developer",{"_index":1936,"title":{},"body":{"index.html":{}}}],["different",{"_index":1634,"title":{},"body":{"directives/TooltipDirective.html":{},"index.html":{}}}],["direction",{"_index":1117,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["directions",{"_index":1113,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["directive",{"_index":129,"title":{"directives/ConfigurableDirective.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"directives/TemplateNameDirective.html":{},"directives/TooltipDirective.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{}}}],["directives",{"_index":159,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"overview.html":{}}}],["directly",{"_index":2052,"title":{},"body":{"index.html":{}}}],["disable",{"_index":813,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["disabled",{"_index":1008,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{}}}],["disableif",{"_index":859,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["display",{"_index":541,"title":{},"body":{"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SvgIconComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["displayed",{"_index":1968,"title":{},"body":{"index.html":{}}}],["displays",{"_index":2039,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":1361,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["distribute",{"_index":2175,"title":{},"body":{"license.html":{}}}],["div",{"_index":1466,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["div.innerhtml",{"_index":1468,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["div.queryselector('svg",{"_index":1469,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["dnddropevent",{"_index":1263,"title":{},"body":{"components/ItemComponent.html":{},"components/ZoneComponent.html":{}}}],["dndmodule",{"_index":1070,"title":{},"body":{"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{}}}],["document",{"_index":1429,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["documentation",{"_index":1850,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dollar",{"_index":2012,"title":{},"body":{"index.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["don't",{"_index":788,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["drag",{"_index":342,"title":{},"body":{"interfaces/ComponentCreator.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/ItemComponent.html":{},"components/ZoneComponent.html":{},"dependencies.html":{},"index.html":{}}}],["dragdropservice",{"_index":326,"title":{"injectables/DragDropService.html":{}},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ZoneComponent.html":{},"coverage.html":{}}}],["dragged",{"_index":2054,"title":{},"body":{"index.html":{}}}],["draggedcreator",{"_index":328,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["dragplaceholder",{"_index":1310,"title":{},"body":{"components/ItemComponent.html":{}}}],["drop",{"_index":333,"title":{},"body":{"interfaces/ComponentCreator.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/ItemComponent.html":{},"components/ZoneComponent.html":{},"dependencies.html":{},"index.html":{}}}],["drop.service",{"_index":590,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ZoneComponent.html":{}}}],["drop.service.ts",{"_index":320,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"coverage.html":{}}}],["drop.service.ts:20",{"_index":1084,"title":{},"body":{"injectables/DragDropService.html":{}}}],["drop.service.ts:21",{"_index":1095,"title":{},"body":{"injectables/DragDropService.html":{}}}],["drop.service.ts:23",{"_index":1096,"title":{},"body":{"injectables/DragDropService.html":{}}}],["drop.service.ts:25",{"_index":1088,"title":{},"body":{"injectables/DragDropService.html":{}}}],["drop.service.ts:53",{"_index":1086,"title":{},"body":{"injectables/DragDropService.html":{}}}],["drop.service.ts:62",{"_index":1090,"title":{},"body":{"injectables/DragDropService.html":{}}}],["drop.service.ts:73",{"_index":1092,"title":{},"body":{"injectables/DragDropService.html":{}}}],["drop.service.ts:84",{"_index":1094,"title":{},"body":{"injectables/DragDropService.html":{}}}],["dropped",{"_index":331,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"index.html":{}}}],["dropped.container",{"_index":338,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["dropped.index",{"_index":340,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["duplicate",{"_index":937,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["duplicate(context",{"_index":951,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["dynamic",{"_index":589,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"dependencies.html":{},"index.html":{}}}],["dynamicviewsmodule",{"_index":1097,"title":{"modules/DynamicViewsModule.html":{}},"body":{"modules/DynamicViewsModule.html":{},"modules.html":{},"overview.html":{}}}],["each",{"_index":1954,"title":{},"body":{"index.html":{}}}],["ease",{"_index":1216,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToolbarComponent.html":{}}}],["easily",{"_index":1920,"title":{},"body":{"index.html":{}}}],["edit",{"_index":601,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"miscellaneous/variables.html":{}}}],["edited",{"_index":758,"title":{},"body":{"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{}}}],["edition",{"_index":1007,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["editor",{"_index":175,"title":{},"body":{"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{}}}],["editor'},{'name",{"_index":134,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["editor.component.html",{"_index":437,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["editor.component.scss",{"_index":1110,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["editor.component.ts",{"_index":172,"title":{},"body":{"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:101",{"_index":458,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:105",{"_index":463,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:110",{"_index":465,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:115",{"_index":467,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:121",{"_index":469,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:17",{"_index":1120,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["editor.component.ts:18",{"_index":180,"title":{},"body":{"components/ClassEditorComponent.html":{}}}],["editor.component.ts:20",{"_index":1160,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["editor.component.ts:22",{"_index":457,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{}}}],["editor.component.ts:24",{"_index":1162,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{}}}],["editor.component.ts:25",{"_index":481,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:27",{"_index":482,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:28",{"_index":1152,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["editor.component.ts:29",{"_index":483,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:31",{"_index":456,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:33",{"_index":1159,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["editor.component.ts:34",{"_index":480,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:37",{"_index":461,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:41",{"_index":471,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":1145,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["editor.component.ts:53",{"_index":474,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:56",{"_index":1164,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["editor.component.ts:58",{"_index":1119,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["editor.component.ts:59",{"_index":477,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:62",{"_index":1146,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["editor.component.ts:63",{"_index":479,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:65",{"_index":1123,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["editor.component.ts:72",{"_index":1129,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["editor.component.ts:76",{"_index":460,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:77",{"_index":1127,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["editor.component.ts:83",{"_index":476,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:87",{"_index":485,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editor.component.ts:91",{"_index":487,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["editorenabled",{"_index":765,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["editors",{"_index":955,"title":{},"body":{"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{}}}],["el",{"_index":819,"title":{},"body":{"directives/ConfigurableDirective.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/ToastComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{}}}],["el.parents",{"_index":1703,"title":{},"body":{"components/TreeComponent.html":{}}}],["el.parents.includes(id",{"_index":1704,"title":{},"body":{"components/TreeComponent.html":{}}}],["el?.addhighlight",{"_index":1718,"title":{},"body":{"components/TreeComponent.html":{}}}],["el?.click(new",{"_index":1710,"title":{},"body":{"components/TreeComponent.html":{}}}],["el?.nativeelement.removeattribute(\"selected",{"_index":885,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["el?.nativeelement.scrollintoview({behavior",{"_index":1712,"title":{},"body":{"components/TreeComponent.html":{}}}],["el?.nativeelement.setattribute(\"selected",{"_index":882,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["element",{"_index":128,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["element'id",{"_index":759,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["elementref",{"_index":820,"title":{},"body":{"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"directives/TooltipDirective.html":{}}}],["elements",{"_index":1977,"title":{},"body":{"index.html":{}}}],["elf",{"_index":2021,"title":{},"body":{"index.html":{}}}],["embedded",{"_index":1339,"title":{},"body":{"components/ModalComponent.html":{}}}],["enabled",{"_index":802,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"directives/TooltipDirective.html":{},"components/ZoneComponent.html":{}}}],["enablerawhtml",{"_index":599,"title":{},"body":{"interfaces/ConfigModal.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["enablesubcontainers",{"_index":598,"title":{},"body":{"interfaces/ConfigModal.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["encapsulate",{"_index":2104,"title":{},"body":{"index.html":{}}}],["encapsulation",{"_index":2097,"title":{},"body":{"index.html":{}}}],["end",{"_index":1136,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"index.html":{}}}],["ensure",{"_index":240,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["entities",{"_index":204,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"dependencies.html":{}}}],["equal",{"_index":1996,"title":{},"body":{"index.html":{}}}],["equals",{"_index":375,"title":{},"body":{"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"index.html":{}}}],["erase",{"_index":532,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["etc",{"_index":2048,"title":{},"body":{"index.html":{}}}],["eur",{"_index":1929,"title":{},"body":{"index.html":{}}}],["euro",{"_index":2011,"title":{},"body":{"index.html":{}}}],["evaluated",{"_index":490,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["event",{"_index":108,"title":{},"body":{"components/AutocompleteComponent.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ZoneComponent.html":{},"license.html":{}}}],["event.data",{"_index":1304,"title":{},"body":{"components/ItemComponent.html":{},"components/ZoneComponent.html":{}}}],["event.index",{"_index":1302,"title":{},"body":{"components/ItemComponent.html":{},"components/ZoneComponent.html":{}}}],["event.stoppropagation",{"_index":869,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["event.type",{"_index":117,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["eventemitter",{"_index":65,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/ZoneComponent.html":{}}}],["events",{"_index":771,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"components/ToolbarComponent.html":{}}}],["exactly",{"_index":2146,"title":{},"body":{"index.html":{}}}],["example",{"_index":1969,"title":{},"body":{"index.html":{}}}],["exist",{"_index":786,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["existing",{"_index":636,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["existingpalette",{"_index":633,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["exists",{"_index":241,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["experience",{"_index":2033,"title":{},"body":{"index.html":{}}}],["export",{"_index":98,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"interfaces/UIBuilderIcon.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["exports",{"_index":899,"title":{},"body":{"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/SvgIconsModule.html":{},"modules/UtilsModule.html":{}}}],["express",{"_index":2190,"title":{},"body":{"license.html":{}}}],["expression",{"_index":429,"title":{},"body":{"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"index.html":{}}}],["extends",{"_index":212,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["extract",{"_index":954,"title":{},"body":{"components/ConfiguratorComponent.html":{},"index.html":{}}}],["eye",{"_index":1799,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["eye_slash",{"_index":1801,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["fact",{"_index":1997,"title":{},"body":{"index.html":{}}}],["false",{"_index":77,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{}}}],["false).sort((a",{"_index":1705,"title":{},"body":{"components/TreeComponent.html":{}}}],["family",{"_index":1231,"title":{},"body":{"components/HtmlEditorComponent.html":{}}}],["features",{"_index":2013,"title":{},"body":{"index.html":{}}}],["field",{"_index":373,"title":{},"body":{"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"index.html":{}}}],["fields",{"_index":439,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"interfaces/UIBuilderIcon.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":2169,"title":{},"body":{"license.html":{}}}],["fill",{"_index":1228,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SvgIconComponent.html":{}}}],["fill='none",{"_index":1756,"title":{},"body":{"components/TreeComponent.html":{}}}],["filter",{"_index":95,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"interfaces/ContainerConfig.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["filter((parent",{"_index":1686,"title":{},"body":{"components/TreeComponent.html":{}}}],["filter(config",{"_index":244,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["find(item",{"_index":281,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["find(p",{"_index":684,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["findparent",{"_index":716,"title":{},"body":{"injectables/ConfigService.html":{}}}],["findparent(id",{"_index":279,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["fine",{"_index":1932,"title":{},"body":{"index.html":{}}}],["first",{"_index":1024,"title":{},"body":{"components/ConfiguratorComponent.html":{},"index.html":{}}}],["fitness",{"_index":2195,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":1340,"title":{},"body":{"components/ModalComponent.html":{},"index.html":{}}}],["flex",{"_index":140,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["flexbox",{"_index":2077,"title":{},"body":{"index.html":{}}}],["flexeditorcomponent",{"_index":139,"title":{"components/FlexEditorComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["flexoption",{"_index":1126,"title":{"interfaces/FlexOption.html":{}},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"coverage.html":{}}}],["focus",{"_index":103,"title":{},"body":{"components/AutocompleteComponent.html":{},"directives/TooltipDirective.html":{}}}],["focused",{"_index":1661,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["following",{"_index":1948,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":621,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SvgIconComponent.html":{}}}],["fontsize",{"_index":1478,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["fontsize(value",{"_index":1518,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["foo",{"_index":2072,"title":{},"body":{"index.html":{}}}],["forchild",{"_index":1544,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["forchild(icons",{"_index":1545,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["foreach((parent",{"_index":1689,"title":{},"body":{"components/TreeComponent.html":{}}}],["form",{"_index":2068,"title":{},"body":{"index.html":{}}}],["forms",{"_index":1946,"title":{},"body":{"index.html":{}}}],["formsmodule",{"_index":1068,"title":{},"body":{"modules/ConfiguratorModule.html":{}}}],["forroot",{"_index":1548,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["forroot(config",{"_index":1549,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["found",{"_index":1599,"title":{},"body":{"components/ToastComponent.html":{}}}],["framework",{"_index":2103,"title":{},"body":{"index.html":{}}}],["free",{"_index":2163,"title":{},"body":{"license.html":{}}}],["freely",{"_index":665,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["fromevent",{"_index":92,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["fromevent(this.inputelement",{"_index":102,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["function",{"_index":63,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"interfaces/Configurable.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/PaletteItem.html":{},"components/SvgIconComponent.html":{},"coverage.html":{}}}],["functional",{"_index":2006,"title":{},"body":{"index.html":{}}}],["functions",{"_index":1908,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":2182,"title":{},"body":{"license.html":{}}}],["gap",{"_index":1209,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["generate",{"_index":1043,"title":{},"body":{"components/ConfiguratorComponent.html":{},"index.html":{}}}],["generateautopalette",{"_index":652,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["generated",{"_index":2060,"title":{},"body":{"index.html":{}}}],["generateexistingpalette",{"_index":1369,"title":{},"body":{"components/PaletteComponent.html":{}}}],["generateexistingpalette(configs",{"_index":676,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["generateid",{"_index":717,"title":{},"body":{"injectables/ConfigService.html":{}}}],["generateid(type",{"_index":296,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["generates",{"_index":2138,"title":{},"body":{"index.html":{}}}],["get(key",{"_index":1445,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["get_class",{"_index":854,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["getactivate",{"_index":484,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["getalignment",{"_index":1163,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["getall",{"_index":1443,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["getallconfig",{"_index":235,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["getconfig",{"_index":718,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getconfig(id",{"_index":253,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["getcontainer",{"_index":719,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getcontainer(id",{"_index":260,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["getdirection",{"_index":1161,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["getelement",{"_index":1496,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["getentities",{"_index":201,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["getentity",{"_index":196,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["gethoveredid",{"_index":921,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["getisarray",{"_index":1839,"title":{},"body":{"components/ZoneComponent.html":{}}}],["getsvgelement",{"_index":1531,"title":{},"body":{"injectables/SvgIconRegistry.html":{}}}],["getsvgelement(name",{"_index":1463,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["getting",{"_index":1910,"title":{"index.html":{},"license.html":{}},"body":{}}],["given",{"_index":273,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["giving",{"_index":2032,"title":{},"body":{"index.html":{}}}],["globally",{"_index":2101,"title":{},"body":{"index.html":{}}}],["granted",{"_index":2162,"title":{},"body":{"license.html":{}}}],["grey",{"_index":610,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["grid",{"_index":1190,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["grip",{"_index":624,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":29,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{}}}],["handlecancel",{"_index":352,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["handlecancel(index",{"_index":1085,"title":{},"body":{"injectables/DragDropService.html":{}}}],["handledrop",{"_index":329,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["handledrop(containerid",{"_index":1087,"title":{},"body":{"injectables/DragDropService.html":{}}}],["having",{"_index":2053,"title":{},"body":{"index.html":{}}}],["heart",{"_index":2015,"title":{},"body":{"index.html":{}}}],["height",{"_index":34,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"components/SvgIconComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{}}}],["height(value",{"_index":1516,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["height='16",{"_index":1752,"title":{},"body":{"components/TreeComponent.html":{}}}],["hello",{"_index":2073,"title":{},"body":{"index.html":{}}}],["hence",{"_index":1988,"title":{},"body":{"index.html":{}}}],["here",{"_index":1637,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hereby",{"_index":2161,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":1501,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["hide",{"_index":112,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["hiding",{"_index":931,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["hierachical",{"_index":1982,"title":{},"body":{"index.html":{}}}],["hierarchical",{"_index":2038,"title":{},"body":{"index.html":{}}}],["hierarchy",{"_index":276,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"index.html":{}}}],["highlight",{"_index":808,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["history",{"_index":207,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"dependencies.html":{},"index.html":{}}}],["historystate",{"_index":218,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["holders",{"_index":2200,"title":{},"body":{"license.html":{}}}],["horizontal",{"_index":1150,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["host",{"_index":1473,"title":{},"body":{"components/SvgIconComponent.html":{},"directives/TooltipDirective.html":{},"index.html":{}}}],["hostbinding",{"_index":855,"title":{},"body":{"directives/ConfigurableDirective.html":{},"components/ItemComponent.html":{},"directives/TooltipDirective.html":{}}}],["hostbinding('class",{"_index":863,"title":{},"body":{"directives/ConfigurableDirective.html":{},"components/ItemComponent.html":{}}}],["hostbinding('disabled",{"_index":1653,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hostbindings",{"_index":814,"title":{},"body":{"directives/ConfigurableDirective.html":{},"components/ItemComponent.html":{}}}],["hostlistener",{"_index":856,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["hostlistener('click",{"_index":841,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["hostlistener('mouseenter",{"_index":846,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["hostlistener('mouseleave",{"_index":844,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["hostlistener('mouseover",{"_index":848,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["hostlisteners",{"_index":815,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["hover",{"_index":1206,"title":{},"body":{"components/FlexEditorComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{}}}],["hover(id",{"_index":1675,"title":{},"body":{"components/TreeComponent.html":{}}}],["hoveredid",{"_index":775,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/TreeComponent.html":{}}}],["hoveredid(id",{"_index":773,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["hsl(0",{"_index":1311,"title":{},"body":{"components/ItemComponent.html":{}}}],["hsl(80",{"_index":1203,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["html",{"_index":127,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["htmleditorcomponent",{"_index":141,"title":{"components/HtmlEditorComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["htmlelement",{"_index":853,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["htmlinputelement",{"_index":61,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["i18n",{"_index":2150,"title":{},"body":{"index.html":{}}}],["icon",{"_index":1198,"title":{},"body":{"components/FlexEditorComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"components/ToolbarComponent.html":{}}}],["icon'},{'name",{"_index":150,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["icon.component",{"_index":1552,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["icon.component.ts",{"_index":1472,"title":{},"body":{"components/SvgIconComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["icon.component.ts:29",{"_index":1485,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:42",{"_index":1486,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:46",{"_index":1487,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:50",{"_index":1484,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:55",{"_index":1483,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:60",{"_index":1482,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:64",{"_index":1489,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:65",{"_index":1481,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:76",{"_index":1497,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.component.ts:80",{"_index":1488,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["icon.content",{"_index":1456,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["icon.init",{"_index":1447,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["icon.module",{"_index":1077,"title":{},"body":{"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{}}}],["icon.module.ts",{"_index":1543,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["icon.module.ts:12",{"_index":1551,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["icon.module.ts:24",{"_index":1546,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["icon/registry.ts",{"_index":1425,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"coverage.html":{}}}],["icon/registry.ts:14",{"_index":1539,"title":{},"body":{"injectables/SvgIconRegistry.html":{}}}],["icon/registry.ts:15",{"_index":1533,"title":{},"body":{"injectables/SvgIconRegistry.html":{}}}],["icon/registry.ts:29",{"_index":1535,"title":{},"body":{"injectables/SvgIconRegistry.html":{}}}],["icon/registry.ts:33",{"_index":1534,"title":{},"body":{"injectables/SvgIconRegistry.html":{}}}],["icon/registry.ts:55",{"_index":1537,"title":{},"body":{"injectables/SvgIconRegistry.html":{}}}],["icon/registry.ts:63",{"_index":1536,"title":{},"body":{"injectables/SvgIconRegistry.html":{}}}],["icon/registry.ts:7",{"_index":1427,"title":{},"body":{"classes/SvgIcon.html":{}}}],["icon/registry.ts:76",{"_index":1538,"title":{},"body":{"injectables/SvgIconRegistry.html":{}}}],["icon/registry.ts:9",{"_index":1428,"title":{},"body":{"classes/SvgIcon.html":{}}}],["icon/svg",{"_index":1076,"title":{},"body":{"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"components/SvgIconComponent.html":{},"modules/SvgIconsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["icon/types.ts",{"_index":1402,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["iconclass",{"_index":595,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"directives/TemplateNameDirective.html":{}}}],["icons",{"_index":1404,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{}}}],["icons.ts",{"_index":1771,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["iconslibrary",{"_index":1072,"title":{},"body":{"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":187,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["identifier",{"_index":1851,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":2040,"title":{},"body":{"index.html":{}}}],["idx",{"_index":297,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["if(!array.isarray(value",{"_index":288,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["if(!condition",{"_index":388,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["if(!condition.$regexp",{"_index":422,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["if(!params",{"_index":559,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["if(!this._getconfig(v.id",{"_index":290,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["if(!this.options.showexistingpalette",{"_index":677,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["if(!this.options.showstandardpalette",{"_index":654,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["if(changes.data",{"_index":1279,"title":{},"body":{"components/ItemComponent.html":{}}}],["if(component",{"_index":356,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["if(condition.data",{"_index":514,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["if(condition.field",{"_index":513,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["if(condition.or",{"_index":411,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["if(condition.type",{"_index":400,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["if(configurator",{"_index":698,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["if(context.parentid",{"_index":1044,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["if(context.zone",{"_index":1047,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["if(data",{"_index":521,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["if(i",{"_index":1186,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["if(notify",{"_index":501,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["if(this.allsuggests",{"_index":121,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["if(this.configservice.iscontainerconfig(config",{"_index":1294,"title":{},"body":{"components/ItemComponent.html":{}}}],["if(this.context.config.condition",{"_index":496,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["if(this.disableif",{"_index":864,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["if(this.el.nativeelement.classlist.contains('d",{"_index":1308,"title":{},"body":{"components/ItemComponent.html":{}}}],["if(this.modal?.close",{"_index":708,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["if(this.show",{"_index":1335,"title":{},"body":{"components/ModalComponent.html":{}}}],["if(this.suggestgenerator",{"_index":118,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["if(tokens[tokens.length",{"_index":303,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["if(typeof",{"_index":116,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ItemComponent.html":{},"components/ZoneComponent.html":{}}}],["if(value",{"_index":529,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["image",{"_index":1979,"title":{},"body":{"index.html":{}}}],["img",{"_index":1499,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["immediately",{"_index":2031,"title":{},"body":{"index.html":{}}}],["implements",{"_index":10,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConfigModal.html":{},"directives/ConfigurableDirective.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ToastComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["implied",{"_index":2191,"title":{},"body":{"license.html":{}}}],["import",{"_index":87,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["important",{"_index":1234,"title":{},"body":{"components/HtmlEditorComponent.html":{}}}],["imports",{"_index":903,"title":{},"body":{"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/UtilsModule.html":{}}}],["include",{"_index":1960,"title":{},"body":{"index.html":{}}}],["included",{"_index":2184,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2023,"title":{},"body":{"index.html":{}}}],["including",{"_index":1952,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"interfaces/UIBuilderIcon.html":{},"components/ZoneComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":188,"title":{},"body":{"interfaces/ComponentConfig.html":{}}}],["infinity",{"_index":227,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"interfaces/UIBuilderIcon.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{}}}],["info(message",{"_index":1604,"title":{},"body":{"injectables/ToastService.html":{}}}],["info(message:string",{"_index":1606,"title":{},"body":{"injectables/ToastService.html":{}}}],["init",{"_index":720,"title":{},"body":{"injectables/ConfigService.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["init(initialvalue",{"_index":219,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["initialize",{"_index":643,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["initialized",{"_index":1973,"title":{},"body":{"index.html":{}}}],["initialvalue",{"_index":222,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["inject",{"_index":1430,"title":{},"body":{"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{}}}],["inject(svg_icons",{"_index":1557,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["inject(svg_icons_config",{"_index":1436,"title":{},"body":{"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{}}}],["inject(svg_missing_icon_fallback",{"_index":1558,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["injectable",{"_index":191,"title":{"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"injectables/ConfigurableService.html":{},"injectables/DragDropService.html":{},"injectables/SvgIconRegistry.html":{},"injectables/ToastService.html":{}},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["injectable({providedin",{"_index":381,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"injectables/ToastService.html":{}}}],["injectables",{"_index":561,"title":{},"body":{"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"injectables/ConfigurableService.html":{},"injectables/DragDropService.html":{},"injectables/SvgIconRegistry.html":{},"injectables/ToastService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":1409,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{}}}],["injectiontoken('svg_icons",{"_index":1421,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('svg_icons_config",{"_index":1419,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('svg_missing_icon_fallback",{"_index":1423,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":1431,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["injector.get(document",{"_index":1438,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["inline",{"_index":605,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SvgIconComponent.html":{},"components/TreeComponent.html":{}}}],["inner",{"_index":2078,"title":{},"body":{"index.html":{}}}],["input",{"_index":88,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SvgIconComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["input(\"uib",{"_index":858,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["input('uib",{"_index":1278,"title":{},"body":{"components/ItemComponent.html":{},"directives/TemplateNameDirective.html":{},"directives/TooltipDirective.html":{}}}],["input:checked",{"_index":1744,"title":{},"body":{"components/TreeComponent.html":{}}}],["input[type=\"checkbox",{"_index":1746,"title":{},"body":{"components/TreeComponent.html":{}}}],["input[type='radio",{"_index":1217,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["input[type='radio']:checked",{"_index":1224,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["inputelement",{"_index":53,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["inputs",{"_index":51,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["insert",{"_index":1394,"title":{},"body":{"components/PaletteComponent.html":{},"index.html":{}}}],["insertion",{"_index":2066,"title":{},"body":{"index.html":{}}}],["insertnew",{"_index":355,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["insertnew(container",{"_index":1089,"title":{},"body":{"injectables/DragDropService.html":{}}}],["instance",{"_index":538,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["instead",{"_index":1659,"title":{},"body":{"directives/TooltipDirective.html":{},"index.html":{}}}],["integrated",{"_index":2106,"title":{},"body":{"index.html":{}}}],["interface",{"_index":183,"title":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"interfaces/ConfigModal.html":{},"interfaces/Configurable.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"interfaces/FlexOption.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{},"interfaces/UIBuilderIcon.html":{}},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{},"interfaces/UIBuilderIcon.html":{},"coverage.html":{}}}],["interfaces",{"_index":185,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"interfaces/ConfigModal.html":{},"interfaces/Configurable.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"interfaces/FlexOption.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{},"interfaces/UIBuilderIcon.html":{},"overview.html":{}}}],["internationalization",{"_index":2149,"title":{},"body":{"index.html":{}}}],["intuitively",{"_index":2055,"title":{},"body":{"index.html":{}}}],["ipsum",{"_index":2076,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":1818,"title":{},"body":{"components/ZoneComponent.html":{}}}],["isconfigurable",{"_index":800,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["iscontainer",{"_index":721,"title":{},"body":{"injectables/ConfigService.html":{},"components/ItemComponent.html":{}}}],["iscontainer(id",{"_index":264,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"components/ItemComponent.html":{}}}],["iscontainerconfig",{"_index":722,"title":{},"body":{"injectables/ConfigService.html":{}}}],["iscontainerconfig(conf",{"_index":267,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["ishorizontal",{"_index":1241,"title":{},"body":{"components/ItemComponent.html":{}}}],["issues",{"_index":1338,"title":{},"body":{"components/ModalComponent.html":{}}}],["isused",{"_index":723,"title":{},"body":{"injectables/ConfigService.html":{}}}],["isused(id",{"_index":277,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["it's",{"_index":787,"title":{},"body":{"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"directives/TooltipDirective.html":{}}}],["item",{"_index":38,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentCreator.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["item.component",{"_index":1106,"title":{},"body":{"modules/DynamicViewsModule.html":{}}}],["item.component.html",{"_index":1238,"title":{},"body":{"components/ItemComponent.html":{}}}],["item.component.scss",{"_index":1237,"title":{},"body":{"components/ItemComponent.html":{}}}],["item.display",{"_index":1398,"title":{},"body":{"components/PaletteComponent.html":{}}}],["item.items.includes(id",{"_index":283,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["item.type",{"_index":1399,"title":{},"body":{"components/PaletteComponent.html":{}}}],["item[0",{"_index":363,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["item[field]?.tostring",{"_index":520,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["item]'},{'name",{"_index":143,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["itemclicked",{"_index":1817,"title":{},"body":{"components/ZoneComponent.html":{}}}],["itemcomponent",{"_index":142,"title":{"components/ItemComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["items",{"_index":214,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["itemtpl",{"_index":46,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["itself",{"_index":2022,"title":{},"body":{"index.html":{}}}],["json",{"_index":2136,"title":{},"body":{"index.html":{}}}],["json.parse(json.stringify(config",{"_index":249,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["justify",{"_index":1114,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/TreeComponent.html":{}}}],["key",{"_index":189,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{}}}],["key(name",{"_index":1502,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["key:'align_x_center",{"_index":1142,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["key:'align_x_end",{"_index":1143,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["key:'align_x_space_around",{"_index":1154,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["key:'align_x_space_between",{"_index":1157,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["key:'align_x_start",{"_index":1141,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["key:'align_x_stretch",{"_index":1144,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["keyof",{"_index":1410,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconType.html":{}}}],["kind",{"_index":2189,"title":{},"body":{"license.html":{}}}],["label",{"_index":1211,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/TreeComponent.html":{}}}],["label:before",{"_index":1748,"title":{},"body":{"components/TreeComponent.html":{}}}],["label:hover",{"_index":1226,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["lastkey",{"_index":1476,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["layout",{"_index":1053,"title":{},"body":{"components/ConfiguratorComponent.html":{},"index.html":{}}}],["layouts",{"_index":2046,"title":{},"body":{"index.html":{}}}],["left",{"_index":1640,"title":{},"body":{"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["legend",{"_index":126,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["lets",{"_index":1918,"title":{},"body":{"index.html":{}}}],["level",{"_index":1700,"title":{},"body":{"components/TreeComponent.html":{}}}],["lg",{"_index":1415,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconType.html":{}}}],["li",{"_index":1721,"title":{},"body":{"components/TreeComponent.html":{}}}],["li::after",{"_index":1728,"title":{},"body":{"components/TreeComponent.html":{}}}],["li::before",{"_index":1724,"title":{},"body":{"components/TreeComponent.html":{}}}],["li:first",{"_index":1733,"title":{},"body":{"components/TreeComponent.html":{}}}],["li:last",{"_index":1729,"title":{},"body":{"components/TreeComponent.html":{}}}],["li:not(.section",{"_index":1723,"title":{},"body":{"components/TreeComponent.html":{}}}],["liability",{"_index":2204,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2201,"title":{},"body":{"license.html":{}}}],["library",{"_index":1074,"title":{},"body":{"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"index.html":{}}}],["library.ts",{"_index":1879,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":2155,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":2172,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2192,"title":{},"body":{"license.html":{}}}],["line",{"_index":1189,"title":{},"body":{"components/FlexEditorComponent.html":{},"index.html":{}}}],["linear",{"_index":1742,"title":{},"body":{"components/TreeComponent.html":{}}}],["linecap='round",{"_index":1759,"title":{},"body":{"components/TreeComponent.html":{}}}],["linejoin='round",{"_index":1760,"title":{},"body":{"components/TreeComponent.html":{}}}],["lines",{"_index":2112,"title":{},"body":{"index.html":{}}}],["list",{"_index":28,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["listed",{"_index":2041,"title":{},"body":{"index.html":{}}}],["lists",{"_index":2093,"title":{},"body":{"index.html":{}}}],["literal",{"_index":1408,"title":{},"body":{"interfaces/SVG_CONFIG.html":{}}}],["loaded",{"_index":2100,"title":{},"body":{"index.html":{}}}],["localize",{"_index":657,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["location",{"_index":2051,"title":{},"body":{"index.html":{}}}],["look",{"_index":1926,"title":{},"body":{"index.html":{}}}],["lorem",{"_index":2075,"title":{},"body":{"index.html":{}}}],["main",{"_index":379,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["make",{"_index":2133,"title":{},"body":{"index.html":{}}}],["making",{"_index":1914,"title":{},"body":{"index.html":{}}}],["managed",{"_index":2018,"title":{},"body":{"index.html":{}}}],["management",{"_index":2014,"title":{},"body":{"index.html":{}}}],["map",{"_index":208,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"components/TreeComponent.html":{}}}],["map((config",{"_index":248,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["map(c",{"_index":687,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["map(config",{"_index":1000,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["margin",{"_index":618,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/TreeComponent.html":{}}}],["marked",{"_index":2153,"title":{},"body":{"index.html":{}}}],["match",{"_index":789,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["matching",{"_index":170,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"interfaces/UIBuilderIcon.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":33,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"components/TreeComponent.html":{}}}],["maxage",{"_index":226,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["md",{"_index":1414,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconType.html":{}}}],["means",{"_index":2105,"title":{},"body":{"index.html":{}}}],["meet",{"_index":1454,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["merchantability",{"_index":2194,"title":{},"body":{"license.html":{}}}],["merge",{"_index":93,"title":{},"body":{"components/AutocompleteComponent.html":{},"license.html":{}}}],["mergedconfig",{"_index":1477,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["message",{"_index":1574,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["method",{"_index":872,"title":{},"body":{"directives/ConfigurableDirective.html":{},"directives/TooltipDirective.html":{}}}],["methods",{"_index":48,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["min",{"_index":1318,"title":{},"body":{"components/ItemComponent.html":{}}}],["miscellaneous",{"_index":1907,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missingiconfallback",{"_index":1405,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{}}}],["mit",{"_index":2156,"title":{},"body":{"license.html":{}}}],["modal",{"_index":634,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["modal'},{'name",{"_index":145,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["modal.component",{"_index":1809,"title":{},"body":{"modules/UtilsModule.html":{}}}],["modal.getorcreateinstance(this.el.nativeelement",{"_index":1336,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcomponent",{"_index":144,"title":{"components/ModalComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["model",{"_index":1811,"title":{},"body":{"modules/UtilsModule.html":{}}}],["modify",{"_index":1937,"title":{},"body":{"index.html":{},"license.html":{}}}],["modifying",{"_index":2029,"title":{},"body":{"index.html":{}}}],["modular",{"_index":1940,"title":{},"body":{"index.html":{}}}],["module",{"_index":888,"title":{"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/SvgIconsModule.html":{},"modules/UtilsModule.html":{}},"body":{}}],["modules",{"_index":890,"title":{"modules.html":{}},"body":{"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/SvgIconsModule.html":{},"modules/UtilsModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":1547,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["monospace",{"_index":1232,"title":{},"body":{"components/HtmlEditorComponent.html":{}}}],["more",{"_index":2091,"title":{},"body":{"index.html":{}}}],["mouseenter",{"_index":816,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["mouseenterconfigurable",{"_index":905,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["mouseenterconfigurable(configurable",{"_index":778,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["mouseevent",{"_index":840,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["mouseevent(\"click",{"_index":1711,"title":{},"body":{"components/TreeComponent.html":{}}}],["mouseleave",{"_index":809,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["mouseleave(event",{"_index":843,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["mouseleaveconfigurable",{"_index":906,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["mouseleaveconfigurable(configurable",{"_index":780,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["mousenter",{"_index":810,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["mousenter(event",{"_index":845,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["mouseover",{"_index":811,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["mouseover(event",{"_index":847,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["mouseoverconfigurable",{"_index":907,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["mouseoverconfigurable(configurable",{"_index":776,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["movebetween",{"_index":359,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["movebetween(container",{"_index":1091,"title":{},"body":{"injectables/DragDropService.html":{}}}],["moved",{"_index":2056,"title":{},"body":{"index.html":{}}}],["movewithin",{"_index":365,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["movewithin(container",{"_index":1093,"title":{},"body":{"injectables/DragDropService.html":{}}}],["moving",{"_index":2027,"title":{},"body":{"index.html":{}}}],["multi",{"_index":1556,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["multiple",{"_index":1692,"title":{},"body":{"components/TreeComponent.html":{},"index.html":{}}}],["mutable",{"_index":982,"title":{},"body":{"components/ConfiguratorComponent.html":{},"miscellaneous/typealiases.html":{}}}],["mycomponent",{"_index":1985,"title":{},"body":{"index.html":{}}}],["myicons",{"_index":1772,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{}}}],["name",{"_index":73,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"interfaces/UIBuilderIcon.html":{},"components/ZoneComponent.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name.directive",{"_index":985,"title":{},"body":{"components/ConfiguratorComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{}}}],["name.directive.ts",{"_index":1563,"title":{},"body":{"directives/TemplateNameDirective.html":{},"coverage.html":{}}}],["name.directive.ts:10",{"_index":1565,"title":{},"body":{"directives/TemplateNameDirective.html":{}}}],["name.directive.ts:12",{"_index":1569,"title":{},"body":{"directives/TemplateNameDirective.html":{}}}],["name.directive.ts:7",{"_index":1568,"title":{},"body":{"directives/TemplateNameDirective.html":{}}}],["name.directive.ts:8",{"_index":1566,"title":{},"body":{"directives/TemplateNameDirective.html":{}}}],["name.directive.ts:9",{"_index":1567,"title":{},"body":{"directives/TemplateNameDirective.html":{}}}],["nativeelement",{"_index":806,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["nearest",{"_index":1714,"title":{},"body":{"components/TreeComponent.html":{}}}],["necessary",{"_index":1842,"title":{},"body":{"components/ZoneComponent.html":{}}}],["need",{"_index":761,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"index.html":{}}}],["needed",{"_index":358,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"index.html":{}}}],["negate",{"_index":2095,"title":{},"body":{"index.html":{}}}],["nested",{"_index":1029,"title":{},"body":{"components/ConfiguratorComponent.html":{},"index.html":{}}}],["new",{"_index":84,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"injectables/ToastService.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newid",{"_index":345,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["newindex",{"_index":367,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["ng",{"_index":2129,"title":{},"body":{"index.html":{}}}],["ngaftercontentinit",{"_index":938,"title":{},"body":{"components/ConfiguratorComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"directives/TooltipDirective.html":{},"components/ZoneComponent.html":{}}}],["ngafterviewinit",{"_index":939,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ModalComponent.html":{},"components/ToastComponent.html":{}}}],["ngif",{"_index":2086,"title":{},"body":{"index.html":{}}}],["ngmodel",{"_index":1353,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["ngmodelchangedebounced",{"_index":1350,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["ngmodelchangedebounced]'},{'name",{"_index":163,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["ngmodelchangedebounceddirective",{"_index":162,"title":{"directives/NgModelChangeDebouncedDirective.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ngmodeldebouncetime",{"_index":1351,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["ngmodule",{"_index":902,"title":{},"body":{"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/SvgIconsModule.html":{},"modules/UtilsModule.html":{}}}],["ngneat/elf",{"_index":194,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"dependencies.html":{}}}],["ngonchanges",{"_index":442,"title":{},"body":{"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{}}}],["ngonchanges(changes",{"_index":1121,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/TreeComponent.html":{}}}],["ngondestroy",{"_index":1242,"title":{},"body":{"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/ToastComponent.html":{},"directives/TooltipDirective.html":{},"components/ZoneComponent.html":{}}}],["ngoninit",{"_index":49,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ConfigModal.html":{},"directives/ConfigurableDirective.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["ngx",{"_index":1071,"title":{},"body":{"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"components/ItemComponent.html":{},"components/ZoneComponent.html":{},"dependencies.html":{},"index.html":{}}}],["non",{"_index":681,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["none",{"_index":1218,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/TreeComponent.html":{}}}],["noninfringement",{"_index":2198,"title":{},"body":{"license.html":{}}}],["normal",{"_index":1925,"title":{},"body":{"index.html":{}}}],["nothing",{"_index":700,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["notice",{"_index":1963,"title":{},"body":{"index.html":{},"license.html":{}}}],["notify",{"_index":472,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["now",{"_index":874,"title":{},"body":{"directives/ConfigurableDirective.html":{},"directives/TooltipDirective.html":{}}}],["null",{"_index":1529,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["number",{"_index":324,"title":{},"body":{"interfaces/ComponentCreator.html":{},"components/ConditionEditorComponent.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/ItemComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/SvgIconComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["o.bootstrap",{"_index":1183,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["object",{"_index":380,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["object.assign",{"_index":646,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["object.keys(this.context.templates).foreach((type",{"_index":669,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["object.keys(this.data",{"_index":511,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["objects",{"_index":2089,"title":{},"body":{"index.html":{}}}],["obligation",{"_index":1995,"title":{},"body":{"index.html":{}}}],["obs.edited.config.id",{"_index":1051,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["obs.edited.config.type",{"_index":1052,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["observable",{"_index":85,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["obtaining",{"_index":2166,"title":{},"body":{"license.html":{}}}],["of(c",{"_index":692,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["of(config",{"_index":706,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["of(this.allsuggests.filter(suggest",{"_index":122,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["offcanvas",{"_index":926,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["offcanvas.getorcreateinstance(this.offcanvasel.nativeelement",{"_index":1014,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["offcanvasbodyel",{"_index":935,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["offcanvasel",{"_index":936,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["og",{"_index":336,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["ogcontainer",{"_index":360,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["ogcontainer.items.splice(ogindex",{"_index":362,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["ogindex",{"_index":361,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["ok",{"_index":704,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["oldindex",{"_index":366,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["omit",{"_index":1991,"title":{},"body":{"index.html":{}}}],["ommited",{"_index":2117,"title":{},"body":{"index.html":{}}}],["onchanges",{"_index":433,"title":{},"body":{"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{}}}],["ondestroy",{"_index":1236,"title":{},"body":{"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/ToastComponent.html":{},"directives/TooltipDirective.html":{},"components/ZoneComponent.html":{}}}],["ondndcanceled",{"_index":1243,"title":{},"body":{"components/ItemComponent.html":{}}}],["ondndcanceled(item",{"_index":1260,"title":{},"body":{"components/ItemComponent.html":{}}}],["ondnddrop",{"_index":1244,"title":{},"body":{"components/ItemComponent.html":{},"components/ZoneComponent.html":{}}}],["ondnddrop(event",{"_index":1827,"title":{},"body":{"components/ZoneComponent.html":{}}}],["ondnddrop(item",{"_index":1262,"title":{},"body":{"components/ItemComponent.html":{}}}],["ondndend",{"_index":696,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["ondndstart",{"_index":1370,"title":{},"body":{"components/PaletteComponent.html":{}}}],["ondndstart(item",{"_index":694,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["one",{"_index":1961,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":11,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ConfigModal.html":{},"directives/ConfigurableDirective.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["onitemclicked",{"_index":1816,"title":{},"body":{"components/ZoneComponent.html":{}}}],["onitemclicked(event",{"_index":1829,"title":{},"body":{"components/ZoneComponent.html":{}}}],["onmodalclose",{"_index":1322,"title":{},"body":{"components/ModalComponent.html":{},"components/PaletteComponent.html":{}}}],["onmodalclose(success",{"_index":707,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["onselect",{"_index":50,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["onselect(value",{"_index":70,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["ontoastmessage",{"_index":1602,"title":{},"body":{"injectables/ToastService.html":{}}}],["opacity",{"_index":1740,"title":{},"body":{"components/TreeComponent.html":{}}}],["openmodal",{"_index":1371,"title":{},"body":{"components/PaletteComponent.html":{}}}],["openmodal(id",{"_index":697,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["operator",{"_index":394,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["operator}${condition.data",{"_index":402,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["option",{"_index":1179,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["optional",{"_index":74,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorOptions.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["options",{"_index":631,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/ToastComponent.html":{},"directives/TooltipDirective.html":{},"index.html":{}}}],["options.paletteoptions",{"_index":1030,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["order",{"_index":1685,"title":{},"body":{"components/TreeComponent.html":{},"index.html":{}}}],["orders",{"_index":1695,"title":{},"body":{"components/TreeComponent.html":{}}}],["otherwise",{"_index":1654,"title":{},"body":{"directives/TooltipDirective.html":{},"license.html":{}}}],["out",{"_index":106,"title":{},"body":{"components/AutocompleteComponent.html":{},"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"components/SvgIconComponent.html":{},"modules/SvgIconsModule.html":{},"modules/UtilsModule.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":1317,"title":{},"body":{"components/ItemComponent.html":{}}}],["output",{"_index":89,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/ZoneComponent.html":{}}}],["outputs",{"_index":55,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/ZoneComponent.html":{}}}],["overflow",{"_index":36,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{}}}],["overriden",{"_index":1636,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["overview",{"_index":2211,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.type",{"_index":685,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["package",{"_index":1886,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":611,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/TreeComponent.html":{}}}],["palette",{"_index":343,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["palette'},{'name",{"_index":147,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["palette.component.html",{"_index":604,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["palette/palette.component",{"_index":986,"title":{},"body":{"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{}}}],["palettecomponent",{"_index":146,"title":{"components/PaletteComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paletteitem",{"_index":594,"title":{"interfaces/PaletteItem.html":{}},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"coverage.html":{}}}],["paletteoptions",{"_index":592,"title":{"interfaces/PaletteOptions.html":{}},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["palettes",{"_index":2059,"title":{},"body":{"index.html":{}}}],["panel",{"_index":1010,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["param",{"_index":1033,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/TreeComponent.html":{}}}],["parameter",{"_index":1970,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":72,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["params",{"_index":552,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["parent",{"_index":961,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["parent.id",{"_index":1698,"title":{},"body":{"components/TreeComponent.html":{}}}],["parent.items",{"_index":1687,"title":{},"body":{"components/TreeComponent.html":{}}}],["parent.items.foreach((id",{"_index":1690,"title":{},"body":{"components/TreeComponent.html":{}}}],["parent.items.length",{"_index":1688,"title":{},"body":{"components/TreeComponent.html":{}}}],["parent_id",{"_index":1684,"title":{},"body":{"components/TreeComponent.html":{}}}],["parentid",{"_index":749,"title":{},"body":{"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{}}}],["parents",{"_index":1693,"title":{},"body":{"components/TreeComponent.html":{}}}],["partial",{"_index":1550,"title":{},"body":{"modules/SvgIconsModule.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{}}}],["particular",{"_index":2196,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1958,"title":{},"body":{"index.html":{}}}],["passed",{"_index":1987,"title":{},"body":{"index.html":{}}}],["pattern",{"_index":2107,"title":{},"body":{"index.html":{}}}],["permission",{"_index":2160,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2180,"title":{},"body":{"license.html":{}}}],["person",{"_index":2165,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2181,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":114,"title":{"pipes/ConditionPipe.html":{}},"body":{"components/AutocompleteComponent.html":{},"pipes/ConditionPipe.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":547,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["pipetransform",{"_index":557,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["placement",{"_index":1115,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"directives/TooltipDirective.html":{}}}],["plain",{"_index":1962,"title":{},"body":{"index.html":{}}}],["point",{"_index":2005,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":41,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{}}}],["popperjs/core",{"_index":1898,"title":{},"body":{"dependencies.html":{}}}],["portions",{"_index":2186,"title":{},"body":{"license.html":{}}}],["position",{"_index":625,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{}}}],["positions",{"_index":2140,"title":{},"body":{"index.html":{}}}],["possible",{"_index":1989,"title":{},"body":{"index.html":{}}}],["powered",{"_index":2058,"title":{},"body":{"index.html":{}}}],["powers",{"_index":2024,"title":{},"body":{"index.html":{}}}],["pre",{"_index":1395,"title":{},"body":{"components/PaletteComponent.html":{}}}],["presses",{"_index":703,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["prev",{"_index":1715,"title":{},"body":{"components/TreeComponent.html":{}}}],["prev?.removehighlight",{"_index":1717,"title":{},"body":{"components/TreeComponent.html":{}}}],["prevents",{"_index":1660,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["previous",{"_index":763,"title":{},"body":{"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{}}}],["previousconfigurableelement",{"_index":767,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["price",{"_index":1933,"title":{},"body":{"index.html":{}}}],["price\"note",{"_index":1980,"title":{},"body":{"index.html":{}}}],["principle",{"_index":1924,"title":{},"body":{"index.html":{}}}],["prior",{"_index":2065,"title":{},"body":{"index.html":{}}}],["private",{"_index":250,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"components/ToastComponent.html":{},"components/TreeComponent.html":{}}}],["product",{"_index":1967,"title":{},"body":{"index.html":{}}}],["product.description",{"_index":1928,"title":{},"body":{"index.html":{}}}],["product.name",{"_index":1927,"title":{},"body":{"index.html":{}}}],["product.price",{"_index":1930,"title":{},"body":{"index.html":{}}}],["products",{"_index":1978,"title":{},"body":{"index.html":{}}}],["projects/.../configurator.component.ts",{"_index":2221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../icons",{"_index":2223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../palette.component.ts",{"_index":2222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../svg",{"_index":1909,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../types.helpers.ts",{"_index":2218,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../types.ts",{"_index":2224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts",{"_index":805,"title":{},"body":{"directives/ConfigurableDirective.html":{},"coverage.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:100",{"_index":851,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:104",{"_index":838,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:108",{"_index":842,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:18",{"_index":827,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:19",{"_index":831,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:20",{"_index":828,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:21",{"_index":829,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:22",{"_index":825,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:23",{"_index":826,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:24",{"_index":824,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:25",{"_index":830,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:27",{"_index":823,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:37",{"_index":849,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:42",{"_index":832,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:48",{"_index":837,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:54",{"_index":835,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:60",{"_index":836,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:66",{"_index":834,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:89",{"_index":850,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.directive.ts:93",{"_index":852,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["projects/lib/src/configurable/configurable.module.ts",{"_index":897,"title":{},"body":{"modules/ConfigurableModule.html":{}}}],["projects/lib/src/configurable/configurable.service.ts",{"_index":747,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"coverage.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:21",{"_index":915,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:24",{"_index":917,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:27",{"_index":918,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:30",{"_index":920,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:33",{"_index":916,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:35",{"_index":924,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:38",{"_index":922,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:42",{"_index":911,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:48",{"_index":909,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:54",{"_index":910,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:58",{"_index":908,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:79",{"_index":912,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:86",{"_index":914,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:90",{"_index":919,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configurable/configurable.service.ts:94",{"_index":913,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["projects/lib/src/configuration/conditions.service.ts",{"_index":371,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"coverage.html":{}}}],["projects/lib/src/configuration/conditions.service.ts:22",{"_index":576,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["projects/lib/src/configuration/conditions.service.ts:26",{"_index":570,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["projects/lib/src/configuration/conditions.service.ts:32",{"_index":577,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["projects/lib/src/configuration/conditions.service.ts:37",{"_index":578,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["projects/lib/src/configuration/conditions.service.ts:49",{"_index":572,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["projects/lib/src/configuration/conditions.service.ts:54",{"_index":571,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["projects/lib/src/configuration/conditions.service.ts:63",{"_index":575,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["projects/lib/src/configuration/conditions.service.ts:75",{"_index":573,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["projects/lib/src/configuration/conditions.service.ts:80",{"_index":574,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["projects/lib/src/configuration/config.service.ts",{"_index":186,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"coverage.html":{}}}],["projects/lib/src/configuration/config.service.ts:106",{"_index":737,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:110",{"_index":729,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:115",{"_index":742,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:129",{"_index":739,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:133",{"_index":730,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:148",{"_index":728,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:152",{"_index":727,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:156",{"_index":741,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:160",{"_index":738,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:22",{"_index":190,"title":{},"body":{"interfaces/ComponentConfig.html":{}}}],["projects/lib/src/configuration/config.service.ts:34",{"_index":746,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:35",{"_index":745,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:37",{"_index":734,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:46",{"_index":740,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:53",{"_index":743,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:57",{"_index":731,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:61",{"_index":744,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:72",{"_index":726,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:76",{"_index":732,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:87",{"_index":733,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:95",{"_index":735,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configuration/config.service.ts:99",{"_index":736,"title":{},"body":{"injectables/ConfigService.html":{}}}],["projects/lib/src/configurator/configurator.component.ts",{"_index":925,"title":{},"body":{"components/ConfiguratorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:101",{"_index":956,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:114",{"_index":953,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:120",{"_index":965,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:125",{"_index":963,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:137",{"_index":959,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:150",{"_index":952,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:44",{"_index":968,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:45",{"_index":972,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:47",{"_index":978,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:48",{"_index":974,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:50",{"_index":976,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:52",{"_index":949,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:53",{"_index":950,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:55",{"_index":973,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:57",{"_index":971,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:59",{"_index":945,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:63",{"_index":970,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.component.ts:64",{"_index":969,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["projects/lib/src/configurator/configurator.models.ts",{"_index":1055,"title":{},"body":{"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"coverage.html":{}}}],["projects/lib/src/configurator/configurator.module.ts",{"_index":1067,"title":{},"body":{"modules/ConfiguratorModule.html":{}}}],["projects/lib/src/configurator/editors/class",{"_index":171,"title":{},"body":{"components/ClassEditorComponent.html":{},"coverage.html":{}}}],["projects/lib/src/configurator/editors/condition",{"_index":432,"title":{},"body":{"components/ConditionEditorComponent.html":{},"coverage.html":{}}}],["projects/lib/src/configurator/editors/flex",{"_index":1108,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"coverage.html":{}}}],["projects/lib/src/configurator/editors/html",{"_index":1229,"title":{},"body":{"components/HtmlEditorComponent.html":{},"coverage.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts",{"_index":580,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:130",{"_index":1379,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:149",{"_index":1384,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:153",{"_index":1383,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:157",{"_index":1386,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:172",{"_index":1385,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:180",{"_index":1387,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:63",{"_index":1376,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:64",{"_index":1375,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:65",{"_index":1377,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:67",{"_index":1392,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:68",{"_index":1391,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:70",{"_index":1374,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:73",{"_index":1390,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:74",{"_index":1389,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:75",{"_index":1388,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:78",{"_index":1382,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:87",{"_index":1381,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/palette/palette.component.ts:95",{"_index":1378,"title":{},"body":{"components/PaletteComponent.html":{}}}],["projects/lib/src/configurator/toolbar.component.ts",{"_index":1608,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["projects/lib/src/configurator/toolbar.component.ts:31",{"_index":1617,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["projects/lib/src/configurator/toolbar.component.ts:34",{"_index":1619,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["projects/lib/src/configurator/toolbar.component.ts:35",{"_index":1620,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["projects/lib/src/configurator/toolbar.component.ts:38",{"_index":1618,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["projects/lib/src/configurator/tree/tree.component.ts",{"_index":1666,"title":{},"body":{"components/TreeComponent.html":{},"coverage.html":{}}}],["projects/lib/src/configurator/tree/tree.component.ts:11",{"_index":1671,"title":{},"body":{"components/TreeComponent.html":{}}}],["projects/lib/src/configurator/tree/tree.component.ts:13",{"_index":1680,"title":{},"body":{"components/TreeComponent.html":{}}}],["projects/lib/src/configurator/tree/tree.component.ts:15",{"_index":1670,"title":{},"body":{"components/TreeComponent.html":{}}}],["projects/lib/src/configurator/tree/tree.component.ts:19",{"_index":1677,"title":{},"body":{"components/TreeComponent.html":{}}}],["projects/lib/src/configurator/tree/tree.component.ts:45",{"_index":1673,"title":{},"body":{"components/TreeComponent.html":{}}}],["projects/lib/src/configurator/tree/tree.component.ts:49",{"_index":1679,"title":{},"body":{"components/TreeComponent.html":{}}}],["projects/lib/src/configurator/tree/tree.component.ts:55",{"_index":1676,"title":{},"body":{"components/TreeComponent.html":{}}}],["projects/lib/src/dynamic",{"_index":318,"title":{},"body":{"interfaces/ComponentCreator.html":{},"pipes/ConditionPipe.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/ItemComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{}}}],["projects/lib/src/svg/icons",{"_index":1878,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/lib/src/svg/svg",{"_index":1770,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/lib/src/utils/autocomplete.component.ts",{"_index":9,"title":{},"body":{"components/AutocompleteComponent.html":{},"coverage.html":{}}}],["projects/lib/src/utils/autocomplete.component.ts:35",{"_index":62,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["projects/lib/src/utils/autocomplete.component.ts:36",{"_index":64,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["projects/lib/src/utils/autocomplete.component.ts:37",{"_index":60,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["projects/lib/src/utils/autocomplete.component.ts:38",{"_index":66,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["projects/lib/src/utils/autocomplete.component.ts:39",{"_index":83,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["projects/lib/src/utils/autocomplete.component.ts:40",{"_index":86,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["projects/lib/src/utils/autocomplete.component.ts:41",{"_index":78,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["projects/lib/src/utils/autocomplete.component.ts:43",{"_index":67,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["projects/lib/src/utils/autocomplete.component.ts:64",{"_index":71,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["projects/lib/src/utils/modal.component.ts",{"_index":1319,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{}}}],["projects/lib/src/utils/modal.component.ts:29",{"_index":1333,"title":{},"body":{"components/ModalComponent.html":{}}}],["projects/lib/src/utils/modal.component.ts:30",{"_index":1325,"title":{},"body":{"components/ModalComponent.html":{}}}],["projects/lib/src/utils/modal.component.ts:31",{"_index":1324,"title":{},"body":{"components/ModalComponent.html":{}}}],["projects/lib/src/utils/modal.component.ts:32",{"_index":1326,"title":{},"body":{"components/ModalComponent.html":{}}}],["projects/lib/src/utils/modal.component.ts:34",{"_index":1334,"title":{},"body":{"components/ModalComponent.html":{}}}],["projects/lib/src/utils/modal.component.ts:36",{"_index":1328,"title":{},"body":{"components/ModalComponent.html":{}}}],["projects/lib/src/utils/modal.component.ts:43",{"_index":1329,"title":{},"body":{"components/ModalComponent.html":{}}}],["projects/lib/src/utils/modal.component.ts:47",{"_index":1327,"title":{},"body":{"components/ModalComponent.html":{}}}],["projects/lib/src/utils/modal.component.ts:51",{"_index":1330,"title":{},"body":{"components/ModalComponent.html":{}}}],["projects/lib/src/utils/model",{"_index":1347,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{},"coverage.html":{}}}],["projects/lib/src/utils/svg",{"_index":1401,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/lib/src/utils/template",{"_index":1562,"title":{},"body":{"directives/TemplateNameDirective.html":{},"coverage.html":{}}}],["projects/lib/src/utils/toast/toast.component.ts",{"_index":1571,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["projects/lib/src/utils/toast/toast.component.ts:11",{"_index":1587,"title":{},"body":{"components/ToastComponent.html":{}}}],["projects/lib/src/utils/toast/toast.component.ts:13",{"_index":1583,"title":{},"body":{"components/ToastComponent.html":{}}}],["projects/lib/src/utils/toast/toast.component.ts:15",{"_index":1589,"title":{},"body":{"components/ToastComponent.html":{}}}],["projects/lib/src/utils/toast/toast.component.ts:16",{"_index":1588,"title":{},"body":{"components/ToastComponent.html":{}}}],["projects/lib/src/utils/toast/toast.component.ts:18",{"_index":1577,"title":{},"body":{"components/ToastComponent.html":{}}}],["projects/lib/src/utils/toast/toast.component.ts:23",{"_index":1584,"title":{},"body":{"components/ToastComponent.html":{}}}],["projects/lib/src/utils/toast/toast.component.ts:35",{"_index":1585,"title":{},"body":{"components/ToastComponent.html":{}}}],["projects/lib/src/utils/toast/toast.service.ts",{"_index":1601,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["projects/lib/src/utils/toast/toast.service.ts:11",{"_index":1605,"title":{},"body":{"injectables/ToastService.html":{}}}],["projects/lib/src/utils/toast/toast.service.ts:7",{"_index":1603,"title":{},"body":{"injectables/ToastService.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts",{"_index":1623,"title":{},"body":{"directives/TooltipDirective.html":{},"coverage.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts:17",{"_index":1630,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts:27",{"_index":1641,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts:35",{"_index":1638,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts:37",{"_index":1650,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts:41",{"_index":1626,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts:43",{"_index":1649,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts:45",{"_index":1644,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts:51",{"_index":1643,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts:55",{"_index":1645,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts:62",{"_index":1646,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["projects/lib/src/utils/tooltip.directive.ts:8",{"_index":1642,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["projects/lib/src/utils/types.helpers.ts",{"_index":2219,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/lib/src/utils/utils.module.ts",{"_index":1807,"title":{},"body":{"modules/UtilsModule.html":{}}}],["properly",{"_index":2067,"title":{},"body":{"index.html":{}}}],["properties",{"_index":44,"title":{"properties.html":{}},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"interfaces/UIBuilderIcon.html":{},"components/ZoneComponent.html":{},"properties.html":{}}}],["property",{"_index":1647,"title":{},"body":{"directives/TooltipDirective.html":{},"index.html":{}}}],["provide",{"_index":1554,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["provided",{"_index":2187,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":215,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["providers",{"_index":1553,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["public",{"_index":232,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"classes/SvgIcon.html":{},"directives/TemplateNameDirective.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["publish",{"_index":2174,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":2197,"title":{},"body":{"license.html":{}}}],["querylist",{"_index":966,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ZoneComponent.html":{}}}],["radio",{"_index":1194,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["radius",{"_index":614,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/TreeComponent.html":{}}}],["range",{"_index":2080,"title":{},"body":{"index.html":{}}}],["raw",{"_index":663,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/HtmlEditorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["rawhtml",{"_index":666,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["rawhtmlplaceholder",{"_index":600,"title":{},"body":{"interfaces/ConfigModal.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["reactive",{"_index":2019,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":210,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"directives/TemplateNameDirective.html":{}}}],["rebuild",{"_index":1939,"title":{},"body":{"index.html":{}}}],["reconfigured",{"_index":1922,"title":{},"body":{"index.html":{}}}],["record",{"_index":384,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/ZoneComponent.html":{}}}],["redo",{"_index":315,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["refer",{"_index":2002,"title":{},"body":{"index.html":{}}}],["references",{"_index":1975,"title":{},"body":{"index.html":{}}}],["regexp",{"_index":376,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["regexp(condition.value",{"_index":425,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["register",{"_index":1058,"title":{},"body":{"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"injectables/SvgIconRegistry.html":{}}}],["register(icons",{"_index":1458,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["registry",{"_index":1480,"title":{},"body":{"components/SvgIconComponent.html":{},"modules/SvgIconsModule.html":{}}}],["regular",{"_index":428,"title":{},"body":{"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"index.html":{}}}],["relative",{"_index":626,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/TreeComponent.html":{}}}],["remove",{"_index":940,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"directives/TooltipDirective.html":{}}}],["remove(context",{"_index":958,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["removeable",{"_index":596,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["removeconfig",{"_index":724,"title":{},"body":{"injectables/ConfigService.html":{}}}],["removeconfig(id",{"_index":294,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["removed",{"_index":1631,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["removeedited",{"_index":750,"title":{},"body":{"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{}}}],["removehighlight",{"_index":812,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["removeitem",{"_index":1372,"title":{},"body":{"components/PaletteComponent.html":{}}}],["removeitem(item",{"_index":712,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["removes",{"_index":960,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["removeselected",{"_index":751,"title":{},"body":{"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{}}}],["removevalue",{"_index":443,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["removevalue(i",{"_index":462,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["removing",{"_index":2057,"title":{},"body":{"index.html":{}}}],["renderer",{"_index":821,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["renderer2",{"_index":822,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["replace",{"_index":1950,"title":{},"body":{"index.html":{}}}],["represents",{"_index":2050,"title":{},"body":{"index.html":{}}}],["requires",{"_index":2109,"title":{},"body":{"index.html":{}}}],["reset",{"_index":896,"title":{},"body":{"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/SvgIconsModule.html":{},"modules/UtilsModule.html":{},"overview.html":{}}}],["reshaped",{"_index":1921,"title":{},"body":{"index.html":{}}}],["resolveoptions",{"_index":941,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["resolveoptions(zone",{"_index":962,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["restriction",{"_index":2171,"title":{},"body":{"license.html":{}}}],["result",{"_index":2123,"title":{},"body":{"index.html":{}}}],["results",{"_index":169,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"interfaces/UIBuilderIcon.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":762,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"index.html":{}}}],["return",{"_index":119,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["returns",{"_index":68,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"miscellaneous/functions.html":{}}}],["rgb(0",{"_index":26,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["rgb(0,0,0,0.1",{"_index":617,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["right",{"_index":619,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"directives/TooltipDirective.html":{},"index.html":{}}}],["rights",{"_index":2173,"title":{},"body":{"license.html":{}}}],["role",{"_index":1498,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["root",{"_index":216,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"injectables/ToastService.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["rotate",{"_index":1196,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SvgIconComponent.html":{}}}],["rotate(90deg",{"_index":1768,"title":{},"body":{"components/TreeComponent.html":{}}}],["rotate(var",{"_index":1212,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SvgIconComponent.html":{}}}],["row",{"_index":1151,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["rows",{"_index":2047,"title":{},"body":{"index.html":{}}}],["running",{"_index":2143,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":94,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/ItemComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ZoneComponent.html":{},"dependencies.html":{},"index.html":{}}}],["rxjs/operators",{"_index":97,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"directives/NgModelChangeDebouncedDirective.html":{}}}],["s.unsubscribe",{"_index":1292,"title":{},"body":{"components/ItemComponent.html":{}}}],["safely",{"_index":876,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["same",{"_index":792,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"index.html":{}}}],["sanitize",{"_index":1627,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["schematic",{"_index":2134,"title":{},"body":{"index.html":{}}}],["scratch",{"_index":531,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["script",{"_index":2144,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":1016,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["section",{"_index":1719,"title":{},"body":{"components/TreeComponent.html":{}}}],["see",{"_index":2003,"title":{},"body":{"index.html":{}}}],["select",{"_index":56,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["select(id",{"_index":1678,"title":{},"body":{"components/TreeComponent.html":{}}}],["selectall",{"_index":200,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["selectdata",{"_index":390,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["selectdata(condition",{"_index":383,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["selected",{"_index":113,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["selectentity",{"_index":199,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["selectentity(id",{"_index":243,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["selectfield",{"_index":444,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["selectfield(field",{"_index":464,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SvgIconComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["selects",{"_index":2070,"title":{},"body":{"index.html":{}}}],["selectvalue",{"_index":445,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["selectvalue(value",{"_index":466,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["self",{"_index":1034,"title":{},"body":{"components/ConfiguratorComponent.html":{},"modules/SvgIconsModule.html":{}}}],["sell",{"_index":2178,"title":{},"body":{"license.html":{}}}],["send",{"_index":870,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["server",{"_index":2036,"title":{},"body":{"index.html":{}}}],["service",{"_index":768,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"modules/SvgIconsModule.html":{}}}],["set",{"_index":527,"title":{},"body":{"components/ConditionEditorComponent.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"components/SvgIconComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["set(config",{"_index":229,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["setactivate(value",{"_index":486,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["setcolor(color",{"_index":1495,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["setfontsize(value",{"_index":1494,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["setheight(value",{"_index":1493,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["sethoveredid(id",{"_index":923,"title":{},"body":{"injectables/ConfigurableService.html":{}}}],["setkey(name",{"_index":1490,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["sets",{"_index":1633,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["setsize(value",{"_index":1491,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["settooltip",{"_index":1624,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["setwidth(value",{"_index":1492,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["several",{"_index":2008,"title":{},"body":{"index.html":{}}}],["shadow",{"_index":22,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["shall",{"_index":2183,"title":{},"body":{"license.html":{}}}],["show",{"_index":1323,"title":{},"body":{"components/ModalComponent.html":{},"index.html":{}}}],["showconditionaldisplay",{"_index":990,"title":{},"body":{"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["showcssclasses",{"_index":989,"title":{},"body":{"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["showduplicate",{"_index":992,"title":{},"body":{"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["showexistingpalette",{"_index":603,"title":{},"body":{"interfaces/ConfigModal.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["showflexeditor",{"_index":987,"title":{},"body":{"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["showhtmleditor",{"_index":988,"title":{},"body":{"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["shown/created",{"_index":1655,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["showremove",{"_index":991,"title":{},"body":{"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["showstandardpalette",{"_index":602,"title":{},"body":{"interfaces/ConfigModal.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"miscellaneous/variables.html":{}}}],["showtree",{"_index":942,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["showtree(showtree",{"_index":964,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["side",{"_index":1009,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["simple",{"_index":1612,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["simplechanges",{"_index":1122,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/TreeComponent.html":{}}}],["simplicity",{"_index":1945,"title":{},"body":{"index.html":{}}}],["simply",{"_index":2071,"title":{},"body":{"index.html":{}}}],["sinequa",{"_index":2159,"title":{},"body":{"license.html":{}}}],["size",{"_index":622,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SvgIconComponent.html":{}}}],["size(value",{"_index":1510,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["sizes",{"_index":1406,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconType.html":{}}}],["slower",{"_index":2122,"title":{},"body":{"index.html":{}}}],["sm",{"_index":1413,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconType.html":{}}}],["smooth",{"_index":1713,"title":{},"body":{"components/TreeComponent.html":{}}}],["software",{"_index":2167,"title":{},"body":{"license.html":{}}}],["solid",{"_index":609,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/TreeComponent.html":{}}}],["sometimes",{"_index":2084,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"modules/ConfigurableModule.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"modules/ConfiguratorModule.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"interfaces/UIBuilderIcon.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["source.key",{"_index":543,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["space",{"_index":1155,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["special",{"_index":517,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{}}}],["specific",{"_index":1026,"title":{},"body":{"components/ConfiguratorComponent.html":{},"directives/TooltipDirective.html":{}}}],["standard",{"_index":649,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["standardpalette",{"_index":632,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["start",{"_index":1131,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/TreeComponent.html":{}}}],["started",{"_index":1911,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":1974,"title":{},"body":{"index.html":{}}}],["state",{"_index":206,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"dependencies.html":{},"index.html":{}}}],["statehistory",{"_index":205,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["statehistory(this.store",{"_index":225,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["statements",{"_index":1852,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":82,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ModalComponent.html":{},"modules/SvgIconsModule.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["step",{"_index":2004,"title":{},"body":{"index.html":{}}}],["steps",{"_index":1949,"title":{},"body":{"index.html":{}}}],["still",{"_index":2108,"title":{},"body":{"index.html":{}}}],["stopediting",{"_index":794,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["store",{"_index":193,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"index.html":{}}}],["store'changes",{"_index":770,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["storing",{"_index":1056,"title":{},"body":{"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/PaletteOptions.html":{}}}],["stretch",{"_index":1138,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["string",{"_index":58,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"interfaces/UIBuilderIcon.html":{},"components/ZoneComponent.html":{},"miscellaneous/functions.html":{}}}],["strings",{"_index":2152,"title":{},"body":{"index.html":{}}}],["stroke",{"_index":1758,"title":{},"body":{"components/TreeComponent.html":{}}}],["stroke='rgba%280,0,0,.5%29",{"_index":1757,"title":{},"body":{"components/TreeComponent.html":{}}}],["structure",{"_index":1981,"title":{},"body":{"index.html":{}}}],["style",{"_index":1128,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SvgIconComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["stylesheet",{"_index":2142,"title":{},"body":{"index.html":{}}}],["styleurls",{"_index":1109,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/TreeComponent.html":{}}}],["styling",{"_index":2099,"title":{},"body":{"index.html":{}}}],["sub",{"_index":660,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ToastComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["subject",{"_index":585,"title":{},"body":{"interfaces/ConfigModal.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"injectables/ToastService.html":{},"license.html":{}}}],["sublicense",{"_index":2176,"title":{},"body":{"license.html":{}}}],["subs",{"_index":1240,"title":{},"body":{"components/ItemComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{}}}],["subscribe",{"_index":769,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{}}}],["subscribe((config",{"_index":349,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["subscribe((value",{"_index":1366,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["subscribe(configs",{"_index":640,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["subscription",{"_index":1276,"title":{},"body":{"components/ItemComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/ToastComponent.html":{},"components/ZoneComponent.html":{}}}],["substantial",{"_index":2185,"title":{},"body":{"license.html":{}}}],["success",{"_index":1331,"title":{},"body":{"components/ModalComponent.html":{},"components/PaletteComponent.html":{}}}],["such",{"_index":1966,"title":{},"body":{"index.html":{}}}],["suggest",{"_index":43,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["suggest.includes(this.inputelement.value",{"_index":124,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["suggestgenerator",{"_index":54,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["suggests",{"_index":47,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["support",{"_index":2151,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":149,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"modules.html":{}}}],["svg.outerhtml",{"_index":1457,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["svg.setattribute('fit",{"_index":1449,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["svg.setattribute('focusable",{"_index":1455,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["svg.setattribute('height",{"_index":1450,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["svg.setattribute('preserveaspectratio",{"_index":1452,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["svg.setattribute('width",{"_index":1451,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["svg/icons",{"_index":1073,"title":{},"body":{"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{}}}],["svg_config",{"_index":1400,"title":{"interfaces/SVG_CONFIG.html":{}},"body":{"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"coverage.html":{}}}],["svg_config['sizes",{"_index":1411,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconType.html":{}}}],["svg_icons",{"_index":1420,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["svg_icons_config",{"_index":1418,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["svg_missing_icon_fallback",{"_index":1422,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["svgelement",{"_index":1471,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["svgicon",{"_index":1424,"title":{"classes/SvgIcon.html":{}},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"coverage.html":{}}}],["svgicon(data",{"_index":1462,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["svgiconcomponent",{"_index":148,"title":{"components/SvgIconComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"modules/SvgIconsModule.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["svgiconregistry",{"_index":1433,"title":{"injectables/SvgIconRegistry.html":{}},"body":{"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"coverage.html":{}}}],["svgiconsmodule",{"_index":1066,"title":{"modules/SvgIconsModule.html":{}},"body":{"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/SvgIconsModule.html":{},"modules.html":{},"overview.html":{}}}],["svgiconsmodule.forroot(({icons",{"_index":1082,"title":{},"body":{"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{}}}],["svgicontype",{"_index":1407,"title":{"interfaces/SvgIconType.html":{}},"body":{"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"coverage.html":{}}}],["svgicontype[]).concat(...icons",{"_index":1560,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["svgmap",{"_index":1434,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["svgsvgelement",{"_index":1464,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["switch",{"_index":2096,"title":{},"body":{"index.html":{}}}],["switchmap",{"_index":96,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConfiguratorComponent.html":{}}}],["switchmap((context",{"_index":998,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["switchmap(event",{"_index":115,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["synced",{"_index":2035,"title":{},"body":{"index.html":{}}}],["t[number]['name",{"_index":1803,"title":{},"body":{"interfaces/UIBuilderIcon.html":{}}}],["table",{"_index":1885,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1884,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":2127,"title":{},"body":{"index.html":{}}}],["takes",{"_index":2135,"title":{},"body":{"index.html":{}}}],["tap",{"_index":981,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["tap((config",{"_index":246,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["template",{"_index":42,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SvgIconComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["template(s",{"_index":2139,"title":{},"body":{"index.html":{}}}],["template.display",{"_index":671,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["template.iconclass",{"_index":672,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["template.title",{"_index":673,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["template]'},{'name",{"_index":165,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["templatename",{"_index":1570,"title":{},"body":{"directives/TemplateNameDirective.html":{}}}],["templatenamedirective",{"_index":164,"title":{"directives/TemplateNameDirective.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/SvgIconComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["templateref",{"_index":79,"title":{},"body":{"components/AutocompleteComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToolbarComponent.html":{}}}],["templates",{"_index":752,"title":{},"body":{"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["templateurl",{"_index":436,"title":{},"body":{"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["test",{"_index":271,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["tested",{"_index":491,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["text",{"_index":493,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["textarea",{"_index":1230,"title":{},"body":{"components/HtmlEditorComponent.html":{}}}],["therefore",{"_index":2026,"title":{},"body":{"index.html":{}}}],["thing",{"_index":1028,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this._data",{"_index":1295,"title":{},"body":{"components/ItemComponent.html":{}}}],["this._getconfig(id",{"_index":254,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this._getconfig(value.id",{"_index":286,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this._hoveredid",{"_index":774,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this._showtree",{"_index":1022,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.addvaluetolist(this.values",{"_index":515,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.alignmenthorizontal",{"_index":1169,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["this.alignmentvertical",{"_index":1168,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["this.cdr.markforcheck",{"_index":1006,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ZoneComponent.html":{}}}],["this.cdref.markforcheck",{"_index":642,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.checkcondition(condition",{"_index":409,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["this.checkdata(condition",{"_index":392,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["this.checkequals(value",{"_index":417,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["this.checkregexp(value",{"_index":416,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["this.checksinglevalue(condition",{"_index":413,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["this.children.foreach",{"_index":1019,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ZoneComponent.html":{}}}],["this.classes",{"_index":1173,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{}}}],["this.classes.filter(c",{"_index":1180,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["this.classes.includes('flex",{"_index":1166,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["this.classes.indexof(style",{"_index":1178,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["this.classes.join",{"_index":1176,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["this.classes.push(style",{"_index":1187,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["this.clickinprogress",{"_index":105,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.close.next(success",{"_index":1345,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.condition",{"_index":1298,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.conditionsdata",{"_index":1300,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.conditionservice.checkdata(params",{"_index":560,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["this.conditionsservice.check(this.config?.condition",{"_index":1299,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.conditionsservice.selectdata(condition",{"_index":508,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.conditionsservice.writecondition(condition",{"_index":525,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.config",{"_index":1293,"title":{},"body":{"components/ItemComponent.html":{},"components/SvgIconComponent.html":{},"directives/TooltipDirective.html":{}}}],["this.config.classes",{"_index":1175,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{}}}],["this.config.classes?.split",{"_index":1174,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["this.configservice.generateid(config.id",{"_index":1042,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configservice.generateid(dropped",{"_index":346,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.configservice.getconfig(context.id",{"_index":1040,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configservice.getcontainer(containerid",{"_index":332,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.configservice.getcontainer(context.parentid",{"_index":1036,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configservice.getcontainer(dropped.container",{"_index":337,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.configservice.init",{"_index":1986,"title":{},"body":{"index.html":{}}}],["this.configservice.iscontainer(id",{"_index":1307,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.configservice.isused(c.id",{"_index":690,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.configservice.removeconfig(item.display",{"_index":714,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.configservice.updateconfig([config",{"_index":1046,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configservice.updateconfig([container",{"_index":354,"title":{},"body":{"interfaces/ComponentCreator.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.configservice.updateconfig([ogcontainer",{"_index":364,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.configservice.updateconfig(config",{"_index":1003,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configservice.updateconfig(container",{"_index":370,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.configservice.updateconfig(this.config",{"_index":1177,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["this.configservice.watchallconfig",{"_index":639,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.configservice.watchallconfig().subscribe",{"_index":1288,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.configservice.watchallconfig().subscribe(config",{"_index":1004,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configservice.watchconfig(this.id).subscribe((config",{"_index":1285,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.configservice.watchconfig(this.id).subscribe((id",{"_index":1841,"title":{},"body":{"components/ZoneComponent.html":{}}}],["this.configurableservice.clickconfigurable(this",{"_index":873,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.configurableservice.configurabledirectivemap.get(hoveredid",{"_index":1716,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.configurableservice.configurabledirectivemap.get(id",{"_index":1709,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.configurableservice.configurabledirectivemap.get(this.zone",{"_index":881,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.configurableservice.configurabledirectivemap.set(this.id",{"_index":862,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.configurableservice.editorenabled",{"_index":1836,"title":{},"body":{"components/ZoneComponent.html":{}}}],["this.configurableservice.editorenabled$.subscribe(value",{"_index":1011,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configurableservice.hoveredid",{"_index":887,"title":{},"body":{"directives/ConfigurableDirective.html":{},"components/TreeComponent.html":{}}}],["this.configurableservice.mouseenterconfigurable(this",{"_index":867,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.configurableservice.mouseleaveconfigurable(this",{"_index":868,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.configurableservice.mouseoverconfigurable(this",{"_index":866,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.configurableservice.stopediting",{"_index":1018,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configurableservice.toggleeditor",{"_index":1622,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.configuration",{"_index":1005,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/TreeComponent.html":{}}}],["this.configuration.foreach((el",{"_index":1682,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.configurationmap",{"_index":1681,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.configurationmap.get(id",{"_index":1696,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.configurationmap.set(el.id",{"_index":1683,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.configurationmap.set(id",{"_index":1697,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.configurationmap.values()].filter((el",{"_index":1702,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.configurators",{"_index":1002,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configurators[tpl.templatename",{"_index":1021,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.configurators[type",{"_index":675,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.container",{"_index":1665,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.context.config.condition",{"_index":526,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.context.config.condition!.field",{"_index":537,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.context.config.condition?.values.push({value",{"_index":535,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.context.config.condition?.values.splice(i",{"_index":536,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.context.configchanged",{"_index":502,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.context.context.conditionsdata",{"_index":509,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.context.context.data",{"_index":505,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.context.context.data.foreach(item",{"_index":519,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.context.context.data[this.context.context.dataindex",{"_index":506,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.context.context.dataindex",{"_index":504,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.context.templates",{"_index":668,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.context.templates![type",{"_index":670,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.context.templates?.[c.type]?.display",{"_index":689,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.createconfig",{"_index":1522,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.data",{"_index":507,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/ItemComponent.html":{}}}],["this.data[this.dataindex",{"_index":1297,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.dataindex",{"_index":1296,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.debugtext",{"_index":524,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.direction",{"_index":1167,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["this.document",{"_index":1437,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["this.document.createelement('div",{"_index":1467,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["this.dragdropservice.draggedcreator",{"_index":695,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.dragdropservice.handlecancel(index",{"_index":1306,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.dragdropservice.handledrop",{"_index":1846,"title":{},"body":{"components/ZoneComponent.html":{}}}],["this.dragdropservice.handledrop(item",{"_index":1303,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.draggedcreator",{"_index":347,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.draggedcreator?.type",{"_index":344,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.edited",{"_index":994,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.edited$.next(configurable",{"_index":793,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.edited$.next(undefined",{"_index":797,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.edited$.pipe(filter(this.isconfigurable",{"_index":799,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.editorenabled$.next(enabled",{"_index":804,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.editorenabled$.value",{"_index":803,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.el",{"_index":1594,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.el.nativeelement",{"_index":861,"title":{},"body":{"directives/ConfigurableDirective.html":{},"directives/TooltipDirective.html":{}}}],["this.el.nativeelement.addeventlistener('hidden.bs.modal",{"_index":1343,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.el.nativeelement.classlist.contains('edited",{"_index":877,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.el.nativeelement.classlist.contains('flex",{"_index":1309,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.element.classlist.add(`svg",{"_index":1508,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.element.classlist.remove(`svg",{"_index":1506,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.element.innerhtml",{"_index":1509,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.element.setattribute('aria",{"_index":1505,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.element.style.color",{"_index":1520,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.element.style.fontsize",{"_index":1511,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.element.style.height",{"_index":1517,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.element.style.width",{"_index":1514,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.existingpalette",{"_index":678,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.fields",{"_index":510,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.findparent(id",{"_index":278,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.generateautopalette",{"_index":647,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.generateexistingpalette(configs",{"_index":641,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.generateexistingpalette(this.configservice.getallconfig",{"_index":651,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.get(name",{"_index":1465,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["this.getallconfig",{"_index":280,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.getconfig(id",{"_index":239,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.highlight",{"_index":865,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.historystate",{"_index":224,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.historystate.hasfuture",{"_index":312,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.historystate.haspast",{"_index":310,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.historystate.pause",{"_index":255,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.historystate.redo",{"_index":316,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.historystate.resume",{"_index":257,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.historystate.undo",{"_index":314,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.host.nativeelement",{"_index":1524,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.hoveredid",{"_index":779,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.html",{"_index":1658,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.id",{"_index":886,"title":{},"body":{"directives/ConfigurableDirective.html":{},"components/ItemComponent.html":{},"components/ZoneComponent.html":{}}}],["this.inputelement.value",{"_index":123,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.insertnew(container",{"_index":350,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.iscontainerconfig(config",{"_index":261,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.iscontainerconfig(item",{"_index":282,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.iscontainerconfig(this._getconfig(id",{"_index":266,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.itemclicked.next({data",{"_index":1848,"title":{},"body":{"components/ZoneComponent.html":{}}}],["this.lastkey",{"_index":1507,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.mergedconfig",{"_index":1521,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.mergedconfig.sizes[this.mergedconfig.defaultsize",{"_index":1523,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.mergedconfig.sizes[value",{"_index":1512,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.message",{"_index":1593,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.modal",{"_index":699,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.modal.close",{"_index":705,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.modal.close.complete",{"_index":711,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.modal.close.next(success",{"_index":709,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.modal.config",{"_index":710,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.modal.show",{"_index":1341,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modal?.dispose",{"_index":1342,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modal?.hide",{"_index":1346,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.movebetween(container",{"_index":341,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.movewithin(og",{"_index":339,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{}}}],["this.nativeelement",{"_index":860,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.ngmodel.update",{"_index":1364,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["this.ngmodelchangedebounced.emit(value",{"_index":1367,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["this.offcanvas",{"_index":1012,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.offcanvas.hide",{"_index":1013,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.offcanvas.show",{"_index":996,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.offcanvas.toggle",{"_index":1039,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.offcanvasbodyel.nativeelement.scroll(0",{"_index":1023,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.offcanvasel.nativeelement.addeventlistener('hide.bs.offcanvas",{"_index":1017,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.onmodalclose(false",{"_index":1344,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.ontoastmessage.next(message",{"_index":1607,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.openmodal(id",{"_index":674,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.options",{"_index":645,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/ToastComponent.html":{}}}],["this.options.enablerawhtml",{"_index":661,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.options.enablesubcontainers",{"_index":655,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.options.paletteoptions",{"_index":1031,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.options.rawhtmlplaceholder",{"_index":667,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.placement",{"_index":1664,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.previousconfigurableelement",{"_index":782,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.previousconfigurableelement.id",{"_index":783,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.previousconfigurableelement.removeedited",{"_index":790,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.previousconfigurableelement.removeselected",{"_index":791,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.previousconfigurableelement.zone",{"_index":784,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.previousconfigurableelement?.removeedited",{"_index":795,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.previousconfigurableelement?.removeselected",{"_index":796,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["this.register(config.icons",{"_index":1440,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["this.register(config.missingiconfallback",{"_index":1442,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["this.registry.get(name",{"_index":1503,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.registry.get(this.config.missingiconfallback?.name",{"_index":1504,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["this.removeedited",{"_index":878,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.removeselected",{"_index":879,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.renderer.addclass(this.el.nativeelement",{"_index":883,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.renderer.removeclass(this.el.nativeelement",{"_index":884,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.resolveoptions(context.zone",{"_index":1001,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.root",{"_index":1701,"title":{},"body":{"components/TreeComponent.html":{}}}],["this.select",{"_index":111,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.select.next(value",{"_index":125,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.selectdata(condition",{"_index":391,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["this.service.register",{"_index":1559,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["this.service.register(missingiconfallback",{"_index":1561,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["this.settooltip",{"_index":1657,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.showtree(false",{"_index":997,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.standardpalette",{"_index":653,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.standardpalette.push",{"_index":656,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["this.store",{"_index":223,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.store.pipe",{"_index":242,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.store.pipe(selectall",{"_index":234,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.store.query(getentities",{"_index":236,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.store.query(getentity(id",{"_index":252,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.store.subscribe(console.log",{"_index":228,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.store.update",{"_index":230,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.store.update(addentities(config",{"_index":256,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.store.update(deleteentities(id",{"_index":295,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["this.sub",{"_index":1591,"title":{},"body":{"components/ToastComponent.html":{},"components/ZoneComponent.html":{}}}],["this.sub.unsubscribe",{"_index":1600,"title":{},"body":{"components/ToastComponent.html":{},"components/ZoneComponent.html":{}}}],["this.subs",{"_index":1363,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["this.subs.foreach((s",{"_index":1291,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.subs.push(configchanges",{"_index":1289,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.subs.unsubscribe",{"_index":1368,"title":{},"body":{"directives/NgModelChangeDebouncedDirective.html":{}}}],["this.suggestgenerator(this.inputelement.value",{"_index":120,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.suggests",{"_index":101,"title":{},"body":{"components/AutocompleteComponent.html":{}}}],["this.svgmap",{"_index":1444,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["this.svgmap.get(key",{"_index":1446,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["this.svgmap.has(name",{"_index":1460,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["this.svgmap.set(name",{"_index":1461,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["this.templates[tpl.templatename",{"_index":1844,"title":{},"body":{"components/ZoneComponent.html":{}}}],["this.toast",{"_index":1595,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toast.show",{"_index":1597,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastservice.ontoastmessage.subscribe((message",{"_index":1592,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toelement(icon.content",{"_index":1448,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["this.tooltip",{"_index":1662,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.tooltip?.dispose",{"_index":1656,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.updatecondition",{"_index":1283,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.updateconfig",{"_index":534,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["this.updateconfig(config",{"_index":1286,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.updateconfig(false",{"_index":495,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.updateconfig(this.configservice.getconfig(this.id",{"_index":1290,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.updatedata",{"_index":1282,"title":{},"body":{"components/ItemComponent.html":{}}}],["this.updatedata(this.context.config.condition",{"_index":497,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.updatedebugtext(this.context.config.condition",{"_index":500,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.updatefields",{"_index":498,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.updatevalues(this.context.config.condition",{"_index":499,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.values",{"_index":512,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["this.writevalue(condition",{"_index":397,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["this.zone",{"_index":880,"title":{},"body":{"directives/ConfigurableDirective.html":{}}}],["this.zoneoptions[zone",{"_index":1027,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["this.zoneoptions[zone]?.paletteoptions",{"_index":1032,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["those",{"_index":2062,"title":{},"body":{"index.html":{}}}],["throw",{"_index":262,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["times",{"_index":1998,"title":{},"body":{"index.html":{}}}],["title",{"_index":584,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"directives/TemplateNameDirective.html":{},"directives/TooltipDirective.html":{}}}],["toast",{"_index":1572,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast'},{'name",{"_index":152,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["toast.component.html",{"_index":1573,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.getorcreateinstance(this.el.nativeelement",{"_index":1596,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.options",{"_index":1578,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.service",{"_index":1590,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast/toast.component",{"_index":1813,"title":{},"body":{"modules/UtilsModule.html":{}}}],["toastcomponent",{"_index":151,"title":{"components/ToastComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toastservice",{"_index":1576,"title":{"injectables/ToastService.html":{}},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toelement",{"_index":1532,"title":{},"body":{"injectables/SvgIconRegistry.html":{}}}],["toelement(content",{"_index":1470,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["toggle",{"_index":764,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["toggleclass",{"_index":1116,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["toggleclass(style",{"_index":1124,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["toggleeditor",{"_index":801,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ToolbarComponent.html":{}}}],["tokens",{"_index":301,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["tokens.length",{"_index":307,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["tokens.slice(0",{"_index":306,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["tokens[tokens.length",{"_index":305,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["toolbar",{"_index":930,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"index.html":{}}}],["toolbar'},{'name",{"_index":154,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["toolbar.component",{"_index":1080,"title":{},"body":{"modules/ConfiguratorModule.html":{}}}],["toolbar.component.html",{"_index":1616,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcomponent",{"_index":153,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tooltip",{"_index":167,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["tooltip's",{"_index":1165,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"directives/TooltipDirective.html":{}}}],["tooltip.directive",{"_index":1808,"title":{},"body":{"modules/UtilsModule.html":{}}}],["tooltip.getorcreateinstance",{"_index":1648,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tooltip.getorcreateinstance(this.el.nativeelement",{"_index":1663,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tooltipdirective",{"_index":166,"title":{"directives/TooltipDirective.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"modules/UtilsModule.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":30,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{}}}],["tort",{"_index":2206,"title":{},"body":{"license.html":{}}}],["tpl",{"_index":1020,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ZoneComponent.html":{}}}],["trace",{"_index":2147,"title":{},"body":{"index.html":{}}}],["track",{"_index":540,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["trackbyfn",{"_index":446,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["trackbyfn(index",{"_index":468,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["transclusion",{"_index":1959,"title":{},"body":{"index.html":{}}}],["transform",{"_index":550,"title":{},"body":{"pipes/ConditionPipe.html":{},"components/FlexEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["transform(value",{"_index":551,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["transition",{"_index":1214,"title":{},"body":{"components/FlexEditorComponent.html":{},"components/SvgIconComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{}}}],["translate(0",{"_index":1745,"title":{},"body":{"components/TreeComponent.html":{}}}],["translate(9999px",{"_index":1743,"title":{},"body":{"components/TreeComponent.html":{}}}],["translation",{"_index":2154,"title":{},"body":{"index.html":{}}}],["trash",{"_index":1796,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"interfaces/UIBuilderIcon.html":{},"components/ZoneComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tree'},{'name",{"_index":156,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["tree.component.css",{"_index":1667,"title":{},"body":{"components/TreeComponent.html":{}}}],["tree.component.html",{"_index":1668,"title":{},"body":{"components/TreeComponent.html":{}}}],["tree/tree.component",{"_index":1081,"title":{},"body":{"modules/ConfiguratorModule.html":{}}}],["treecomponent",{"_index":155,"title":{"components/TreeComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"modules/ConfiguratorModule.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trigger",{"_index":1629,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["trivial",{"_index":1992,"title":{},"body":{"index.html":{}}}],["true",{"_index":389,"title":{},"body":{"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"components/ConfiguratorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"components/ToastComponent.html":{},"directives/TooltipDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":423,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["tslib",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["turned",{"_index":1185,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["turnoff",{"_index":1125,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["turnoff.find(o",{"_index":1182,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["type",{"_index":57,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/ComponentCreator.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"interfaces/ContainerConfig.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"interfaces/SVG_CONFIG.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"interfaces/SvgIconType.html":{},"modules/SvgIconsModule.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"interfaces/UIBuilderIcon.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.slice(1",{"_index":300,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["type.split",{"_index":302,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["type.startswith(\"_",{"_index":299,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["typealiases",{"_index":2216,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":503,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/ItemComponent.html":{},"components/SvgIconComponent.html":{},"components/ZoneComponent.html":{}}}],["types",{"_index":1432,"title":{},"body":{"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{}}}],["ui",{"_index":1912,"title":{},"body":{"index.html":{}}}],["uib",{"_index":14,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"directives/ConfigurableDirective.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/SvgIconComponent.html":{},"directives/TemplateNameDirective.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["uibcondition",{"_index":549,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["uibuildericon",{"_index":1769,"title":{"interfaces/UIBuilderIcon.html":{}},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uibuildericonalignxcenter",{"_index":1773,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uibuildericonalignxend",{"_index":1775,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uibuildericonalignxspacearound",{"_index":1777,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uibuildericonalignxspacebetween",{"_index":1779,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uibuildericonalignxstart",{"_index":1781,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uibuildericonalignxstretch",{"_index":1783,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uibuildericonalignybaseline",{"_index":1785,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uibuildericonalignycenter",{"_index":1786,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uibuildericonalignyend",{"_index":1787,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uibuildericonalignystart",{"_index":1788,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uibuildericonalignystretch",{"_index":1789,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uibuildericonarrowdown",{"_index":1790,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uibuildericonarrowforward",{"_index":1791,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uibuildericoneye",{"_index":1798,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uibuildericoneyeslash",{"_index":1800,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uibuildericongrip",{"_index":1797,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uibuildericonnamesubset",{"_index":1802,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{}}}],["uibuildericonredo",{"_index":1794,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uibuildericontrash",{"_index":1795,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uibuildericontree",{"_index":1792,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uibuildericonundo",{"_index":1793,"title":{},"body":{"interfaces/UIBuilderIcon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ul",{"_index":1720,"title":{},"body":{"components/TreeComponent.html":{}}}],["ul.tree",{"_index":1732,"title":{},"body":{"components/TreeComponent.html":{}}}],["ul::before",{"_index":1738,"title":{},"body":{"components/TreeComponent.html":{}}}],["undefined",{"_index":245,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"interfaces/ContainerConfig.html":{},"injectables/DragDropService.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["understand",{"_index":494,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["undo",{"_index":313,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"interfaces/UIBuilderIcon.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["undo/redo",{"_index":2025,"title":{},"body":{"index.html":{}}}],["undoable",{"_index":2030,"title":{},"body":{"index.html":{}}}],["unique",{"_index":2001,"title":{},"body":{"index.html":{}}}],["unless",{"_index":1184,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["update",{"_index":648,"title":{},"body":{"interfaces/ConfigModal.html":{},"directives/ConfigurableDirective.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{}}}],["updatecondition",{"_index":1245,"title":{},"body":{"components/ItemComponent.html":{}}}],["updateconfig",{"_index":447,"title":{},"body":{"components/ConditionEditorComponent.html":{},"injectables/ConfigService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{}}}],["updateconfig(config",{"_index":1266,"title":{},"body":{"components/ItemComponent.html":{}}}],["updateconfig(notify",{"_index":470,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["updateconfig(value",{"_index":284,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["updatedata",{"_index":448,"title":{},"body":{"components/ConditionEditorComponent.html":{},"components/ItemComponent.html":{}}}],["updatedata(condition",{"_index":473,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["updatedebugtext",{"_index":449,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["updatedebugtext(condition",{"_index":475,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["updateentities",{"_index":198,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["updateentities([v.id",{"_index":292,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["updatefields",{"_index":450,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["updatevalues",{"_index":451,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["updatevalues(condition",{"_index":478,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["url(\"data:image/svg+xml,%3csvg",{"_index":1749,"title":{},"body":{"components/TreeComponent.html":{}}}],["usd",{"_index":1935,"title":{},"body":{"index.html":{}}}],["use",{"_index":1632,"title":{},"body":{"directives/TooltipDirective.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":274,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"directives/TooltipDirective.html":{},"index.html":{}}}],["user",{"_index":702,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"components/TreeComponent.html":{},"index.html":{}}}],["users",{"_index":1943,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":1555,"title":{},"body":{"modules/SvgIconsModule.html":{}}}],["using",{"_index":2087,"title":{},"body":{"index.html":{}}}],["utilities",{"_index":2110,"title":{},"body":{"index.html":{}}}],["utilities.min",{"_index":2114,"title":{},"body":{"index.html":{}}}],["utils",{"_index":591,"title":{},"body":{"interfaces/ConfigModal.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/ItemComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{}}}],["utils/svg",{"_index":1075,"title":{},"body":{"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{}}}],["utils/template",{"_index":984,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ZoneComponent.html":{}}}],["utils/types.helpers",{"_index":983,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["utils/utils.module",{"_index":1078,"title":{},"body":{"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{}}}],["utilsmodule",{"_index":1065,"title":{"modules/UtilsModule.html":{}},"body":{"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/UtilsModule.html":{},"modules.html":{},"overview.html":{}}}],["v",{"_index":293,"title":{},"body":{"interfaces/ComponentConfig.html":{},"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["v)).join(operator",{"_index":398,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["value",{"_index":75,"title":{},"body":{"components/AutocompleteComponent.html":{},"interfaces/ComponentConfig.html":{},"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"pipes/ConditionPipe.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ContainerConfig.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"classes/SvgIcon.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"modules/SvgIconsModule.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"directives/TooltipDirective.html":{},"components/ZoneComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value(s",{"_index":544,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["value.map(v",{"_index":289,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["value.match(condition.$regexp",{"_index":431,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["value.not",{"_index":401,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["value.tolowercase",{"_index":420,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["value.value",{"_index":406,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["values",{"_index":374,"title":{},"body":{"interfaces/Condition.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{},"directives/TooltipDirective.html":{},"index.html":{}}}],["values.includes(data",{"_index":522,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["values.push(data",{"_index":523,"title":{},"body":{"components/ConditionEditorComponent.html":{}}}],["value}px",{"_index":1530,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["var",{"_index":130,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["variable",{"_index":1864,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":2220,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":659,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["verify",{"_index":2094,"title":{},"body":{"index.html":{}}}],["version",{"_index":2214,"title":{},"body":{"properties.html":{}}}],["vertical",{"_index":1148,"title":{},"body":{"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{}}}],["via",{"_index":2090,"title":{},"body":{"index.html":{}}}],["viewbox='0",{"_index":1753,"title":{},"body":{"components/TreeComponent.html":{}}}],["viewchild",{"_index":980,"title":{},"body":{"components/ConfiguratorComponent.html":{},"components/ModalComponent.html":{},"components/ToastComponent.html":{}}}],["viewchild('modal",{"_index":1332,"title":{},"body":{"components/ModalComponent.html":{}}}],["viewchild('offcanvas",{"_index":977,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["viewchild('offcanvasbody",{"_index":975,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["viewchild('toastref",{"_index":1586,"title":{},"body":{"components/ToastComponent.html":{}}}],["views.module.ts",{"_index":1103,"title":{},"body":{"modules/DynamicViewsModule.html":{}}}],["views/condition.pipe.ts",{"_index":548,"title":{},"body":{"pipes/ConditionPipe.html":{},"coverage.html":{}}}],["views/condition.pipe.ts:10",{"_index":556,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["views/condition.pipe.ts:13",{"_index":553,"title":{},"body":{"pipes/ConditionPipe.html":{}}}],["views/drag",{"_index":319,"title":{},"body":{"interfaces/ComponentCreator.html":{},"interfaces/ConfigModal.html":{},"interfaces/ContainerIndex.html":{},"injectables/DragDropService.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"coverage.html":{}}}],["views/dynamic",{"_index":1102,"title":{},"body":{"modules/DynamicViewsModule.html":{}}}],["views/item.component.ts",{"_index":1235,"title":{},"body":{"components/ItemComponent.html":{},"coverage.html":{}}}],["views/item.component.ts:100",{"_index":1261,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:105",{"_index":1255,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:109",{"_index":1256,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:27",{"_index":1252,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:28",{"_index":1253,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:29",{"_index":1249,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:30",{"_index":1250,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:31",{"_index":1247,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:33",{"_index":1251,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:35",{"_index":1248,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:38",{"_index":1254,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:40",{"_index":1272,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:41",{"_index":1270,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:43",{"_index":1277,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:45",{"_index":1246,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:48",{"_index":1273,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:49",{"_index":1271,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:50",{"_index":1274,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:51",{"_index":1269,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:52",{"_index":1275,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:55",{"_index":1257,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:62",{"_index":1259,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:70",{"_index":1258,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:74",{"_index":1267,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:83",{"_index":1268,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:87",{"_index":1265,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/item.component.ts:93",{"_index":1264,"title":{},"body":{"components/ItemComponent.html":{}}}],["views/zone.component.ts",{"_index":1814,"title":{},"body":{"components/ZoneComponent.html":{},"coverage.html":{}}}],["views/zone.component.ts:28",{"_index":1832,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:29",{"_index":1838,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:31",{"_index":1822,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:32",{"_index":1821,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:33",{"_index":1820,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:35",{"_index":1823,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:37",{"_index":1837,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:39",{"_index":1819,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:42",{"_index":1833,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:43",{"_index":1834,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:44",{"_index":1835,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:45",{"_index":1831,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:48",{"_index":1826,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:54",{"_index":1824,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:60",{"_index":1825,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:64",{"_index":1840,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:68",{"_index":1828,"title":{},"body":{"components/ZoneComponent.html":{}}}],["views/zone.component.ts:79",{"_index":1830,"title":{},"body":{"components/ZoneComponent.html":{}}}],["visible",{"_index":1611,"title":{},"body":{"components/ToolbarComponent.html":{},"index.html":{}}}],["visual",{"_index":2017,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":2049,"title":{},"body":{"index.html":{}}}],["visually",{"_index":2083,"title":{},"body":{"index.html":{}}}],["void",{"_index":69,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/ConfigModal.html":{},"injectables/ConfigService.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"injectables/DragDropService.html":{},"components/FlexEditorComponent.html":{},"interfaces/FlexOption.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"directives/NgModelChangeDebouncedDirective.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"interfaces/PaletteOptions.html":{},"components/SvgIconComponent.html":{},"injectables/SvgIconRegistry.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"components/ToolbarComponent.html":{},"directives/TooltipDirective.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{}}}],["want",{"_index":1944,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":2193,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2188,"title":{},"body":{"license.html":{}}}],["watchallconfig",{"_index":233,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["watchconfig",{"_index":725,"title":{},"body":{"injectables/ConfigService.html":{}}}],["watchconfig(id",{"_index":237,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["watchedited",{"_index":798,"title":{},"body":{"interfaces/Configurable.html":{},"injectables/ConfigurableService.html":{}}}],["weight",{"_index":1315,"title":{},"body":{"components/ItemComponent.html":{}}}],["well",{"_index":1635,"title":{},"body":{"directives/TooltipDirective.html":{},"index.html":{}}}],["whether",{"_index":272,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"license.html":{}}}],["white",{"_index":1227,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["whose",{"_index":682,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{},"index.html":{}}}],["wide",{"_index":2079,"title":{},"body":{"index.html":{}}}],["width",{"_index":31,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ConditionEditorComponent.html":{},"components/FlexEditorComponent.html":{},"components/ItemComponent.html":{},"components/SvgIconComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{}}}],["width(value",{"_index":1513,"title":{},"body":{"components/SvgIconComponent.html":{}}}],["width='16",{"_index":1751,"title":{},"body":{"components/TreeComponent.html":{}}}],["width='2",{"_index":1761,"title":{},"body":{"components/TreeComponent.html":{}}}],["withentities",{"_index":195,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{}}}],["within",{"_index":275,"title":{},"body":{"interfaces/ComponentConfig.html":{},"injectables/ConfigService.html":{},"interfaces/ContainerConfig.html":{},"index.html":{}}}],["without",{"_index":1699,"title":{},"body":{"components/TreeComponent.html":{},"index.html":{},"license.html":{}}}],["world",{"_index":2074,"title":{},"body":{"index.html":{}}}],["wrap",{"_index":1188,"title":{},"body":{"components/FlexEditorComponent.html":{}}}],["wrapping",{"_index":2081,"title":{},"body":{"index.html":{}}}],["write",{"_index":664,"title":{},"body":{"interfaces/ConfigModal.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteItem.html":{}}}],["writecondition",{"_index":568,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["writecondition(condition",{"_index":393,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["writevalue",{"_index":569,"title":{},"body":{"injectables/ConditionsService.html":{}}}],["writevalue(condition",{"_index":399,"title":{},"body":{"interfaces/Condition.html":{},"interfaces/ConditionValue.html":{},"injectables/ConditionsService.html":{}}}],["writing",{"_index":1923,"title":{},"body":{"index.html":{}}}],["wysiwyg",{"_index":2034,"title":{},"body":{"index.html":{}}}],["xl",{"_index":1416,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconType.html":{}}}],["xmidymid",{"_index":1453,"title":{},"body":{"classes/SvgIcon.html":{},"injectables/SvgIconRegistry.html":{}}}],["xmlns='http://www.w3.org/2000/svg",{"_index":1750,"title":{},"body":{"components/TreeComponent.html":{}}}],["xs",{"_index":1412,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconType.html":{}}}],["xxl",{"_index":1417,"title":{},"body":{"interfaces/SVG_CONFIG.html":{},"components/SvgIconComponent.html":{},"interfaces/SvgIconType.html":{}}}],["yes",{"_index":554,"title":{},"body":{"pipes/ConditionPipe.html":{},"injectables/ConditionsService.html":{},"components/PaletteComponent.html":{},"components/ZoneComponent.html":{}}}],["z",{"_index":18,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/TreeComponent.html":{}}}],["zone",{"_index":158,"title":{},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"interfaces/Configurable.html":{},"directives/ConfigurableDirective.html":{},"injectables/ConfigurableService.html":{},"components/ConfiguratorComponent.html":{},"interfaces/ConfiguratorContext.html":{},"interfaces/ConfiguratorOptions.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"interfaces/PaletteOptions.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"index.html":{}}}],["zone.component",{"_index":1105,"title":{},"body":{"modules/DynamicViewsModule.html":{}}}],["zone.component.html",{"_index":1815,"title":{},"body":{"components/ZoneComponent.html":{}}}],["zone.js",{"_index":1905,"title":{},"body":{"dependencies.html":{}}}],["zonecomponent",{"_index":157,"title":{"components/ZoneComponent.html":{}},"body":{"components/AutocompleteComponent.html":{},"components/ClassEditorComponent.html":{},"components/ConditionEditorComponent.html":{},"components/ConfiguratorComponent.html":{},"modules/DynamicViewsModule.html":{},"components/FlexEditorComponent.html":{},"components/HtmlEditorComponent.html":{},"components/ItemComponent.html":{},"components/ModalComponent.html":{},"components/PaletteComponent.html":{},"components/SvgIconComponent.html":{},"components/ToastComponent.html":{},"components/ToolbarComponent.html":{},"components/TreeComponent.html":{},"components/ZoneComponent.html":{},"coverage.html":{},"overview.html":{}}}],["zoneoptions",{"_index":943,"title":{},"body":{"components/ConfiguratorComponent.html":{}}}],["zones",{"_index":2010,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":895,"title":{},"body":{"modules/ConfigurableModule.html":{},"modules/ConfiguratorModule.html":{},"modules/DynamicViewsModule.html":{},"modules/SvgIconsModule.html":{},"modules/UtilsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AutocompleteComponent.html":{"url":"components/AutocompleteComponent.html","title":"component - AutocompleteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AutocompleteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/utils/autocomplete.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-autocomplete\n            \n\n\n            \n                styles\n                \n.card {\n  z-index: 3;\n  box-shadow: 0 5px 7px rgb(0 0 0 / 8%);\n}\n.list-group {\n  top: 0;\n  width: 100%;\n  max-height: 200px;\n  overflow: auto;\n}\n.list-group-item-action {\n  cursor: pointer;\n}\n\n            \n\n            \n                template\n                \n  \n    \n      \n    \n  \n\n\n{{suggest}}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clickInProgress\n                            \n                            \n                                itemTpl\n                            \n                            \n                                suggests$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allSuggests\n                            \n                            \n                                inputElement\n                            \n                            \n                                suggestGenerator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                select\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allSuggests\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/autocomplete.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        inputElement\n                    \n                \n                \n                    \n                        Type :     HTMLInputElement\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/autocomplete.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        suggestGenerator\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/autocomplete.component.ts:36\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        select\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/autocomplete.component.ts:38\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/autocomplete.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/autocomplete.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        clickInProgress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/autocomplete.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemTpl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild('itemTpl', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/autocomplete.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        suggests$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Observable()\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/autocomplete.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, Output, EventEmitter, ContentChild, TemplateRef } from \"@angular/core\";\nimport { fromEvent, merge, Observable, of } from \"rxjs\";\nimport { filter, switchMap } from \"rxjs/operators\";\n\n@Component({\n  selector: 'uib-autocomplete',\n  template: `\n\n  \n    \n      \n    \n  \n\n\n{{suggest}}\n  `,\n  styles: [`\n.card {\n  z-index: 3;\n  box-shadow: 0 5px 7px rgb(0 0 0 / 8%);\n}\n.list-group {\n  top: 0;\n  width: 100%;\n  max-height: 200px;\n  overflow: auto;\n}\n.list-group-item-action {\n  cursor: pointer;\n}\n`]\n})\nexport class AutocompleteComponent implements OnInit {\n  @Input() inputElement: HTMLInputElement;\n  @Input() suggestGenerator?: (value: string) => Observable;\n  @Input() allSuggests?: string[];\n  @Output() select = new EventEmitter();\n  @ContentChild(\"itemTpl\", {static: false}) itemTpl: TemplateRef;\n  suggests$ = new Observable();\n  clickInProgress = false;\n\n  ngOnInit() {\n    this.suggests$ = merge(\n      fromEvent(this.inputElement, 'input'),\n      fromEvent(this.inputElement, 'focus'),\n      fromEvent(this.inputElement, 'blur').pipe(filter(() => (!this.clickInProgress))), // Filter out blur event caused by a click on the autocomplete\n      this.select // Hide the autocomplete when an item has been selected\n    ).pipe(\n      switchMap(event => {\n        if(typeof event !== 'string' && event.type !== 'blur') {\n          if(this.suggestGenerator) {\n            return this.suggestGenerator(this.inputElement.value);\n          }\n          else if(this.allSuggests) {\n            return of(this.allSuggests.filter(suggest => suggest !== this.inputElement.value && suggest.includes(this.inputElement.value)));\n          }\n        }\n        return of([]);\n      })\n    );\n  }\n\n  onSelect(value: string) {\n    this.inputElement.value = value;\n    this.select.next(value);\n  }\n\n}\n    \n\n\n    \n            \n.card {\n  z-index: 3;\n  box-shadow: 0 5px 7px rgb(0 0 0 / 8%);\n}\n.list-group {\n  top: 0;\n  width: 100%;\n  max-height: 200px;\n  overflow: auto;\n}\n.list-group-item-action {\n  cursor: pointer;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{suggest}}'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'AutocompleteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClassEditorComponent.html":{"url":"components/ClassEditorComponent.html","title":"component - ClassEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ClassEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/configurator/editors/class-editor.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-class-editor\n            \n\n\n\n            \n                template\n                CSS Classes\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                context\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        context\n                    \n                \n                \n                    \n                        Type :         ConfiguratorContext\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/editors/class-editor.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { ConfiguratorContext } from '../configurator.models';\n\n@Component({\n  selector: 'uib-class-editor',\n  template: `\n  CSS Classes\n  \n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ClassEditorComponent {\n  @Input() context: ConfiguratorContext;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'CSS Classes'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ClassEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentConfig.html":{"url":"interfaces/ComponentConfig.html","title":"interface - ComponentConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ComponentConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configuration/config.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            classes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            condition\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/configuration/config.service.ts:22\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        condition:         Condition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Condition\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createState, Store } from '@ngneat/elf';\nimport {\n  withEntities,\n  getEntity,\n  addEntities,\n  updateEntities,\n  selectEntity,\n  selectAll,\n  getEntities,\n  deleteEntities,\n  deleteAllEntities,\n} from '@ngneat/elf-entities';\nimport { stateHistory } from '@ngneat/elf-state-history';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Condition } from './conditions.service';\n\nexport interface ComponentConfig {\n  readonly id: string;\n  type: string;\n  classes?: string;\n  [key: string]: any;\n  condition?: Condition;\n}\n\nexport interface ContainerConfig extends ComponentConfig {\n  type: '_container';\n  items: string[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ConfigService {\n  store: Store;\n  historyState: any;\n  \n  init(initialValue: ComponentConfig[]) {\n    const { state, config } = createState(\n      withEntities({ initialValue })\n    );\n    this.store = new Store({ name: 'config', state, config });\n    this.historyState = stateHistory(this.store, { maxAge: Infinity });\n    this.store.subscribe(console.log);\n  }\n\n  set(config: ComponentConfig[]) {\n    this.store.update(\n      deleteAllEntities(),\n      addEntities(config)\n    );\n  }\n\n  public watchAllConfig(): Observable {\n    return this.store.pipe(selectAll());\n  }\n\n  public getAllConfig(): ComponentConfig[] {\n    return this.store.query(getEntities());\n  }\n\n  public watchConfig(id: string): Observable {\n    //console.log('watch:', id);\n    this.getConfig(id); // Ensure a value exists (if 'id' has no config)\n    return this.store.pipe(\n      selectEntity(id),\n      filter(config => config !== undefined),\n      //tap((config) => console.log('change:', config)),\n      map((config) => JSON.parse(JSON.stringify(config)))\n    );\n  }\n\n  private _getConfig(id: string): ComponentConfig | undefined {\n    return this.store.query(getEntity(id));\n  }\n\n  public getConfig(id: string): ComponentConfig {\n    let config = this._getConfig(id);\n    if (!config) {\n      config = { id, type: id };\n      this.historyState.pause();\n      this.store.update(addEntities(config));\n      this.historyState.resume();\n    }\n    return JSON.parse(JSON.stringify(config)); // Deep copy\n  }\n\n  public getContainer(id: string): ContainerConfig {\n    const config = this.getConfig(id);\n    if (!this.isContainerConfig(config)) {\n      throw `${id} is not a container`;\n    }\n    return config;\n  }\n\n  public isContainer(id: string): boolean {\n    return this.isContainerConfig(this._getConfig(id));\n  }\n\n  public isContainerConfig(conf: ComponentConfig|undefined): conf is ContainerConfig {\n    return conf?.type === '_container';\n  }\n\n  /**\n   * Test whether a given component id is used within the hierarchy of a container\n   */\n  public isUsed(id: string) {\n    return !!this.findParent(id);\n  }\n\n  public findParent(id: string): ContainerConfig | undefined {\n    return this.getAllConfig()\n      .find(item => this.isContainerConfig(item) && item.items.includes(id)) as ContainerConfig | undefined;\n  }\n\n  public updateConfig(value: ComponentConfig | ComponentConfig[]) {\n    //console.log('update config', this._getConfig(value.id));\n    //console.log('new config', value);\n    if(!Array.isArray(value)) value = [value];\n    this.store.update(\n      ...value.map(v => {\n        if(!this._getConfig(v.id)){\n          return addEntities(v)\n        }\n        return updateEntities([v.id], () => v)}\n      )\n    );\n  }\n\n  public removeConfig(id: string) {\n    this.store.update(deleteEntities(id));\n  }\n\n  public generateId(type: string) {\n    let idx = 1;\n    let root = type.startsWith(\"_\")? type.slice(1) : type;\n    const tokens = type.split(\"-\");\n    if(tokens[tokens.length-1].match(/\\d+/)) {\n      idx = +tokens[tokens.length-1];\n      root = tokens.slice(0, tokens.length-1).join('-');\n    }\n    let id = root;\n    do {\n      id = `${root}-${idx++}`;\n    } while (this._getConfig(id) || id === type);\n    return id;\n  }\n\n  public canUndo$(){\n    return this.historyState.hasPast$;\n  }\n\n  public canRedo$(){\n    return this.historyState.hasFuture$;\n  }\n\n  public undo() {\n    this.historyState.undo();\n  }\n\n  public redo() {\n    this.historyState.redo();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ComponentCreator.html":{"url":"interfaces/ComponentCreator.html","title":"interface - ComponentCreator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ComponentCreator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/dynamic-views/drag-drop.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createConfig\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createConfig:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  ComponentConfig,\n  ConfigService,\n  ContainerConfig,\n} from '../configuration/config.service';\n\nexport interface ContainerIndex {\n  container: string;\n  index: number;\n}\n\nexport interface ComponentCreator {\n  type: string;\n  createConfig: (id: string, creator?: ComponentCreator) => Observable;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class DragDropService {\n  constructor(public configService: ConfigService) {}\n\n  draggedCreator?: ComponentCreator;\n\n  public handleDrop(\n    containerId: string,\n    index: number,\n    dropped: ContainerIndex | string\n  ) {\n    const container = this.configService.getContainer(containerId);\n    // Drop a component from a container to another container\n    if ((dropped as ContainerIndex).container) {\n      dropped = dropped as ContainerIndex;\n      const og = this.configService.getContainer(dropped.container);\n      if (dropped.container === containerId) {\n        this.moveWithin(og, dropped.index, index);\n      } else {\n        this.moveBetween(container, index, og, dropped.index);\n      }\n    }\n    // Drag a component creator (from a palette)\n    else if (this.draggedCreator?.type === dropped) {\n      const newId = this.configService.generateId(dropped);\n      this.draggedCreator\n        .createConfig(newId, this.draggedCreator)\n        .subscribe((config) => this.insertNew(container, index, config));\n    }\n    else {\n      console.error(\"Unexpected dropped item:\", dropped);\n    }\n  }\n\n  public handleCancel(\n    index: number,\n    containerId: string\n  ) {\n    const container = this.configService.getContainer(containerId);\n    container.items.splice(index, 1);\n    this.configService.updateConfig([container]);\n  }\n\n  private insertNew(\n    container: ContainerConfig,\n    index: number,\n    component: ComponentConfig|undefined\n  ) {\n    if(component) {\n      container.items.splice(index, 0, component.id);\n      this.configService.updateConfig([container, component]); // addEntities might be needed\n    }\n  }\n\n  private moveBetween(\n    container: ContainerConfig,\n    index: number,\n    ogContainer: ContainerConfig,\n    ogIndex: number\n  ) {\n    let item = ogContainer.items.splice(ogIndex, 1);\n    container.items.splice(index, 0, item[0]);\n    this.configService.updateConfig([ogContainer, container]);\n  }\n\n  private moveWithin(\n    container: ContainerConfig,\n    oldIndex: number,\n    newIndex: number\n  ) {\n    if (oldIndex !== newIndex && oldIndex !== newIndex - 1) {\n      let item = container.items.splice(oldIndex, 1);\n      if (newIndex > oldIndex) {\n        newIndex--;\n      }\n      container.items.splice(newIndex, 0, item[0]);\n      this.configService.updateConfig(container);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Condition.html":{"url":"interfaces/Condition.html","title":"interface - Condition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Condition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configuration/conditions.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            field\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            or\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            values\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        or\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        or:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"equals\" | \"regexp\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"equals\" | \"regexp\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        values:     ConditionValue[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ConditionValue[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\n\n\nexport interface Condition {\n  data?: string; // conditionsData selector (or undefined for the main data object)\n  field: string; // The field to select from the data object\n  type: 'equals' | 'regexp';\n  values: ConditionValue[];\n  or?: boolean;\n}\n\nexport interface ConditionValue {\n  value: string;\n  not?: boolean;\n  $regexp?: RegExp;\n}\n\n\n@Injectable({providedIn: 'root'})\nexport class ConditionsService {\n\n  public selectData(condition: Condition, conditionsData?: Record, data?: any): any {\n    return condition.data? conditionsData?.[condition.data] : data;\n  }\n\n  public check(condition: Condition | undefined, conditionsData?: Record, data?: any): boolean {\n    if(!condition) return true;\n    const selectData = this.selectData(condition, conditionsData, data);\n    return this.checkData(condition, selectData);\n  }\n\n  public writeCondition(condition: Condition) {\n    const operator = condition.or? ') OR (' : ') AND (';\n    return '('+condition.values.map(v => this.writeValue(condition, v)).join(operator)+')';\n  }\n\n  public writeValue(condition: Condition, value: ConditionValue) {\n    if(condition.type === 'regexp') {\n      const operator = value.not? '!' : '';\n      return `${operator}${condition.data || 'data'}['${condition.field}'].match(/${value.value}/)'`;\n    }\n    else if (condition.type === 'equals') {\n      const operator = value.not? '!==' : '==='\n      return `${condition.data || 'data'}['${condition.field}'] ${operator} '${value.value}'`;\n    }\n    return '';\n  }\n  \n  public checkData(condition: Condition, data?: any) {\n    const value = data?.[condition.field]?.toString() || '';\n    return this.checkCondition(condition, value);\n  }\n\n  private checkCondition(condition: Condition, data: string): boolean {\n    if(condition.or) {\n      return !!condition.values.find(v => this.checkSingleValue(condition, v, data));\n    }\n    else {\n      return condition.values.every(v => this.checkSingleValue(condition, v, data));\n    }\n  }\n\n  private checkSingleValue(condition: Condition, value: ConditionValue, data: string) {\n    let test;\n    if(condition.type === 'regexp') {\n      test = this.checkRegexp(value, data);\n    }\n    else if(condition.type === 'equals') {\n      test = this.checkEquals(value, data);\n    }\n    return test? !value.not : !!value.not;\n  }\n\n  \n  private checkEquals(condition: ConditionValue, value: string): boolean {\n    return condition.value.toLowerCase() === value.toLowerCase();\n  }\n\n\n  private checkRegexp(condition: ConditionValue, value: string) {\n    if(!condition.$regexp) {\n      try {\n        condition.$regexp = new RegExp(condition.value, 'i');\n      }\n      catch(e) {\n        console.warn(\"Incorrect regular expression \", condition.value);\n        return true;\n      }\n    }\n    return value.match(condition.$regexp);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConditionEditorComponent.html":{"url":"components/ConditionEditorComponent.html","title":"component - ConditionEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConditionEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/configurator/editors/condition-editor.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-condition-editor\n            \n\n\n            \n                styles\n                \n  .condition-value .btn {\n    width: 40px;\n  }\n  .autocomplete .list-group {\n    top: 0;\n    width: 100%;\n    max-height: 200px;\n    overflow: auto;\n  }\n  \n            \n\n\n            \n                templateUrl\n                ./condition-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                conditionsService\n                            \n                            \n                                data\n                            \n                            \n                                debugText\n                            \n                            \n                                fields\n                            \n                            \n                                values\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addValue\n                            \n                            \n                                    Private\n                                addValueToList\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                removeValue\n                            \n                            \n                                selectField\n                            \n                            \n                                selectValue\n                            \n                            \n                                trackByFn\n                            \n                            \n                                updateConfig\n                            \n                            \n                                updateData\n                            \n                            \n                                updateDebugText\n                            \n                            \n                                updateFields\n                            \n                            \n                                updateValues\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                context\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    activate\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(conditionsService: ConditionsService)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        conditionsService\n                                                  \n                                                        \n                                                                        ConditionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        context\n                    \n                \n                \n                    \n                        Type :         ConfiguratorContext\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addValue\n                        \n                    \n                \n            \n            \n                \naddValue()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addValueToList\n                        \n                    \n                \n            \n            \n                \n                    \n                    addValueToList(values: string[], item: any, field: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeValue\n                        \n                    \n                \n            \n            \n                \nremoveValue(i: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectField\n                        \n                    \n                \n            \n            \n                \nselectField(field: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectValue\n                        \n                    \n                \n            \n            \n                \nselectValue(value: string, condition: ConditionValue)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    condition\n                                    \n                                                ConditionValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        trackByFn\n                        \n                    \n                \n            \n            \n                \ntrackByFn(index, item)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateConfig\n                        \n                    \n                \n            \n            \n                \nupdateConfig(notify)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    notify\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDebugText\n                        \n                    \n                \n            \n            \n                \nupdateDebugText(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFields\n                        \n                    \n                \n            \n            \n                \nupdateFields()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateValues\n                        \n                    \n                \n            \n            \n                \nupdateValues(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        conditionsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConditionsService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debugText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        values\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        activate\n                    \n                \n\n                \n                    \n                        getactivate()\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:87\n                                \n                            \n\n                \n                    \n                        setactivate(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/configurator/editors/condition-editor.component.ts:91\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnChanges } from \"@angular/core\";\nimport { Condition, ConditionsService, ConditionValue } from \"../../configuration\";\nimport { ConfiguratorContext } from \"../configurator.models\";\n\n@Component({\n  selector: 'uib-condition-editor',\n  templateUrl: './condition-editor.component.html',\n  styles: [`\n  .condition-value .btn {\n    width: 40px;\n  }\n  .autocomplete .list-group {\n    top: 0;\n    width: 100%;\n    max-height: 200px;\n    overflow: auto;\n  }\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ConditionEditorComponent implements OnChanges {\n  @Input() context: ConfiguratorContext;\n\n  // The data on which the current condition is evaluated\n  data: any;\n  // The data field on which the current condition is evaluated\n  fields: string[];\n  // The list of values tested by the current condition\n  values: string[];\n  // A debug text to understand the current condition\n  debugText: string;\n\n  constructor(\n    public conditionsService: ConditionsService\n  ){}\n\n  ngOnChanges() {\n    this.updateConfig(false);\n  }\n\n  updateConfig(notify = true) {\n    if(this.context.config.condition) {\n      this.updateData(this.context.config.condition);\n      this.updateFields();\n      this.updateValues(this.context.config.condition);\n      this.updateDebugText(this.context.config.condition);\n    }\n    if(notify) {\n      this.context.configChanged();\n    }\n  }\n\n  updateData(condition: Condition) {\n    const data = typeof this.context.context.dataIndex === 'undefined'?\n      this.context.context.data : this.context.context.data[this.context.context.dataIndex];\n    this.data = this.conditionsService.selectData(condition, this.context.context.conditionsData, data);\n  }\n\n  updateFields() {\n    this.fields = this.data? Object.keys(this.data) : [];\n  }\n\n  updateValues(condition: Condition) {\n    this.values = [];\n    if(condition.field && this.data) {\n      if(condition.data || typeof this.context.context.dataIndex === 'undefined') {\n        this.addValueToList(this.values, this.data, condition.field);\n      }\n      // Special case of the data list\n      else {\n        this.context.context.data.forEach(item => this.addValueToList(this.values, item, condition.field));\n      }\n    }\n  }\n\n  private addValueToList(values: string[], item: any, field: string) {\n    const data = item[field]?.toString();\n    if(data && !values.includes(data)) {\n      values.push(data);\n    }\n  }\n\n  updateDebugText(condition: Condition) {\n    this.debugText = this.conditionsService.writeCondition(condition);\n  }\n\n  get activate(): boolean {\n    return !!this.context.config.condition;\n  }\n\n  set activate(value: boolean) {\n    if(value) { // Create a new condition from scratch\n      this.context.config.condition = {data: '', type: 'equals', field: '', values: [{value: ''}]};\n    }\n    else {  // Erase the current condition\n      delete this.context.config.condition;\n    }\n    this.updateConfig();\n  }\n\n  addValue() {\n    this.context.config.condition?.values.push({value: ''});\n  }\n\n  removeValue(i: number) {\n    this.context.config.condition?.values.splice(i, 1);\n    this.updateConfig();\n  }\n\n  selectField(field: string) {\n    this.context.config.condition!.field = field;\n    this.updateConfig();\n  }\n  \n  selectValue(value: string, condition: ConditionValue) {\n    condition.value = value;\n    this.updateConfig();\n  }\n  \n  // This item instance might change, so we track by index\n  trackByFn(index, item) {\n    return index;\n  }\n}\n    \n\n    \n        \n\n  \n  Display this component conditionally\n\n\n\n\n  \n    Data\n    \n      data\n      {{source.key}}\n    \n  \n\n  \n    Field\n    \n    \n  \n\n  \n    Type\n    \n      Equals\n      Regular Expression\n    \n  \n\n  \n    Value(s)\n    \n    \n      \n        \n        Not\n      \n      \n        \n        \n      \n      +\n       1\">-\n    \n  \n\n   1\">\n    \n    Display if any of the conditions is true\n  \n\n\n  \n    Debug text\n    {{debugText}}\n  \n\n\n    \n\n    \n            \n  .condition-value .btn {\n    width: 40px;\n  }\n  .autocomplete .list-group {\n    top: 0;\n    width: 100%;\n    max-height: 200px;\n    overflow: auto;\n  }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Display this component conditionally      Data          data      {{source.key}}            Field                Type          Equals      Regular Expression            Value(s)                              Not                                        +       1\">-         1\">        Display if any of the conditions is true        Debug text    {{debugText}}  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConditionEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ConditionPipe.html":{"url":"pipes/ConditionPipe.html","title":"pipe - ConditionPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ConditionPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/lib/src/dynamic-views/condition.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        uibCondition\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, params?: Condition)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/condition.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        conditionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConditionsService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/condition.pipe.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\nimport { Condition, ConditionsService } from \"../configuration/conditions.service\";\n\n@Pipe({\n  name: 'uibCondition'\n})\nexport class ConditionPipe implements PipeTransform {\n\n  constructor(\n    public conditionService: ConditionsService\n  ){}\n\n  transform(value: any, params?: Condition): boolean {\n    if(!params) return true;\n    return this.conditionService.checkData(params, value);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConditionValue.html":{"url":"interfaces/ConditionValue.html","title":"interface - ConditionValue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConditionValue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configuration/conditions.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            $regexp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            not\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $regexp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $regexp:     RegExp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RegExp\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        not\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        not:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\n\n\nexport interface Condition {\n  data?: string; // conditionsData selector (or undefined for the main data object)\n  field: string; // The field to select from the data object\n  type: 'equals' | 'regexp';\n  values: ConditionValue[];\n  or?: boolean;\n}\n\nexport interface ConditionValue {\n  value: string;\n  not?: boolean;\n  $regexp?: RegExp;\n}\n\n\n@Injectable({providedIn: 'root'})\nexport class ConditionsService {\n\n  public selectData(condition: Condition, conditionsData?: Record, data?: any): any {\n    return condition.data? conditionsData?.[condition.data] : data;\n  }\n\n  public check(condition: Condition | undefined, conditionsData?: Record, data?: any): boolean {\n    if(!condition) return true;\n    const selectData = this.selectData(condition, conditionsData, data);\n    return this.checkData(condition, selectData);\n  }\n\n  public writeCondition(condition: Condition) {\n    const operator = condition.or? ') OR (' : ') AND (';\n    return '('+condition.values.map(v => this.writeValue(condition, v)).join(operator)+')';\n  }\n\n  public writeValue(condition: Condition, value: ConditionValue) {\n    if(condition.type === 'regexp') {\n      const operator = value.not? '!' : '';\n      return `${operator}${condition.data || 'data'}['${condition.field}'].match(/${value.value}/)'`;\n    }\n    else if (condition.type === 'equals') {\n      const operator = value.not? '!==' : '==='\n      return `${condition.data || 'data'}['${condition.field}'] ${operator} '${value.value}'`;\n    }\n    return '';\n  }\n  \n  public checkData(condition: Condition, data?: any) {\n    const value = data?.[condition.field]?.toString() || '';\n    return this.checkCondition(condition, value);\n  }\n\n  private checkCondition(condition: Condition, data: string): boolean {\n    if(condition.or) {\n      return !!condition.values.find(v => this.checkSingleValue(condition, v, data));\n    }\n    else {\n      return condition.values.every(v => this.checkSingleValue(condition, v, data));\n    }\n  }\n\n  private checkSingleValue(condition: Condition, value: ConditionValue, data: string) {\n    let test;\n    if(condition.type === 'regexp') {\n      test = this.checkRegexp(value, data);\n    }\n    else if(condition.type === 'equals') {\n      test = this.checkEquals(value, data);\n    }\n    return test? !value.not : !!value.not;\n  }\n\n  \n  private checkEquals(condition: ConditionValue, value: string): boolean {\n    return condition.value.toLowerCase() === value.toLowerCase();\n  }\n\n\n  private checkRegexp(condition: ConditionValue, value: string) {\n    if(!condition.$regexp) {\n      try {\n        condition.$regexp = new RegExp(condition.value, 'i');\n      }\n      catch(e) {\n        console.warn(\"Incorrect regular expression \", condition.value);\n        return true;\n      }\n    }\n    return value.match(condition.$regexp);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConditionsService.html":{"url":"injectables/ConditionsService.html","title":"injectable - ConditionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConditionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configuration/conditions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                check\n                            \n                            \n                                    Private\n                                checkCondition\n                            \n                            \n                                    Public\n                                checkData\n                            \n                            \n                                    Private\n                                checkEquals\n                            \n                            \n                                    Private\n                                checkRegexp\n                            \n                            \n                                    Private\n                                checkSingleValue\n                            \n                            \n                                    Public\n                                selectData\n                            \n                            \n                                    Public\n                                writeCondition\n                            \n                            \n                                    Public\n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        check\n                        \n                    \n                \n            \n            \n                \n                    \n                    check(condition: Condition | undefined, conditionsData?: Record, data?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/conditions.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conditionsData\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkCondition\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkCondition(condition: Condition, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/conditions.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkData\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkData(condition: Condition, data?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/conditions.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkEquals\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEquals(condition: ConditionValue, value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/conditions.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                ConditionValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkRegexp\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRegexp(condition: ConditionValue, value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/conditions.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                ConditionValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        checkSingleValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkSingleValue(condition: Condition, value: ConditionValue, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/conditions.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                ConditionValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        selectData\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectData(condition: Condition, conditionsData?: Record, data?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/conditions.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conditionsData\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        writeCondition\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeCondition(condition: Condition)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/conditions.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        writeValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(condition: Condition, value: ConditionValue)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/conditions.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                Condition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                ConditionValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\n\n\nexport interface Condition {\n  data?: string; // conditionsData selector (or undefined for the main data object)\n  field: string; // The field to select from the data object\n  type: 'equals' | 'regexp';\n  values: ConditionValue[];\n  or?: boolean;\n}\n\nexport interface ConditionValue {\n  value: string;\n  not?: boolean;\n  $regexp?: RegExp;\n}\n\n\n@Injectable({providedIn: 'root'})\nexport class ConditionsService {\n\n  public selectData(condition: Condition, conditionsData?: Record, data?: any): any {\n    return condition.data? conditionsData?.[condition.data] : data;\n  }\n\n  public check(condition: Condition | undefined, conditionsData?: Record, data?: any): boolean {\n    if(!condition) return true;\n    const selectData = this.selectData(condition, conditionsData, data);\n    return this.checkData(condition, selectData);\n  }\n\n  public writeCondition(condition: Condition) {\n    const operator = condition.or? ') OR (' : ') AND (';\n    return '('+condition.values.map(v => this.writeValue(condition, v)).join(operator)+')';\n  }\n\n  public writeValue(condition: Condition, value: ConditionValue) {\n    if(condition.type === 'regexp') {\n      const operator = value.not? '!' : '';\n      return `${operator}${condition.data || 'data'}['${condition.field}'].match(/${value.value}/)'`;\n    }\n    else if (condition.type === 'equals') {\n      const operator = value.not? '!==' : '==='\n      return `${condition.data || 'data'}['${condition.field}'] ${operator} '${value.value}'`;\n    }\n    return '';\n  }\n  \n  public checkData(condition: Condition, data?: any) {\n    const value = data?.[condition.field]?.toString() || '';\n    return this.checkCondition(condition, value);\n  }\n\n  private checkCondition(condition: Condition, data: string): boolean {\n    if(condition.or) {\n      return !!condition.values.find(v => this.checkSingleValue(condition, v, data));\n    }\n    else {\n      return condition.values.every(v => this.checkSingleValue(condition, v, data));\n    }\n  }\n\n  private checkSingleValue(condition: Condition, value: ConditionValue, data: string) {\n    let test;\n    if(condition.type === 'regexp') {\n      test = this.checkRegexp(value, data);\n    }\n    else if(condition.type === 'equals') {\n      test = this.checkEquals(value, data);\n    }\n    return test? !value.not : !!value.not;\n  }\n\n  \n  private checkEquals(condition: ConditionValue, value: string): boolean {\n    return condition.value.toLowerCase() === value.toLowerCase();\n  }\n\n\n  private checkRegexp(condition: ConditionValue, value: string) {\n    if(!condition.$regexp) {\n      try {\n        condition.$regexp = new RegExp(condition.value, 'i');\n      }\n      catch(e) {\n        console.warn(\"Incorrect regular expression \", condition.value);\n        return true;\n      }\n    }\n    return value.match(condition.$regexp);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigModal.html":{"url":"interfaces/ConfigModal.html","title":"interface - ConfigModal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigModal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configurator/palette/palette.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            close\n                                        \n                                \n                                \n                                        \n                                            config\n                                        \n                                \n                                \n                                        \n                                            configChanged\n                                        \n                                \n                                \n                                        \n                                            configurator\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        close\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        close:         Subject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Subject\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:         ComponentConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentConfig\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        configChanged\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configChanged:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        configurator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configurator:         TemplateNameDirective\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TemplateNameDirective\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { Configurable } from '../../configurable/configurable.service';\nimport { ComponentConfig, ConfigService } from '../../configuration/config.service';\nimport { ComponentCreator, DragDropService } from '../../dynamic-views/drag-drop.service';\nimport { TemplateNameDirective } from '../../utils';\nimport { PaletteOptions } from '../configurator.models';\n\ndeclare interface PaletteItem extends ComponentCreator {\n  type: string;\n  display?: string;\n  iconClass?: string;\n  title?: string;\n  removeable?: boolean;\n  createConfig: (id: string, creator?: ComponentCreator) => Observable;\n}\n\ndeclare interface ConfigModal {\n  configurator: TemplateNameDirective;\n  config: ComponentConfig;\n  configChanged: () => void;\n  title: string;\n  close: Subject;\n}\n\nexport const defaultPaletteOptions: PaletteOptions = {\n  enableSubcontainers: true,\n  enableRawHtml: true,\n  rawHtmlPlaceholder: \"Edit me\",\n  showStandardPalette: true,\n  showExistingPalette: true\n};\n\n@Component({\n  selector: 'uib-palette',\n  templateUrl: './palette.component.html',\n  styles: [\n    `\n.palette-item {\n  display: inline-block;\n  border: 1px solid grey;\n  padding: 0.25rem 0.5rem;\n  border-radius: 3px;\n  background: rgb(0,0,0,0.1);\n  cursor: pointer;\n  margin-right: 5px;\n  margin-bottom: 5px;\n}\n.palette-item .btn-close {\n  font-size: 0.7em;\n}\n.palette-item .grip {\n  position: relative;\n  top: -2px;\n  color: #7c7c7c;\n  margin-right: 3px;\n}\n  `\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PaletteComponent implements OnInit, OnChanges {\n  @Input() context: Configurable;\n  @Input() configurators: Record = {}; \n  @Input() options = defaultPaletteOptions;\n\n  standardPalette: PaletteItem[];\n  existingPalette: PaletteItem[];\n\n  modal?: ConfigModal;\n\n  constructor(\n    public dragDropService: DragDropService,\n    public configService: ConfigService,\n    public cdRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    // The palette of existing components is constructed from the complete configuration\n    this.configService.watchAllConfig()\n      .subscribe(configs => {\n        this.generateExistingPalette(configs)\n        this.cdRef.markForCheck();\n      });\n  }\n\n  ngOnChanges() {\n    // Initialize options with default, then custom\n    this.options = Object.assign({}, defaultPaletteOptions, this.options);\n    this.generateAutoPalette();\n    // The existing palette must be update when the standard palette changes\n    this.generateExistingPalette(this.configService.getAllConfig());\n  }\n\n  generateAutoPalette() {\n    this.standardPalette = [];\n    if(!this.options.showStandardPalette) {\n      return;\n    }\n    if (this.options.enableSubcontainers) {\n      this.standardPalette.push({\n        type: '_container',\n        display: $localize `Container`,\n        title: $localize `A component to arrange various sub-components`,\n        createConfig: (id: string) => of({ type: '_container', id, items: [] }),\n      });\n    }\n    if (this.options.enableRawHtml) {\n      this.standardPalette.push({\n        type: '_raw-html',\n        display: $localize `Raw HTML`,\n        title: $localize `A component to write HTML freely`,\n        createConfig: (id: string) => of({ type: '_raw-html', id, rawHtml: this.options.rawHtmlPlaceholder})\n      })\n    }\n    if (this.context.templates) {\n      Object.keys(this.context.templates).forEach((type) => {\n        let template = this.context.templates![type];\n        this.standardPalette.push({\n          type,\n          display: template.display || type,\n          iconClass: template.iconClass,\n          title: template.title,\n          createConfig: (id: string) => this.openModal(id, type, this.configurators[type]),\n        });\n      });\n    }\n  }\n\n  generateExistingPalette(configs: ComponentConfig[]) {    \n    if(!this.options.showExistingPalette) {\n      this.existingPalette = [];\n      return;\n    }\n    this.existingPalette = configs.filter(c =>\n      // Add any non-container config whose type is compatible with the standard palette\n      this.standardPalette\n        .find(p => p.type !== '_container' && p.type === c.type))\n        .map(c => ({\n          type: c.type,\n          display: c.id,\n          title: $localize `Type: ${this.context.templates?.[c.type]?.display || c.type}`,\n          removeable: !this.configService.isUsed(c.id),\n          createConfig: _ => of(c) // The config already exists\n        })\n    )\n  }\n\n  onDndStart(item: PaletteItem) {\n    this.dragDropService.draggedCreator = item;\n  }\n\n  onDndEnd() {\n    this.dragDropService.draggedCreator = undefined;\n  }\n\n  openModal(id: string, type: string, configurator?: TemplateNameDirective): Observable {\n    const config = {type, id};\n    if(configurator) {\n      this.modal = {\n        configurator,\n        config,\n        configChanged: () => {}, // do nothing when the configurator changes the config (before user presses 'OK')\n        title: $localize `Create new ${type} component`,\n        close: new Subject()\n      }\n      return this.modal.close;\n    }\n    return of(config);\n  }\n\n  onModalClose(success: boolean) {\n    if(this.modal?.close) {\n      this.modal.close.next(success? this.modal.config : undefined);\n      this.modal.close.complete();\n      this.modal = undefined;\n    }\n  }\n\n  removeItem(item: PaletteItem) {\n    console.log(\"remove\", item);\n    this.configService.removeConfig(item.display!); // The display is the component id\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configuration/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                historyState\n                            \n                            \n                                store\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _getConfig\n                            \n                            \n                                    Public\n                                canRedo$\n                            \n                            \n                                    Public\n                                canUndo$\n                            \n                            \n                                    Public\n                                findParent\n                            \n                            \n                                    Public\n                                generateId\n                            \n                            \n                                    Public\n                                getAllConfig\n                            \n                            \n                                    Public\n                                getConfig\n                            \n                            \n                                    Public\n                                getContainer\n                            \n                            \n                                init\n                            \n                            \n                                    Public\n                                isContainer\n                            \n                            \n                                    Public\n                                isContainerConfig\n                            \n                            \n                                    Public\n                                isUsed\n                            \n                            \n                                    Public\n                                redo\n                            \n                            \n                                    Public\n                                removeConfig\n                            \n                            \n                                set\n                            \n                            \n                                    Public\n                                undo\n                            \n                            \n                                    Public\n                                updateConfig\n                            \n                            \n                                    Public\n                                watchAllConfig\n                            \n                            \n                                    Public\n                                watchConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _getConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    _getConfig(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ComponentConfig | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        canRedo$\n                        \n                    \n                \n            \n            \n                \n                    \n                    canRedo$()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        canUndo$\n                        \n                    \n                \n            \n            \n                \n                    \n                    canUndo$()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findParent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findParent(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ContainerConfig | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        generateId\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateId(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAllConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllConfig()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ComponentConfig[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    getConfig(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ComponentConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getContainer\n                        \n                    \n                \n            \n            \n                \n                    \n                    getContainer(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ContainerConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n            \n                \ninit(initialValue: ComponentConfig[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    initialValue\n                                    \n                                                ComponentConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isContainer\n                        \n                    \n                \n            \n            \n                \n                    \n                    isContainer(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isContainerConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    isContainerConfig(conf: ComponentConfig | undefined)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    conf\n                                    \n                                                ComponentConfig | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ContainerConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isUsed\n                        \n                    \n                \n            \n            \n                \n                    \n                    isUsed(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:106\n                \n            \n\n\n            \n                \n                    Test whether a given component id is used within the hierarchy of a container\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        redo\n                        \n                    \n                \n            \n            \n                \n                    \n                    redo()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeConfig(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(config: ComponentConfig[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                ComponentConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        undo\n                        \n                    \n                \n            \n            \n                \n                    \n                    undo()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateConfig(value: ComponentConfig | ComponentConfig[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ComponentConfig | ComponentConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        watchAllConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    watchAllConfig()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        watchConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    watchConfig(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configuration/config.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        historyState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configuration/config.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Store\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configuration/config.service.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createState, Store } from '@ngneat/elf';\nimport {\n  withEntities,\n  getEntity,\n  addEntities,\n  updateEntities,\n  selectEntity,\n  selectAll,\n  getEntities,\n  deleteEntities,\n  deleteAllEntities,\n} from '@ngneat/elf-entities';\nimport { stateHistory } from '@ngneat/elf-state-history';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Condition } from './conditions.service';\n\nexport interface ComponentConfig {\n  readonly id: string;\n  type: string;\n  classes?: string;\n  [key: string]: any;\n  condition?: Condition;\n}\n\nexport interface ContainerConfig extends ComponentConfig {\n  type: '_container';\n  items: string[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ConfigService {\n  store: Store;\n  historyState: any;\n  \n  init(initialValue: ComponentConfig[]) {\n    const { state, config } = createState(\n      withEntities({ initialValue })\n    );\n    this.store = new Store({ name: 'config', state, config });\n    this.historyState = stateHistory(this.store, { maxAge: Infinity });\n    this.store.subscribe(console.log);\n  }\n\n  set(config: ComponentConfig[]) {\n    this.store.update(\n      deleteAllEntities(),\n      addEntities(config)\n    );\n  }\n\n  public watchAllConfig(): Observable {\n    return this.store.pipe(selectAll());\n  }\n\n  public getAllConfig(): ComponentConfig[] {\n    return this.store.query(getEntities());\n  }\n\n  public watchConfig(id: string): Observable {\n    //console.log('watch:', id);\n    this.getConfig(id); // Ensure a value exists (if 'id' has no config)\n    return this.store.pipe(\n      selectEntity(id),\n      filter(config => config !== undefined),\n      //tap((config) => console.log('change:', config)),\n      map((config) => JSON.parse(JSON.stringify(config)))\n    );\n  }\n\n  private _getConfig(id: string): ComponentConfig | undefined {\n    return this.store.query(getEntity(id));\n  }\n\n  public getConfig(id: string): ComponentConfig {\n    let config = this._getConfig(id);\n    if (!config) {\n      config = { id, type: id };\n      this.historyState.pause();\n      this.store.update(addEntities(config));\n      this.historyState.resume();\n    }\n    return JSON.parse(JSON.stringify(config)); // Deep copy\n  }\n\n  public getContainer(id: string): ContainerConfig {\n    const config = this.getConfig(id);\n    if (!this.isContainerConfig(config)) {\n      throw `${id} is not a container`;\n    }\n    return config;\n  }\n\n  public isContainer(id: string): boolean {\n    return this.isContainerConfig(this._getConfig(id));\n  }\n\n  public isContainerConfig(conf: ComponentConfig|undefined): conf is ContainerConfig {\n    return conf?.type === '_container';\n  }\n\n  /**\n   * Test whether a given component id is used within the hierarchy of a container\n   */\n  public isUsed(id: string) {\n    return !!this.findParent(id);\n  }\n\n  public findParent(id: string): ContainerConfig | undefined {\n    return this.getAllConfig()\n      .find(item => this.isContainerConfig(item) && item.items.includes(id)) as ContainerConfig | undefined;\n  }\n\n  public updateConfig(value: ComponentConfig | ComponentConfig[]) {\n    //console.log('update config', this._getConfig(value.id));\n    //console.log('new config', value);\n    if(!Array.isArray(value)) value = [value];\n    this.store.update(\n      ...value.map(v => {\n        if(!this._getConfig(v.id)){\n          return addEntities(v)\n        }\n        return updateEntities([v.id], () => v)}\n      )\n    );\n  }\n\n  public removeConfig(id: string) {\n    this.store.update(deleteEntities(id));\n  }\n\n  public generateId(type: string) {\n    let idx = 1;\n    let root = type.startsWith(\"_\")? type.slice(1) : type;\n    const tokens = type.split(\"-\");\n    if(tokens[tokens.length-1].match(/\\d+/)) {\n      idx = +tokens[tokens.length-1];\n      root = tokens.slice(0, tokens.length-1).join('-');\n    }\n    let id = root;\n    do {\n      id = `${root}-${idx++}`;\n    } while (this._getConfig(id) || id === type);\n    return id;\n  }\n\n  public canUndo$(){\n    return this.historyState.hasPast$;\n  }\n\n  public canRedo$(){\n    return this.historyState.hasFuture$;\n  }\n\n  public undo() {\n    this.historyState.undo();\n  }\n\n  public redo() {\n    this.historyState.redo();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Configurable.html":{"url":"interfaces/Configurable.html","title":"interface - Configurable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Configurable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configurable/configurable.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            conditionsData\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dataIndex\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            parentId\n                                        \n                                \n                                \n                                        \n                                            removeEdited\n                                        \n                                \n                                \n                                        \n                                            removeSelected\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            templates\n                                        \n                                \n                                \n                                        \n                                            zone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        conditionsData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        conditionsData:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dataIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dataIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeEdited\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeEdited:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeSelected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeSelected:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        templates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        templates:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { TemplateNameDirective } from '../utils';\nimport {ConfigurableDirective} from './configurable.directive';\n\nexport interface Configurable {\n  id: string;\n  parentId: string;\n  zone: string;\n  templates?: Record;\n  data?: any;\n  dataIndex?: number;\n  conditionsData?: Record;\n  removeEdited: () => void;\n  removeSelected: () => void;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ConfigurableService {\n  private _hoveredId?: string;\n\n  // currently edited element'id\n  private edited$ = new Subject();\n  \n  // behavior subject as we need to retrieve the previous value to toggle it\n  editorEnabled$ = new BehaviorSubject(false);\n  \n  // previous edited element\n  previousConfigurableElement?: Configurable;\n  \n  // configurable service must subscribe to store'changes events (config service)\n  configurableDirectiveMap: Map = new Map();\n\n  set hoveredId(id: string | undefined) {\n    this._hoveredId = id;\n  }\n  get hoveredId(): string | undefined {\n    return this._hoveredId;\n  }\n\n  mouseoverConfigurable(configurable: Configurable) {\n    if (this._hoveredId === undefined) {\n      this._hoveredId = configurable.id;\n    }\n  }\n\n  mouseenterConfigurable(configurable: Configurable) {\n    if (configurable.id !== this.hoveredId) {\n      this._hoveredId = configurable.id;\n    }\n  }\n\n  mouseleaveConfigurable(configurable: Configurable) {\n    this._hoveredId = undefined;\n  }\n\n  clickConfigurable(configurable: Configurable) {\n    if (!this.previousConfigurableElement) {\n      // previous is undefined\n      this.previousConfigurableElement = configurable;\n    }\n    else if (this.previousConfigurableElement.id !== configurable.id\n      || (this.previousConfigurableElement.id === configurable.id && this.previousConfigurableElement.zone !== configurable.zone)) {\n      // previous exist and it's id don't match with the new configurable element\n            \n      this.previousConfigurableElement.removeEdited();\n      this.previousConfigurableElement.removeSelected();\n      this.previousConfigurableElement = configurable;\n    }\n    else if (this.previousConfigurableElement.id === configurable.id && this.previousConfigurableElement.zone === configurable.zone) {\n      // same id and same zone\n      this.previousConfigurableElement = undefined;\n    }\n    \n    this.edited$.next(configurable);\n  }\n\n  stopEditing() {\n    this.previousConfigurableElement?.removeEdited();\n    this.previousConfigurableElement?.removeSelected();\n    this.previousConfigurableElement = undefined;\n    this.edited$.next(undefined);\n  }\n\n  watchEdited(): Observable {\n    return this.edited$.pipe(filter(this.isConfigurable));\n  }\n\n  isConfigurable = (configurable: Configurable | undefined): configurable is Configurable => {\n    return !!configurable;\n  }\n  \n  toggleEditor() {\n    const enabled = !this.editorEnabled$.value;\n    this.editorEnabled$.next(enabled);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ConfigurableDirective.html":{"url":"directives/ConfigurableDirective.html","title":"directive - ConfigurableDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ConfigurableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configurable/configurable.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Configurable\n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uib-configurable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nativeElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addHighlight\n                            \n                            \n                                click\n                            \n                            \n                                highlight\n                            \n                            \n                                mouseleave\n                            \n                            \n                                mousenter\n                            \n                            \n                                mouseover\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeEdited\n                            \n                            \n                                removeHighlight\n                            \n                            \n                                removeSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionsData\n                            \n                            \n                                data\n                            \n                            \n                                dataIndex\n                            \n                            \n                                id\n                            \n                            \n                                parentId\n                            \n                            \n                                templates\n                            \n                            \n                                uib-disable-if\n                            \n                            \n                                zone\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                mouseenter\n                            \n                            \n                                mouseleave\n                            \n                            \n                                mouseover\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    _class\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configurableService: ConfigurableService, el: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/configurable/configurable.directive.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configurableService\n                                                  \n                                                        \n                                                                        ConfigurableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        conditionsData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurable/configurable.directive.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurable/configurable.directive.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurable/configurable.directive.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurable/configurable.directive.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurable/configurable.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        templates\n                    \n                \n                \n                    \n                        Type :         Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurable/configurable.directive.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uib-disable-if\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurable/configurable.directive.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zone\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurable/configurable.directive.ts:19\n                            \n                        \n            \n        \n\n\n            \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurable/configurable.directive.ts:42\n                        \n                    \n\n\n        \n    \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:66\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:54\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseleave\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:60\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseover\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:48\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addHighlight\n                        \n                    \n                \n            \n            \n                \naddHighlight()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        click\n                        \n                    \n                \n            \n            \n                \nclick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        highlight\n                        \n                    \n                \n            \n            \n                \nhighlight()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseleave\n                        \n                    \n                \n            \n            \n                \nmouseleave(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseleave', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mousenter\n                        \n                    \n                \n            \n            \n                \nmousenter(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseenter', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseover\n                        \n                    \n                \n            \n            \n                \nmouseover(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseover', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MouseEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeEdited\n                        \n                    \n                \n            \n            \n                \nremoveEdited()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeHighlight\n                        \n                    \n                \n            \n            \n                \nremoveHighlight()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSelected\n                        \n                    \n                \n            \n            \n                \nremoveSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.directive.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nativeElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurable/configurable.directive.ts:27\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        _class\n                    \n                \n\n                \n                    \n                        get_class()\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/configurable/configurable.directive.ts:42\n                                \n                            \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  Renderer2\n} from '@angular/core';\nimport { TemplateNameDirective } from '../utils';\n\nimport { Configurable, ConfigurableService } from './configurable.service';\n\n@Directive({\n  selector: '[uib-configurable]',\n})\nexport class ConfigurableDirective implements Configurable, OnInit {\n  @Input() id: string;\n  @Input() zone: string;\n  @Input() parentId: string;\n  @Input() templates?: Record;\n  @Input() data?: any;\n  @Input() dataIndex?: number;\n  @Input() conditionsData?: Record;\n  @Input(\"uib-disable-if\") disableIf?: any;\n  \n  nativeElement: HTMLElement;\n\n  constructor(\n    private configurableService: ConfigurableService,\n    private el: ElementRef,\n    private renderer: Renderer2\n  ) {\n    this.nativeElement = this.el.nativeElement;\n  }\n\n  ngOnInit(): void {\n    this.configurableService.configurableDirectiveMap.set(this.id, this);\n  }\n\n  @HostBinding('class')\n  get _class() {\n    if(this.disableIf) return '';\n    return `uib-configurable ${this.highlight() ? 'highlight' : ''}`;\n  }\n\n  @HostListener('mouseover', ['$event'])\n  mouseover(event: MouseEvent) {\n    if(this.disableIf) return;\n    this.configurableService.mouseoverConfigurable(this);\n  }\n\n  @HostListener('mouseenter', ['$event'])\n  mousenter(event: MouseEvent) {\n    if(this.disableIf) return;\n    this.configurableService.mouseenterConfigurable(this);\n  }\n\n  @HostListener('mouseleave', ['$event'])\n  mouseleave(event: MouseEvent) {\n    if(this.disableIf) return;\n    this.configurableService.mouseleaveConfigurable(this);\n  }\n\n  @HostListener('click', ['$event'])\n  click(event: MouseEvent) {\n    if(this.disableIf) return;\n    event.stopPropagation();\n    \n    // before to set 'edited' class to current element\n    // send it to configurableService to update the previous element and call it's removeEdited() method\n    this.configurableService.clickConfigurable(this);\n    \n    // now, previous 'edited' class should be correct,\n    // we can safely set the 'edited' class to the current element\n    if (this.el.nativeElement.classList.contains('edited')) {\n      this.removeEdited();\n      this.removeSelected();\n    } else {\n      if (this.zone) {\n        const el = this.configurableService.configurableDirectiveMap.get(this.zone);\n        el?.nativeElement.setAttribute(\"selected\",\"\")\n      }\n  \n      this.renderer.addClass(this.el.nativeElement, 'edited');\n    }\n  }\n  \n  removeEdited() {\n    this.renderer.removeClass(this.el.nativeElement, 'edited');\n  }\n  \n  removeSelected() {\n    if (this.zone) {\n      const el = this.configurableService.configurableDirectiveMap.get(this.zone);\n      el?.nativeElement.removeAttribute(\"selected\");\n    }\n  }\n  \n  removeHighlight() {\n    this.renderer.removeClass(this.el.nativeElement, 'highlight');\n  }\n  \n  addHighlight() {\n    this.renderer.addClass(this.el.nativeElement, 'highlight');\n  }\n\n  highlight() {\n    return this.id === this.configurableService.hoveredId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigurableModule.html":{"url":"modules/ConfigurableModule.html","title":"module - ConfigurableModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigurableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConfigurableModule\n\n\n\ncluster_ConfigurableModule_exports\n\n\n\ncluster_ConfigurableModule_declarations\n\n\n\n\nConfigurableDirective\n\nConfigurableDirective\n\n\n\nConfigurableModule\n\nConfigurableModule\n\nConfigurableModule -->\n\nConfigurableDirective->ConfigurableModule\n\n\n\n\n\nConfigurableDirective \n\nConfigurableDirective \n\nConfigurableDirective  -->\n\nConfigurableModule->ConfigurableDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/lib/src/configurable/configurable.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConfigurableDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigurableDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\n\nimport { ConfigurableDirective } from \"./configurable.directive\";\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        ConfigurableDirective\n    ],\n    exports: [\n        ConfigurableDirective\n    ]\n})\nexport class ConfigurableModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigurableService.html":{"url":"injectables/ConfigurableService.html","title":"injectable - ConfigurableService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigurableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configurable/configurable.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _hoveredId\n                            \n                            \n                                configurableDirectiveMap\n                            \n                            \n                                    Private\n                                edited$\n                            \n                            \n                                editorEnabled$\n                            \n                            \n                                isConfigurable\n                            \n                            \n                                    Optional\n                                previousConfigurableElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickConfigurable\n                            \n                            \n                                mouseenterConfigurable\n                            \n                            \n                                mouseleaveConfigurable\n                            \n                            \n                                mouseoverConfigurable\n                            \n                            \n                                stopEditing\n                            \n                            \n                                toggleEditor\n                            \n                            \n                                watchEdited\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hoveredId\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clickConfigurable\n                        \n                    \n                \n            \n            \n                \nclickConfigurable(configurable: Configurable)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configurable\n                                    \n                                                Configurable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseenterConfigurable\n                        \n                    \n                \n            \n            \n                \nmouseenterConfigurable(configurable: Configurable)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configurable\n                                    \n                                                Configurable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseleaveConfigurable\n                        \n                    \n                \n            \n            \n                \nmouseleaveConfigurable(configurable: Configurable)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configurable\n                                    \n                                                Configurable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mouseoverConfigurable\n                        \n                    \n                \n            \n            \n                \nmouseoverConfigurable(configurable: Configurable)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configurable\n                                    \n                                                Configurable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopEditing\n                        \n                    \n                \n            \n            \n                \nstopEditing()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEditor\n                        \n                    \n                \n            \n            \n                \ntoggleEditor()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        watchEdited\n                        \n                    \n                \n            \n            \n                \nwatchEdited()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurable/configurable.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _hoveredId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurable/configurable.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configurableDirectiveMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurable/configurable.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        edited$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurable/configurable.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editorEnabled$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurable/configurable.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isConfigurable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurable/configurable.service.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        previousConfigurableElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Configurable\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurable/configurable.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        hoveredId\n                    \n                \n\n                \n                    \n                        gethoveredId()\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/configurable/configurable.service.ts:38\n                                \n                            \n\n                \n                    \n                        sethoveredId(id: string | undefined)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/configurable/configurable.service.ts:35\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            id\n                                                    \n                                                            \n                                                                        string | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { TemplateNameDirective } from '../utils';\nimport {ConfigurableDirective} from './configurable.directive';\n\nexport interface Configurable {\n  id: string;\n  parentId: string;\n  zone: string;\n  templates?: Record;\n  data?: any;\n  dataIndex?: number;\n  conditionsData?: Record;\n  removeEdited: () => void;\n  removeSelected: () => void;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ConfigurableService {\n  private _hoveredId?: string;\n\n  // currently edited element'id\n  private edited$ = new Subject();\n  \n  // behavior subject as we need to retrieve the previous value to toggle it\n  editorEnabled$ = new BehaviorSubject(false);\n  \n  // previous edited element\n  previousConfigurableElement?: Configurable;\n  \n  // configurable service must subscribe to store'changes events (config service)\n  configurableDirectiveMap: Map = new Map();\n\n  set hoveredId(id: string | undefined) {\n    this._hoveredId = id;\n  }\n  get hoveredId(): string | undefined {\n    return this._hoveredId;\n  }\n\n  mouseoverConfigurable(configurable: Configurable) {\n    if (this._hoveredId === undefined) {\n      this._hoveredId = configurable.id;\n    }\n  }\n\n  mouseenterConfigurable(configurable: Configurable) {\n    if (configurable.id !== this.hoveredId) {\n      this._hoveredId = configurable.id;\n    }\n  }\n\n  mouseleaveConfigurable(configurable: Configurable) {\n    this._hoveredId = undefined;\n  }\n\n  clickConfigurable(configurable: Configurable) {\n    if (!this.previousConfigurableElement) {\n      // previous is undefined\n      this.previousConfigurableElement = configurable;\n    }\n    else if (this.previousConfigurableElement.id !== configurable.id\n      || (this.previousConfigurableElement.id === configurable.id && this.previousConfigurableElement.zone !== configurable.zone)) {\n      // previous exist and it's id don't match with the new configurable element\n            \n      this.previousConfigurableElement.removeEdited();\n      this.previousConfigurableElement.removeSelected();\n      this.previousConfigurableElement = configurable;\n    }\n    else if (this.previousConfigurableElement.id === configurable.id && this.previousConfigurableElement.zone === configurable.zone) {\n      // same id and same zone\n      this.previousConfigurableElement = undefined;\n    }\n    \n    this.edited$.next(configurable);\n  }\n\n  stopEditing() {\n    this.previousConfigurableElement?.removeEdited();\n    this.previousConfigurableElement?.removeSelected();\n    this.previousConfigurableElement = undefined;\n    this.edited$.next(undefined);\n  }\n\n  watchEdited(): Observable {\n    return this.edited$.pipe(filter(this.isConfigurable));\n  }\n\n  isConfigurable = (configurable: Configurable | undefined): configurable is Configurable => {\n    return !!configurable;\n  }\n  \n  toggleEditor() {\n    const enabled = !this.editorEnabled$.value;\n    this.editorEnabled$.next(enabled);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfiguratorComponent.html":{"url":"components/ConfiguratorComponent.html","title":"component - ConfiguratorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfiguratorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/configurator/configurator.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-configurator\n            \n\n\n            \n                styles\n                \n.offcanvas-body {\n  padding-bottom: 90px; // avoid toolbar hiding bottom of configurator\n}\n  \n            \n\n\n            \n                templateUrl\n                ./configurator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _showTree\n                            \n                            \n                                children\n                            \n                            \n                                    Public\n                                configService\n                            \n                            \n                                    Public\n                                configurableService\n                            \n                            \n                                configuration\n                            \n                            \n                                configurators\n                            \n                            \n                                edited$\n                            \n                            \n                                offcanvas\n                            \n                            \n                                offcanvasBodyEl\n                            \n                            \n                                offcanvasEl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                duplicate\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                remove\n                            \n                            \n                                resolveOptions\n                            \n                            \n                                showTree\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                            \n                                zoneOptions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef, configurableService: ConfigurableService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/configurator/configurator.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configurableService\n                                                  \n                                                        \n                                                                        ConfigurableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         ConfiguratorOptions\n\n                    \n                \n                \n                    \n                        Default value : defaultConfiguratorOptions\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/configurator.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoneOptions\n                    \n                \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/configurator.component.ts:53\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        duplicate\n                        \n                    \n                \n            \n            \n                \nduplicate(context: Configurable)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/configurator.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                Configurable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/configurator.component.ts:114\n                \n            \n\n\n            \n                \n                    Extract list of configuration editors\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/configurator.component.ts:101\n                \n            \n\n\n            \n                \n                    Create Bootstrap OffCanvas component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(context: Configurable)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/configurator.component.ts:137\n                \n            \n\n\n            \n                \n                    It removes the item from the parent container.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                Configurable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveOptions\n                        \n                    \n                \n            \n            \n                \nresolveOptions(zone: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/configurator.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    zone\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showTree\n                        \n                    \n                \n            \n            \n                \nshowTree(showTree)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/configurator.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    showTree\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _showTree\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(TemplateNameDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configurableService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigurableService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configurators\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        edited$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        offcanvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Offcanvas\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        offcanvasBodyEl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('offcanvasBody')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        offcanvasEl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('offcanvas')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/configurator.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Input,\n  QueryList,\n  ViewChild,\n} from '@angular/core';\nimport { Offcanvas } from 'bootstrap';\nimport { switchMap, map, tap } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Configurable, ConfigurableService } from '../configurable/configurable.service';\nimport { ComponentConfig, ConfigService, ContainerConfig } from '../configuration/config.service';\nimport { Mutable } from '../utils/types.helpers';\nimport { TemplateNameDirective } from '../utils/template-name.directive';\nimport { defaultPaletteOptions } from './palette/palette.component';\nimport { ConfiguratorContext, ConfiguratorOptions } from './configurator.models';\n\nexport const defaultConfiguratorOptions: ConfiguratorOptions = {\n  paletteOptions: defaultPaletteOptions,\n  showFlexEditor: true,\n  showHtmlEditor: true,\n  showCssClasses: true,\n  showConditionalDisplay: true,\n  showRemove: true,\n  showDuplicate: true\n}\n\n@Component({\n  selector: 'uib-configurator',\n  templateUrl: './configurator.component.html',\n  styles:[`\n.offcanvas-body {\n  padding-bottom: 90px; // avoid toolbar hiding bottom of configurator\n}\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorComponent {\n  // Capture configurator templates\n  @ContentChildren(TemplateNameDirective)\n  children: QueryList;\n  configurators: Record = {};\n\n  @ViewChild('offcanvas') offcanvasEl: ElementRef;\n  offcanvas: Offcanvas;\n\n  @ViewChild('offcanvasBody') offcanvasBodyEl: ElementRef;\n\n  @Input() options = defaultConfiguratorOptions;\n  @Input() zoneOptions: Record = {};\n\n  edited$: Observable;\n  \n  configuration: ComponentConfig[] = [];\n\n  _showTree: boolean;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    public configurableService: ConfigurableService,\n    public configService: ConfigService\n  ) {\n    \n    this.edited$ = configurableService.watchEdited().pipe(\n      tap(() => this.offcanvas.show()),\n      tap(() => this.showTree(false)),\n      switchMap((context) => \n        configService.watchConfig(context!.id).pipe(\n          map(config => ({\n            context,\n            config,\n            options: this.resolveOptions(context.zone),\n            configurators: this.configurators,\n            configChanged: () => this.configService.updateConfig(config)\n          }))\n        )\n      )\n    );\n    \n    // subscribe to configuration events\n    this.configService.watchAllConfig().subscribe(config => {\n      this.configuration = config;\n      this.cdr.markForCheck();\n    });\n    \n    // when edition is disabled, close side panel\n    this.configurableService.editorEnabled$.subscribe(value => {\n      if (value === false && this.offcanvas) {\n        this.offcanvas.hide();\n      }\n    })\n    \n  }\n\n  /**\n   * Create Bootstrap OffCanvas component\n   */\n  ngAfterViewInit() {\n    this.offcanvas = Offcanvas.getOrCreateInstance(this.offcanvasEl.nativeElement, {\n      backdrop: false,\n      scroll: true\n    });\n    this.offcanvasEl.nativeElement.addEventListener('hide.bs.offcanvas', _ => {\n      this.configurableService.stopEditing();\n    });\n  }\n\n  /**\n   * Extract list of configuration editors\n   */\n  ngAfterContentInit() {\n    this.children.forEach(\n      tpl => (this.configurators[tpl.templateName] = tpl)\n    );\n  }\n  \n  showTree(showTree = true) {\n    this._showTree = showTree;\n    this.offcanvasBodyEl.nativeElement.scroll(0, 0);\n  }\n\n  resolveOptions(zone: string) {\n    // First set defaults, then the configurator options, then zone-specific options\n    const options = Object.assign({}, defaultConfiguratorOptions, this.options, this.zoneOptions[zone] || {});\n    // Same thing for the nested palette options\n    options.paletteOptions = Object.assign({}, defaultPaletteOptions, this.options.paletteOptions, this.zoneOptions[zone]?.paletteOptions || {});\n    return options;\n  }\n\n  /**\n   * It removes the item from the parent container.\n   * @param {Event} event - Event\n   */\n  remove(context: Configurable) {    \n    // only uib-zone cannot self remove\n    if (context.parentId) {\n      const container = this.configService.getContainer(context.parentId);\n      const index = container.items.findIndex(item => item === context.id);\n      if (index !== -1) {\n        container.items.splice(index, 1);\n        this.configService.updateConfig([container]);\n        this.offcanvas.toggle();\n      }\n    }\n  }\n\n  duplicate(context: Configurable) {\n    const config: Mutable = this.configService.getConfig(context.id);\n    config.id = this.configService.generateId(config.id); // Generate a new config id\n    if(context.parentId) {\n      const container = this.configService.getContainer(context.parentId);\n      const index = container.items.findIndex(item => item === context.id);\n      if (index !== -1) {\n        container.items.splice(index+1, 0, config.id);\n        this.configService.updateConfig([config, container]);\n      }\n    }\n    // Special case of a zone\n    else if(context.zone === context.id) {\n      // Create another copy\n      const config2: Mutable = this.configService.getConfig(context.id);\n      config2.id = this.configService.generateId(config.id);\n      \n      const container: ContainerConfig = {\n        id: context.id,\n        type: '_container',\n        items: [config.id, config2.id],\n        classes: \"flex-column\",\n      };\n\n      this.configService.updateConfig([config, config2, container]);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{obs.edited.config.id}}\n      \n      (Type: {{obs.edited.config.type}})\n    \n    Configuration Tree\n\n    \n      \n    \n    \n  \n\n  \n    \n    \n      \n    \n      \n      \n  \n      \n        \n          Component palette (drag & drop)\n          \n          \n        \n    \n        \n          Layout\n          \n        \n            \n      \n      \n      \n  \n      \n        \n      \n  \n      \n        Conditional display\n        \n      \n      \n      \n        \n          Remove\n        \n        \n          Duplicate\n        \n      \n    \n    \n    \n      \n  \n\n\n    \n\n    \n            \n.offcanvas-body {\n  padding-bottom: 90px; // avoid toolbar hiding bottom of configurator\n}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{obs.edited.config.id}}            (Type: {{obs.edited.config.type}})        Configuration Tree                                                                              Component palette (drag & drop)                                                  Layout                                                                                      Conditional display                                            Remove                          Duplicate                                  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfiguratorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfiguratorContext.html":{"url":"interfaces/ConfiguratorContext.html","title":"interface - ConfiguratorContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfiguratorContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configurator/configurator.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            config\n                                        \n                                \n                                \n                                        \n                                            configChanged\n                                        \n                                \n                                \n                                        \n                                            configurators\n                                        \n                                \n                                \n                                        \n                                            context\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        config:         ComponentConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Object storing the configuration of the component\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        configChanged\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configChanged:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Callback that the configurator should call to update the configuration\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        configurators\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configurators:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Register of all the components configurators\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        context:         Configurable\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Configurable\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Context of the zone of the edited component\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         ConfiguratorOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConfiguratorOptions\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Options of the configurators (may change depending on zone)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Configurable } from \"../configurable\";\nimport { ComponentConfig } from \"../configuration\";\nimport { TemplateNameDirective } from \"../utils\";\n\nexport interface ConfiguratorOptions {\n    paletteOptions?: PaletteOptions;\n    showFlexEditor?: boolean;\n    showHtmlEditor?: boolean;\n    showCssClasses?: boolean;\n    showConditionalDisplay?: boolean;\n    showRemove?: boolean;\n    showDuplicate?: boolean;\n}\n  \nexport interface PaletteOptions {\n    enableSubcontainers?: boolean;\n    enableRawHtml?: boolean;\n    rawHtmlPlaceholder?: string;\n    showStandardPalette?: boolean;\n    showExistingPalette?: boolean;\n}\n\nexport interface ConfiguratorContext {\n    /** Object storing the configuration of the component */\n    config: ComponentConfig;\n    /** Options of the configurators (may change depending on zone) */\n    options: ConfiguratorOptions;\n    /** Register of all the components configurators  */\n    configurators: Record;\n    /** Context of the zone of the edited component */\n    context: Configurable;\n    /** Callback that the configurator should call to update the configuration */\n    configChanged: () => void;\n};\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfiguratorModule.html":{"url":"modules/ConfiguratorModule.html","title":"module - ConfiguratorModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfiguratorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConfiguratorModule\n\n\n\ncluster_ConfiguratorModule_exports\n\n\n\ncluster_ConfiguratorModule_declarations\n\n\n\ncluster_ConfiguratorModule_imports\n\n\n\n\nClassEditorComponent\n\nClassEditorComponent\n\n\n\nConfiguratorModule\n\nConfiguratorModule\n\nConfiguratorModule -->\n\nClassEditorComponent->ConfiguratorModule\n\n\n\n\n\nConditionEditorComponent\n\nConditionEditorComponent\n\nConfiguratorModule -->\n\nConditionEditorComponent->ConfiguratorModule\n\n\n\n\n\nConfiguratorComponent\n\nConfiguratorComponent\n\nConfiguratorModule -->\n\nConfiguratorComponent->ConfiguratorModule\n\n\n\n\n\nFlexEditorComponent\n\nFlexEditorComponent\n\nConfiguratorModule -->\n\nFlexEditorComponent->ConfiguratorModule\n\n\n\n\n\nHtmlEditorComponent\n\nHtmlEditorComponent\n\nConfiguratorModule -->\n\nHtmlEditorComponent->ConfiguratorModule\n\n\n\n\n\nPaletteComponent\n\nPaletteComponent\n\nConfiguratorModule -->\n\nPaletteComponent->ConfiguratorModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nConfiguratorModule -->\n\nToolbarComponent->ConfiguratorModule\n\n\n\n\n\nTreeComponent\n\nTreeComponent\n\nConfiguratorModule -->\n\nTreeComponent->ConfiguratorModule\n\n\n\n\n\nConfiguratorComponent \n\nConfiguratorComponent \n\nConfiguratorComponent  -->\n\nConfiguratorModule->ConfiguratorComponent \n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nConfiguratorModule->ToolbarComponent \n\n\n\n\n\nUtilsModule \n\nUtilsModule \n\nUtilsModule  -->\n\nConfiguratorModule->UtilsModule \n\n\n\n\n\nSvgIconsModule\n\nSvgIconsModule\n\nConfiguratorModule -->\n\nSvgIconsModule->ConfiguratorModule\n\n\n\n\n\nUtilsModule\n\nUtilsModule\n\nConfiguratorModule -->\n\nUtilsModule->ConfiguratorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/lib/src/configurator/configurator.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ClassEditorComponent\n                        \n                        \n                            ConditionEditorComponent\n                        \n                        \n                            ConfiguratorComponent\n                        \n                        \n                            FlexEditorComponent\n                        \n                        \n                            HtmlEditorComponent\n                        \n                        \n                            PaletteComponent\n                        \n                        \n                            ToolbarComponent\n                        \n                        \n                            TreeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SvgIconsModule\n                        \n                        \n                            UtilsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfiguratorComponent\n                        \n                        \n                            ToolbarComponent\n                        \n                        \n                            UtilsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DndModule } from 'ngx-drag-drop';\nimport { iconsLibrary } from '../svg/icons-library';\nimport { SvgIconsModule } from '../utils/svg-icon/svg-icon.module';\nimport { UtilsModule } from '../utils/utils.module';\nimport { ClassEditorComponent, ConditionEditorComponent, FlexEditorComponent, HtmlEditorComponent } from './editors';\nimport { ConfiguratorComponent } from './configurator.component';\nimport { PaletteComponent } from './palette/palette.component';\nimport { ToolbarComponent } from './toolbar.component';\nimport { TreeComponent } from './tree/tree.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, UtilsModule, DndModule, SvgIconsModule.forRoot(({icons: iconsLibrary}))\n  ],\n  declarations: [\n    ConfiguratorComponent,\n    ClassEditorComponent,\n    PaletteComponent,\n    HtmlEditorComponent,\n    ToolbarComponent,\n    TreeComponent,\n    FlexEditorComponent,\n    ConditionEditorComponent\n  ],\n  exports: [\n    UtilsModule,\n    ConfiguratorComponent,\n    ToolbarComponent\n  ],\n})\nexport class ConfiguratorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfiguratorOptions.html":{"url":"interfaces/ConfiguratorOptions.html","title":"interface - ConfiguratorOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfiguratorOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configurator/configurator.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            paletteOptions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showConditionalDisplay\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showCssClasses\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showDuplicate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showFlexEditor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showHtmlEditor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showRemove\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        paletteOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paletteOptions:         PaletteOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PaletteOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showConditionalDisplay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showConditionalDisplay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showCssClasses\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showCssClasses:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showDuplicate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showDuplicate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showFlexEditor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showFlexEditor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showHtmlEditor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showHtmlEditor:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showRemove\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showRemove:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Configurable } from \"../configurable\";\nimport { ComponentConfig } from \"../configuration\";\nimport { TemplateNameDirective } from \"../utils\";\n\nexport interface ConfiguratorOptions {\n    paletteOptions?: PaletteOptions;\n    showFlexEditor?: boolean;\n    showHtmlEditor?: boolean;\n    showCssClasses?: boolean;\n    showConditionalDisplay?: boolean;\n    showRemove?: boolean;\n    showDuplicate?: boolean;\n}\n  \nexport interface PaletteOptions {\n    enableSubcontainers?: boolean;\n    enableRawHtml?: boolean;\n    rawHtmlPlaceholder?: string;\n    showStandardPalette?: boolean;\n    showExistingPalette?: boolean;\n}\n\nexport interface ConfiguratorContext {\n    /** Object storing the configuration of the component */\n    config: ComponentConfig;\n    /** Options of the configurators (may change depending on zone) */\n    options: ConfiguratorOptions;\n    /** Register of all the components configurators  */\n    configurators: Record;\n    /** Context of the zone of the edited component */\n    context: Configurable;\n    /** Callback that the configurator should call to update the configuration */\n    configChanged: () => void;\n};\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContainerConfig.html":{"url":"interfaces/ContainerConfig.html","title":"interface - ContainerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContainerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configuration/config.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { createState, Store } from '@ngneat/elf';\nimport {\n  withEntities,\n  getEntity,\n  addEntities,\n  updateEntities,\n  selectEntity,\n  selectAll,\n  getEntities,\n  deleteEntities,\n  deleteAllEntities,\n} from '@ngneat/elf-entities';\nimport { stateHistory } from '@ngneat/elf-state-history';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Condition } from './conditions.service';\n\nexport interface ComponentConfig {\n  readonly id: string;\n  type: string;\n  classes?: string;\n  [key: string]: any;\n  condition?: Condition;\n}\n\nexport interface ContainerConfig extends ComponentConfig {\n  type: '_container';\n  items: string[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ConfigService {\n  store: Store;\n  historyState: any;\n  \n  init(initialValue: ComponentConfig[]) {\n    const { state, config } = createState(\n      withEntities({ initialValue })\n    );\n    this.store = new Store({ name: 'config', state, config });\n    this.historyState = stateHistory(this.store, { maxAge: Infinity });\n    this.store.subscribe(console.log);\n  }\n\n  set(config: ComponentConfig[]) {\n    this.store.update(\n      deleteAllEntities(),\n      addEntities(config)\n    );\n  }\n\n  public watchAllConfig(): Observable {\n    return this.store.pipe(selectAll());\n  }\n\n  public getAllConfig(): ComponentConfig[] {\n    return this.store.query(getEntities());\n  }\n\n  public watchConfig(id: string): Observable {\n    //console.log('watch:', id);\n    this.getConfig(id); // Ensure a value exists (if 'id' has no config)\n    return this.store.pipe(\n      selectEntity(id),\n      filter(config => config !== undefined),\n      //tap((config) => console.log('change:', config)),\n      map((config) => JSON.parse(JSON.stringify(config)))\n    );\n  }\n\n  private _getConfig(id: string): ComponentConfig | undefined {\n    return this.store.query(getEntity(id));\n  }\n\n  public getConfig(id: string): ComponentConfig {\n    let config = this._getConfig(id);\n    if (!config) {\n      config = { id, type: id };\n      this.historyState.pause();\n      this.store.update(addEntities(config));\n      this.historyState.resume();\n    }\n    return JSON.parse(JSON.stringify(config)); // Deep copy\n  }\n\n  public getContainer(id: string): ContainerConfig {\n    const config = this.getConfig(id);\n    if (!this.isContainerConfig(config)) {\n      throw `${id} is not a container`;\n    }\n    return config;\n  }\n\n  public isContainer(id: string): boolean {\n    return this.isContainerConfig(this._getConfig(id));\n  }\n\n  public isContainerConfig(conf: ComponentConfig|undefined): conf is ContainerConfig {\n    return conf?.type === '_container';\n  }\n\n  /**\n   * Test whether a given component id is used within the hierarchy of a container\n   */\n  public isUsed(id: string) {\n    return !!this.findParent(id);\n  }\n\n  public findParent(id: string): ContainerConfig | undefined {\n    return this.getAllConfig()\n      .find(item => this.isContainerConfig(item) && item.items.includes(id)) as ContainerConfig | undefined;\n  }\n\n  public updateConfig(value: ComponentConfig | ComponentConfig[]) {\n    //console.log('update config', this._getConfig(value.id));\n    //console.log('new config', value);\n    if(!Array.isArray(value)) value = [value];\n    this.store.update(\n      ...value.map(v => {\n        if(!this._getConfig(v.id)){\n          return addEntities(v)\n        }\n        return updateEntities([v.id], () => v)}\n      )\n    );\n  }\n\n  public removeConfig(id: string) {\n    this.store.update(deleteEntities(id));\n  }\n\n  public generateId(type: string) {\n    let idx = 1;\n    let root = type.startsWith(\"_\")? type.slice(1) : type;\n    const tokens = type.split(\"-\");\n    if(tokens[tokens.length-1].match(/\\d+/)) {\n      idx = +tokens[tokens.length-1];\n      root = tokens.slice(0, tokens.length-1).join('-');\n    }\n    let id = root;\n    do {\n      id = `${root}-${idx++}`;\n    } while (this._getConfig(id) || id === type);\n    return id;\n  }\n\n  public canUndo$(){\n    return this.historyState.hasPast$;\n  }\n\n  public canRedo$(){\n    return this.historyState.hasFuture$;\n  }\n\n  public undo() {\n    this.historyState.undo();\n  }\n\n  public redo() {\n    this.historyState.redo();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContainerIndex.html":{"url":"interfaces/ContainerIndex.html","title":"interface - ContainerIndex","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContainerIndex\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/dynamic-views/drag-drop.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            container\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        container\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        container:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  ComponentConfig,\n  ConfigService,\n  ContainerConfig,\n} from '../configuration/config.service';\n\nexport interface ContainerIndex {\n  container: string;\n  index: number;\n}\n\nexport interface ComponentCreator {\n  type: string;\n  createConfig: (id: string, creator?: ComponentCreator) => Observable;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class DragDropService {\n  constructor(public configService: ConfigService) {}\n\n  draggedCreator?: ComponentCreator;\n\n  public handleDrop(\n    containerId: string,\n    index: number,\n    dropped: ContainerIndex | string\n  ) {\n    const container = this.configService.getContainer(containerId);\n    // Drop a component from a container to another container\n    if ((dropped as ContainerIndex).container) {\n      dropped = dropped as ContainerIndex;\n      const og = this.configService.getContainer(dropped.container);\n      if (dropped.container === containerId) {\n        this.moveWithin(og, dropped.index, index);\n      } else {\n        this.moveBetween(container, index, og, dropped.index);\n      }\n    }\n    // Drag a component creator (from a palette)\n    else if (this.draggedCreator?.type === dropped) {\n      const newId = this.configService.generateId(dropped);\n      this.draggedCreator\n        .createConfig(newId, this.draggedCreator)\n        .subscribe((config) => this.insertNew(container, index, config));\n    }\n    else {\n      console.error(\"Unexpected dropped item:\", dropped);\n    }\n  }\n\n  public handleCancel(\n    index: number,\n    containerId: string\n  ) {\n    const container = this.configService.getContainer(containerId);\n    container.items.splice(index, 1);\n    this.configService.updateConfig([container]);\n  }\n\n  private insertNew(\n    container: ContainerConfig,\n    index: number,\n    component: ComponentConfig|undefined\n  ) {\n    if(component) {\n      container.items.splice(index, 0, component.id);\n      this.configService.updateConfig([container, component]); // addEntities might be needed\n    }\n  }\n\n  private moveBetween(\n    container: ContainerConfig,\n    index: number,\n    ogContainer: ContainerConfig,\n    ogIndex: number\n  ) {\n    let item = ogContainer.items.splice(ogIndex, 1);\n    container.items.splice(index, 0, item[0]);\n    this.configService.updateConfig([ogContainer, container]);\n  }\n\n  private moveWithin(\n    container: ContainerConfig,\n    oldIndex: number,\n    newIndex: number\n  ) {\n    if (oldIndex !== newIndex && oldIndex !== newIndex - 1) {\n      let item = container.items.splice(oldIndex, 1);\n      if (newIndex > oldIndex) {\n        newIndex--;\n      }\n      container.items.splice(newIndex, 0, item[0]);\n      this.configService.updateConfig(container);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DragDropService.html":{"url":"injectables/DragDropService.html","title":"injectable - DragDropService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DragDropService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/dynamic-views/drag-drop.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                configService\n                            \n                            \n                                    Optional\n                                draggedCreator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handleCancel\n                            \n                            \n                                    Public\n                                handleDrop\n                            \n                            \n                                    Private\n                                insertNew\n                            \n                            \n                                    Private\n                                moveBetween\n                            \n                            \n                                    Private\n                                moveWithin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/dynamic-views/drag-drop.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        handleCancel\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleCancel(index: number, containerId: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/drag-drop.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    containerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        handleDrop\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleDrop(containerId: string, index: number, dropped: ContainerIndex | string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/drag-drop.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    containerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dropped\n                                    \n                                                ContainerIndex | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertNew\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertNew(container: ContainerConfig, index: number, component: ComponentConfig | undefined)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/drag-drop.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                                ContainerConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    component\n                                    \n                                                ComponentConfig | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        moveBetween\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveBetween(container: ContainerConfig, index: number, ogContainer: ContainerConfig, ogIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/drag-drop.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                                ContainerConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ogContainer\n                                    \n                                                ContainerConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ogIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        moveWithin\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveWithin(container: ContainerConfig, oldIndex: number, newIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/drag-drop.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    container\n                                    \n                                                ContainerConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    oldIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/drag-drop.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        draggedCreator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentCreator\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/drag-drop.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  ComponentConfig,\n  ConfigService,\n  ContainerConfig,\n} from '../configuration/config.service';\n\nexport interface ContainerIndex {\n  container: string;\n  index: number;\n}\n\nexport interface ComponentCreator {\n  type: string;\n  createConfig: (id: string, creator?: ComponentCreator) => Observable;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class DragDropService {\n  constructor(public configService: ConfigService) {}\n\n  draggedCreator?: ComponentCreator;\n\n  public handleDrop(\n    containerId: string,\n    index: number,\n    dropped: ContainerIndex | string\n  ) {\n    const container = this.configService.getContainer(containerId);\n    // Drop a component from a container to another container\n    if ((dropped as ContainerIndex).container) {\n      dropped = dropped as ContainerIndex;\n      const og = this.configService.getContainer(dropped.container);\n      if (dropped.container === containerId) {\n        this.moveWithin(og, dropped.index, index);\n      } else {\n        this.moveBetween(container, index, og, dropped.index);\n      }\n    }\n    // Drag a component creator (from a palette)\n    else if (this.draggedCreator?.type === dropped) {\n      const newId = this.configService.generateId(dropped);\n      this.draggedCreator\n        .createConfig(newId, this.draggedCreator)\n        .subscribe((config) => this.insertNew(container, index, config));\n    }\n    else {\n      console.error(\"Unexpected dropped item:\", dropped);\n    }\n  }\n\n  public handleCancel(\n    index: number,\n    containerId: string\n  ) {\n    const container = this.configService.getContainer(containerId);\n    container.items.splice(index, 1);\n    this.configService.updateConfig([container]);\n  }\n\n  private insertNew(\n    container: ContainerConfig,\n    index: number,\n    component: ComponentConfig|undefined\n  ) {\n    if(component) {\n      container.items.splice(index, 0, component.id);\n      this.configService.updateConfig([container, component]); // addEntities might be needed\n    }\n  }\n\n  private moveBetween(\n    container: ContainerConfig,\n    index: number,\n    ogContainer: ContainerConfig,\n    ogIndex: number\n  ) {\n    let item = ogContainer.items.splice(ogIndex, 1);\n    container.items.splice(index, 0, item[0]);\n    this.configService.updateConfig([ogContainer, container]);\n  }\n\n  private moveWithin(\n    container: ContainerConfig,\n    oldIndex: number,\n    newIndex: number\n  ) {\n    if (oldIndex !== newIndex && oldIndex !== newIndex - 1) {\n      let item = container.items.splice(oldIndex, 1);\n      if (newIndex > oldIndex) {\n        newIndex--;\n      }\n      container.items.splice(newIndex, 0, item[0]);\n      this.configService.updateConfig(container);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DynamicViewsModule.html":{"url":"modules/DynamicViewsModule.html","title":"module - DynamicViewsModule","body":"\n                   \n\n\n\n\n    Modules\n    DynamicViewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DynamicViewsModule\n\n\n\ncluster_DynamicViewsModule_declarations\n\n\n\ncluster_DynamicViewsModule_exports\n\n\n\ncluster_DynamicViewsModule_imports\n\n\n\n\nConditionPipe\n\nConditionPipe\n\n\n\nDynamicViewsModule\n\nDynamicViewsModule\n\nDynamicViewsModule -->\n\nConditionPipe->DynamicViewsModule\n\n\n\n\n\nItemComponent\n\nItemComponent\n\nDynamicViewsModule -->\n\nItemComponent->DynamicViewsModule\n\n\n\n\n\nZoneComponent\n\nZoneComponent\n\nDynamicViewsModule -->\n\nZoneComponent->DynamicViewsModule\n\n\n\n\n\nConditionPipe \n\nConditionPipe \n\nConditionPipe  -->\n\nDynamicViewsModule->ConditionPipe \n\n\n\n\n\nUtilsModule \n\nUtilsModule \n\nUtilsModule  -->\n\nDynamicViewsModule->UtilsModule \n\n\n\n\n\nZoneComponent \n\nZoneComponent \n\nZoneComponent  -->\n\nDynamicViewsModule->ZoneComponent \n\n\n\n\n\nConfigurableModule\n\nConfigurableModule\n\nDynamicViewsModule -->\n\nConfigurableModule->DynamicViewsModule\n\n\n\n\n\nSvgIconsModule\n\nSvgIconsModule\n\nDynamicViewsModule -->\n\nSvgIconsModule->DynamicViewsModule\n\n\n\n\n\nUtilsModule\n\nUtilsModule\n\nDynamicViewsModule -->\n\nUtilsModule->DynamicViewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/lib/src/dynamic-views/dynamic-views.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConditionPipe\n                        \n                        \n                            ItemComponent\n                        \n                        \n                            ZoneComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConfigurableModule\n                        \n                        \n                            SvgIconsModule\n                        \n                        \n                            UtilsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConditionPipe\n                        \n                        \n                            UtilsModule\n                        \n                        \n                            ZoneComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfigurableModule } from '../configurable/configurable.module';\nimport { UtilsModule } from '../utils/utils.module';\nimport { DndModule } from 'ngx-drag-drop';\n\nimport { ZoneComponent } from './zone.component';\nimport { ItemComponent } from './item.component';\nimport { ConditionPipe } from './condition.pipe';\nimport {SvgIconsModule} from '../utils/svg-icon/svg-icon.module';\nimport {iconsLibrary} from '../svg/icons-library';\n\n@NgModule({\n  imports: [CommonModule, DndModule, ConfigurableModule, UtilsModule, SvgIconsModule.forRoot(({icons: iconsLibrary}))],\n  declarations: [ZoneComponent, ItemComponent, ConditionPipe],\n  exports: [UtilsModule, ZoneComponent, ConditionPipe],\n})\nexport class DynamicViewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FlexEditorComponent.html":{"url":"components/FlexEditorComponent.html","title":"component - FlexEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FlexEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/configurator/editors/flex-editor.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-flex-editor\n            \n\n            \n                styleUrls\n                ./flex-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                flex-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alignmentHorizontal\n                            \n                            \n                                alignmentVertical\n                            \n                            \n                                classes\n                            \n                            \n                                    Public\n                                configService\n                            \n                            \n                                directions\n                            \n                            \n                                justify\n                            \n                            \n                                placement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                toggleClass\n                            \n                            \n                                updateConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    direction\n                                \n                                \n                                    alignment\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :         ComponentConfig\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleClass\n                        \n                    \n                \n            \n            \n                \ntoggleClass(style: string, turnOff: FlexOption[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    style\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    turnOff\n                                    \n                                                FlexOption[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateConfig\n                        \n                    \n                \n            \n            \n                \nupdateConfig()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alignmentHorizontal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FlexOption[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {key: 'align_y_start', text: $localize `top`, value: 'flex-start', bootstrap: 'align-items-start'},\n    {key: 'align_y_center', text: $localize `center`, value: 'center', bootstrap: 'align-items-center'},\n    {key: 'align_y_end', text: $localize `bottom`, value: 'flex-end', bootstrap: 'align-items-end'},\n    {key: 'align_y_stretch', text: $localize `stretch`, value: 'stretch', bootstrap: 'align-items-stretch'},\n    {key: 'align_y_baseline', text: $localize `baseline`, value: 'baseline', bootstrap: 'align-items-baseline'},\n  ]\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        alignmentVertical\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FlexOption[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {key:'align_x_start', text: $localize `start`, value: 'flex-start', bootstrap: 'align-items-start'},\n    {key:'align_x_center', text: $localize `center`, value: 'center', bootstrap: 'align-items-center'},\n    {key:'align_x_end', text: $localize `end`, value: 'flex-end', bootstrap: 'align-items-end'},\n    {key:'align_x_stretch', text: $localize `stretch`, value: 'stretch', bootstrap: 'align-items-stretch'},\n  ]\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        classes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FlexOption[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {key: 'arrow_down', text: $localize `vertical`, value: 'column', bootstrap: 'flex-column'},\n    {key: 'arrow_forward', text: $localize `horizontal`, value: 'row', bootstrap: 'flex-row'}\n  ]\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        justify\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FlexOption[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {key:'align_x_start', text: $localize `start`, value: 'flex-start', bootstrap: 'justify-content-start'},\n    {key:'align_x_center', text: $localize `center`, value: 'center', bootstrap: 'justify-content-center'},\n    {key:'align_x_end', text: $localize `end`, value: 'flex-end', bootstrap: 'justify-content-end'},\n    {key:'align_x_space_around', text: $localize `space around`, value: 'space-around', bootstrap: 'justify-content-around'},\n    {key:'align_x_space_between', text: $localize `space between`, value: 'space-between', bootstrap: 'justify-content-between'}\n  ]\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        placement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"bottom\"\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        direction\n                    \n                \n\n                \n                    \n                        getdirection()\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:24\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        alignment\n                    \n                \n\n                \n                    \n                        getalignment()\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/configurator/editors/flex-editor.component.ts:56\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ComponentConfig, ConfigService } from '../../configuration';\n\ndeclare interface FlexOption {\n  key: string;\n  text: string;\n  value: string;\n  bootstrap: string;\n}\n\n@Component({\n  selector: 'uib-flex-editor',\n  templateUrl: 'flex-editor.component.html',\n  styleUrls: ['./flex-editor.component.scss'],\n})\nexport class FlexEditorComponent implements OnChanges {\n  @Input() config: ComponentConfig;\n  \n  // tooltip's placement\n  placement = \"bottom\";\n  \n  classes: string[];\n\n  get direction(): 'row' | 'column' {\n    return this.classes.includes('flex-column') ? 'column' : 'row';\n  }\n    \n  directions: FlexOption[] = [\n    {key: 'arrow_down', text: $localize `vertical`, value: 'column', bootstrap: 'flex-column'},\n    {key: 'arrow_forward', text: $localize `horizontal`, value: 'row', bootstrap: 'flex-row'}\n  ]\n  \n  justify: FlexOption[] = [\n    {key:'align_x_start', text: $localize `start`, value: 'flex-start', bootstrap: 'justify-content-start'},\n    {key:'align_x_center', text: $localize `center`, value: 'center', bootstrap: 'justify-content-center'},\n    {key:'align_x_end', text: $localize `end`, value: 'flex-end', bootstrap: 'justify-content-end'},\n    {key:'align_x_space_around', text: $localize `space around`, value: 'space-around', bootstrap: 'justify-content-around'},\n    {key:'align_x_space_between', text: $localize `space between`, value: 'space-between', bootstrap: 'justify-content-between'}\n  ]\n  \n  alignmentHorizontal: FlexOption[] = [\n    {key: 'align_y_start', text: $localize `top`, value: 'flex-start', bootstrap: 'align-items-start'},\n    {key: 'align_y_center', text: $localize `center`, value: 'center', bootstrap: 'align-items-center'},\n    {key: 'align_y_end', text: $localize `bottom`, value: 'flex-end', bootstrap: 'align-items-end'},\n    {key: 'align_y_stretch', text: $localize `stretch`, value: 'stretch', bootstrap: 'align-items-stretch'},\n    {key: 'align_y_baseline', text: $localize `baseline`, value: 'baseline', bootstrap: 'align-items-baseline'},\n  ]\n  \n  alignmentVertical: FlexOption[] = [\n    {key:'align_x_start', text: $localize `start`, value: 'flex-start', bootstrap: 'align-items-start'},\n    {key:'align_x_center', text: $localize `center`, value: 'center', bootstrap: 'align-items-center'},\n    {key:'align_x_end', text: $localize `end`, value: 'flex-end', bootstrap: 'align-items-end'},\n    {key:'align_x_stretch', text: $localize `stretch`, value: 'stretch', bootstrap: 'align-items-stretch'},\n  ]\n\n  get alignment(): FlexOption[] {\n    return this.direction === 'column'? this.alignmentVertical : this.alignmentHorizontal;\n  }\n  \n  \n  constructor(\n    public configService: ConfigService\n  ) {}\n  \n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.config) {\n      // convert \"classes\" string into array\n      this.classes = this.config.classes?.split(' ') || [];\n    }\n  }\n\n  updateConfig() {\n    this.config.classes = this.classes.join(' ');\n    this.configService.updateConfig(this.config);\n  }\n\n  toggleClass(style: string, turnOff: FlexOption[] = []) {\n    const i = this.classes.indexOf(style);\n    // Remove all classes matching a flex option\n    this.classes = this.classes.filter(c => c !== style && !turnOff.find(o => o.bootstrap === c));\n    // Then add the class, unless it was already there (in which case, the filter turned it off)\n    if(i === -1) {\n      this.classes.push(style);\n    }\n    this.updateConfig();\n  }\n}\n\n    \n\n    \n        \n\n  Direction\n  \n    \n     \n     \n       \n     \n    \n  \n\n\n\n\n  Justify\n  \n    \n      \n      \n        \n              \n    \n  \n\n\n\n\n  Alignment\n  \n  \n    \n      \n      \n        \n      \n    \n  \n\n\n\n  Wrap\n  \n\n\n\n    \n\n    \n                \n                    ./flex-editor.component.scss\n                \n                .editor-line {\n  display: grid;\n  grid-template-columns: 105px 1fr;\n  align-items: center;\n}\n\n/* ================ RADIO BUTTONS ================= */\n\n.radio-group {\n  // --rotate: 90deg;\n  --icon-width: 22px;\n  --icon-height: 25px;\n  --bg-checked: hsl(80, 73%, 75%);\n  --bg-hover: hsl(80, 61%, 50%);\n\n  display: flex;\n  align-items: center;\n  gap: 0.2rem;\n}\n\n.radio-group label {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  \n  > svg {\n    width: var(--icon-width);\n    height: var(--icon-height);\n\n    transform: rotate(var(--rotate, 0deg));\n    transition: transform 0.2s ease-in-out;\n  }\n}\n\n.radio-group input[type='radio'] {\n  display: none;\n}\n\n.radio-group input[type='radio'] + label {\n  padding: 0.3rem 0.5rem;\n  border-radius: 4px;\n  border: 1px dashed #ccc;\n  transition: background-color 0.4s ease-out;\n}\n\n.radio-group input[type='radio']:checked + label {\n  border: 1px solid #000;\n  background-color: var(--bg-checked);\n  transition: background-color 0.4s ease-in;\n}\n\n.radio-group input[type='radio'] + label:hover {\n  cursor: pointer;\n  padding: 0.3rem 0.5rem;\n  color: white;\n  fill: white;\n  border-radius: 4px;\n  background-color: var(--bg-hover);\n  transition: background-color 0.2s ease-in, fill 0.2s ease-in, color 0.2s ease-in;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Direction                                    Justify                                                Alignment                                          Wrap  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'FlexEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FlexOption.html":{"url":"interfaces/FlexOption.html","title":"interface - FlexOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FlexOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configurator/editors/flex-editor.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bootstrap\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bootstrap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bootstrap:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ComponentConfig, ConfigService } from '../../configuration';\n\ndeclare interface FlexOption {\n  key: string;\n  text: string;\n  value: string;\n  bootstrap: string;\n}\n\n@Component({\n  selector: 'uib-flex-editor',\n  templateUrl: 'flex-editor.component.html',\n  styleUrls: ['./flex-editor.component.scss'],\n})\nexport class FlexEditorComponent implements OnChanges {\n  @Input() config: ComponentConfig;\n  \n  // tooltip's placement\n  placement = \"bottom\";\n  \n  classes: string[];\n\n  get direction(): 'row' | 'column' {\n    return this.classes.includes('flex-column') ? 'column' : 'row';\n  }\n    \n  directions: FlexOption[] = [\n    {key: 'arrow_down', text: $localize `vertical`, value: 'column', bootstrap: 'flex-column'},\n    {key: 'arrow_forward', text: $localize `horizontal`, value: 'row', bootstrap: 'flex-row'}\n  ]\n  \n  justify: FlexOption[] = [\n    {key:'align_x_start', text: $localize `start`, value: 'flex-start', bootstrap: 'justify-content-start'},\n    {key:'align_x_center', text: $localize `center`, value: 'center', bootstrap: 'justify-content-center'},\n    {key:'align_x_end', text: $localize `end`, value: 'flex-end', bootstrap: 'justify-content-end'},\n    {key:'align_x_space_around', text: $localize `space around`, value: 'space-around', bootstrap: 'justify-content-around'},\n    {key:'align_x_space_between', text: $localize `space between`, value: 'space-between', bootstrap: 'justify-content-between'}\n  ]\n  \n  alignmentHorizontal: FlexOption[] = [\n    {key: 'align_y_start', text: $localize `top`, value: 'flex-start', bootstrap: 'align-items-start'},\n    {key: 'align_y_center', text: $localize `center`, value: 'center', bootstrap: 'align-items-center'},\n    {key: 'align_y_end', text: $localize `bottom`, value: 'flex-end', bootstrap: 'align-items-end'},\n    {key: 'align_y_stretch', text: $localize `stretch`, value: 'stretch', bootstrap: 'align-items-stretch'},\n    {key: 'align_y_baseline', text: $localize `baseline`, value: 'baseline', bootstrap: 'align-items-baseline'},\n  ]\n  \n  alignmentVertical: FlexOption[] = [\n    {key:'align_x_start', text: $localize `start`, value: 'flex-start', bootstrap: 'align-items-start'},\n    {key:'align_x_center', text: $localize `center`, value: 'center', bootstrap: 'align-items-center'},\n    {key:'align_x_end', text: $localize `end`, value: 'flex-end', bootstrap: 'align-items-end'},\n    {key:'align_x_stretch', text: $localize `stretch`, value: 'stretch', bootstrap: 'align-items-stretch'},\n  ]\n\n  get alignment(): FlexOption[] {\n    return this.direction === 'column'? this.alignmentVertical : this.alignmentHorizontal;\n  }\n  \n  \n  constructor(\n    public configService: ConfigService\n  ) {}\n  \n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.config) {\n      // convert \"classes\" string into array\n      this.classes = this.config.classes?.split(' ') || [];\n    }\n  }\n\n  updateConfig() {\n    this.config.classes = this.classes.join(' ');\n    this.configService.updateConfig(this.config);\n  }\n\n  toggleClass(style: string, turnOff: FlexOption[] = []) {\n    const i = this.classes.indexOf(style);\n    // Remove all classes matching a flex option\n    this.classes = this.classes.filter(c => c !== style && !turnOff.find(o => o.bootstrap === c));\n    // Then add the class, unless it was already there (in which case, the filter turned it off)\n    if(i === -1) {\n      this.classes.push(style);\n    }\n    this.updateConfig();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HtmlEditorComponent.html":{"url":"components/HtmlEditorComponent.html","title":"component - HtmlEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HtmlEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/configurator/editors/html-editor.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-html-editor\n            \n\n\n            \n                styles\n                \ntextarea {\n  font-family: monospace;\n  font-size: 12px !important;\n}\n  \n            \n\n            \n                template\n                Raw HTML:\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                context\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        context\n                    \n                \n                \n                    \n                        Type :         ConfiguratorContext\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/editors/html-editor.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from \"@angular/core\";\nimport { ConfiguratorContext } from \"../configurator.models\";\n\n@Component({\n  selector: 'uib-html-editor',\n  template: `\n  Raw HTML:\n  \n  `,\n  styles: [`\ntextarea {\n  font-family: monospace;\n  font-size: 12px !important;\n}\n  `]\n})\nexport class HtmlEditorComponent {\n  @Input() context: ConfiguratorContext;\n\n}\n    \n\n\n    \n            \ntextarea {\n  font-family: monospace;\n  font-size: 12px !important;\n}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Raw HTML:'\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'HtmlEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ItemComponent.html":{"url":"components/ItemComponent.html","title":"component - ItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/dynamic-views/item.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                [uib-item]\n            \n\n            \n                styleUrls\n                item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _data\n                            \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Optional\n                                classes\n                            \n                            \n                                condition\n                            \n                            \n                                    Public\n                                conditionsService\n                            \n                            \n                                config\n                            \n                            \n                                    Public\n                                configService\n                            \n                            \n                                    Public\n                                dragDropService\n                            \n                            \n                                    Public\n                                el\n                            \n                            \n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isContainer\n                            \n                            \n                                isHorizontal\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDndCanceled\n                            \n                            \n                                onDndDrop\n                            \n                            \n                                updateCondition\n                            \n                            \n                                updateConfig\n                            \n                            \n                                updateData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionsData\n                            \n                            \n                                configurable\n                            \n                            \n                                data\n                            \n                            \n                                dataIndex\n                            \n                            \n                                templates\n                            \n                            \n                                uib-item\n                            \n                            \n                                zone\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, conditionsService: ConditionsService, dragDropService: DragDropService, cdr: ChangeDetectorRef, el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        conditionsService\n                                                  \n                                                        \n                                                                        ConditionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dragDropService\n                                                  \n                                                        \n                                                                        DragDropService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        conditionsData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/item.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        configurable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/item.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/item.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dataIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/item.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        templates\n                    \n                \n                \n                    \n                        Type :         Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/item.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uib-item\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/item.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zone\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/item.component.ts:28\n                            \n                        \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isContainer\n                        \n                    \n                \n            \n            \n                \nisContainer(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/item.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHorizontal\n                        \n                    \n                \n            \n            \n                \nisHorizontal()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/item.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/item.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/item.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/item.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDndCanceled\n                        \n                    \n                \n            \n            \n                \nonDndCanceled(item: string, index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/item.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDndDrop\n                        \n                    \n                \n            \n            \n                \nonDndDrop(item: string, event: DndDropEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/item.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    event\n                                    \n                                            DndDropEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCondition\n                        \n                    \n                \n            \n            \n                \nupdateCondition()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/item.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateConfig\n                        \n                    \n                \n            \n            \n                \nupdateConfig(config: ComponentConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/item.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                ComponentConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/item.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cdr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        classes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        condition\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        conditionsService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConditionsService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComponentConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dragDropService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DragDropService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/item.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges\n} from '@angular/core';\nimport { DndDropEvent } from 'ngx-drag-drop';\nimport { Subscription } from 'rxjs';\nimport { ConditionsService } from '../configuration';\nimport { ComponentConfig, ConfigService } from '../configuration/config.service';\nimport { TemplateNameDirective } from '../utils';\nimport { DragDropService } from './drag-drop.service';\n\n@Component({\n  selector: '[uib-item]',\n  templateUrl: './item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['item.component.scss']\n})\nexport class ItemComponent implements OnInit, OnChanges, OnDestroy {\n  @Input('uib-item') id: string;\n  @Input() zone: string;\n  @Input() data?: any;\n  @Input() dataIndex?: number;\n  @Input() conditionsData?: Record;\n\n  @Input() templates: Record;\n  \n  @Input() configurable: boolean = true;\n  \n  @HostBinding('class')\n  classes?: string;\n\n  config: ComponentConfig;\n  condition = true;\n\n  subs: Subscription[] = [];\n\n  _data: any;\n\n  constructor(\n    public configService: ConfigService,\n    public conditionsService: ConditionsService,\n    public dragDropService: DragDropService,\n    public cdr: ChangeDetectorRef,\n    public el: ElementRef\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(changes.data || changes.dataIndex || changes.conditionsData) {\n      this.updateData();\n      this.updateCondition();\n    }\n  }\n\n  ngOnInit() {\n    const configChanges$ = this.configService.watchConfig(this.id).subscribe((config) => this.updateConfig(config));\n    const allConfigChanges$ = this.configService.watchAllConfig().subscribe(() => this.cdr.markForCheck())\n    \n    this.subs.push(configChanges$, allConfigChanges$)\n    this.updateConfig(this.configService.getConfig(this.id));\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach((s) => s.unsubscribe());\n  }\n\n  updateConfig(config: ComponentConfig) {\n    this.config = config;\n    this.classes = this.config.classes;\n    if(this.configService.isContainerConfig(config)) {\n      this.classes = (this.classes || '') + ' uib-container';\n    }\n    this.updateCondition();\n  }\n\n  updateData() {\n    this._data = typeof this.dataIndex === 'undefined'? this.data : this.data[this.dataIndex];\n  }\n\n  updateCondition() {\n    this.condition = this.conditionsService.check(this.config?.condition, this.conditionsData, this._data);\n  }\n\n  // Drag & Drop\n\n  onDndDrop(item: string, event: DndDropEvent) {\n    console.log('dropped', event);\n    if(typeof event.index === 'number') {\n      this.dragDropService.handleDrop(item, event.index, event.data);\n    }\n  }\n\n  onDndCanceled(item: string, index: number) {\n    console.log('cancelled', item, this.id);\n    this.dragDropService.handleCancel(index, this.id);\n  }\n\n  isContainer(id: string) {\n    return this.configService.isContainer(id);\n  }\n\n  isHorizontal() {\n    if(this.el.nativeElement.classList.contains('d-flex')) {\n      return !this.el.nativeElement.classList.contains('flex-column');\n    }\n    return false;\n  }\n}\n\n    \n\n    \n        \n  +\n\n  \n    \n          \n    \n\n    \n      \n    \n\n  \n\n\n\n\n\n\n\n    \n\n    \n                \n                    item.component.scss\n                \n                .dragPlaceholder {\n  --color: hsl(0, 0%, 43%);\n  \n  text-align:center;\n  font-size: 20px;\n  font-weight: bold;\n  color: var(--color);\n  \n  outline: 2px dashed var(--color);\n  min-width: 20px;\n  min-height: 20px;\n  \n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  +                                    '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/utils/modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnChanges\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-modal\n            \n\n\n\n            \n                template\n                \n  \n    \n      \n        {{title}}\n        \n      \n      \n        \n      \n      \n        Cancel\n        OK\n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                el\n                            \n                            \n                                    Optional\n                                modal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onModalClose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                show\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        show\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/modal.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/modal.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/modal.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/modal.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/modal.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/modal.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModalClose\n                        \n                    \n                \n            \n            \n                \nonModalClose(success: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/modal.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    success\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modal', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/modal.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        modal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Modal\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/modal.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, Output, ViewChild } from \"@angular/core\";\nimport { Modal } from \"bootstrap\";\n\n@Component({\n    selector: 'uib-modal',\n    template: `\n  \n    \n      \n        \n          {{title}}\n          \n        \n        \n          \n        \n        \n          Cancel\n          OK\n        \n      \n    \n  \n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ModalComponent implements AfterViewInit, OnChanges, OnDestroy {\n\n  @ViewChild('modal', {static: true}) el: ElementRef;\n  @Input() title: string;\n  @Input() show: boolean;\n  @Output() close = new EventEmitter();\n\n  modal?: Modal;\n\n  ngOnChanges() {\n    if(this.show && !this.modal) {\n      this.modal = Modal.getOrCreateInstance(this.el.nativeElement, {backdrop: false}); // Backdrop causes issues when the modal is embedded in a fixed container\n      this.modal.show();\n    }\n  }\n\n  ngOnDestroy() {\n    this.modal?.dispose();\n  }\n    \n  ngAfterViewInit() {\n    this.el.nativeElement.addEventListener('hidden.bs.modal', () => this.onModalClose(false));\n  }\n  \n  onModalClose(success: boolean) {\n    this.close.next(success);\n    this.modal?.hide();\n    this.modal = undefined;\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{title}}                                                Cancel        OK            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgModelChangeDebouncedDirective.html":{"url":"directives/NgModelChangeDebouncedDirective.html","title":"directive - NgModelChangeDebouncedDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgModelChangeDebouncedDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/utils/model-change.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            OnDestroy\n                            AfterContentInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngModelChangeDebounced]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngModelDebounceTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngModelChangeDebounced\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngModel: NgModel)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/utils/model-change.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngModel\n                                                  \n                                                        \n                                                                        NgModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngModelDebounceTime\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1000\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/model-change.directive.ts:8\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ngModelChangeDebounced\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/model-change.directive.ts:9\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/model-change.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/model-change.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/model-change.directive.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { AfterContentInit, Directive, EventEmitter, Input, OnDestroy, Output } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\n@Directive({ selector: '[ngModelChangeDebounced]' })\nexport class NgModelChangeDebouncedDirective implements OnDestroy, AfterContentInit {\n  @Input() ngModelDebounceTime = 1000;\n  @Output() ngModelChangeDebounced = new EventEmitter()\n  \n  private subs: Subscription;\n\n  constructor(private ngModel: NgModel) {}\n  \n  ngAfterContentInit(): void {\n    this.subs = this.ngModel.update\n    .pipe(\n      distinctUntilChanged(),\n      debounceTime(this.ngModelDebounceTime),\n    )\n    .subscribe((value) => {\n      this.ngModelChangeDebounced.emit(value);\n    });\n  }\n  \n  ngOnDestroy(): void {\n    this.subs.unsubscribe();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaletteComponent.html":{"url":"components/PaletteComponent.html","title":"component - PaletteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaletteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/configurator/palette/palette.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-palette\n            \n\n\n            \n                styles\n                \n.palette-item {\n  display: inline-block;\n  border: 1px solid grey;\n  padding: 0.25rem 0.5rem;\n  border-radius: 3px;\n  background: rgb(0,0,0,0.1);\n  cursor: pointer;\n  margin-right: 5px;\n  margin-bottom: 5px;\n}\n.palette-item .btn-close {\n  font-size: 0.7em;\n}\n.palette-item .grip {\n  position: relative;\n  top: -2px;\n  color: #7c7c7c;\n  margin-right: 3px;\n}\n  \n            \n\n\n            \n                templateUrl\n                ./palette.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdRef\n                            \n                            \n                                    Public\n                                configService\n                            \n                            \n                                    Public\n                                dragDropService\n                            \n                            \n                                existingPalette\n                            \n                            \n                                    Optional\n                                modal\n                            \n                            \n                                standardPalette\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateAutoPalette\n                            \n                            \n                                generateExistingPalette\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDndEnd\n                            \n                            \n                                onDndStart\n                            \n                            \n                                onModalClose\n                            \n                            \n                                openModal\n                            \n                            \n                                removeItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                configurators\n                            \n                            \n                                context\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dragDropService: DragDropService, configService: ConfigService, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/configurator/palette/palette.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dragDropService\n                                                  \n                                                        \n                                                                        DragDropService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        configurators\n                    \n                \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/palette/palette.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        context\n                    \n                \n                \n                    \n                        Type :         Configurable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/palette/palette.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :         PaletteOptions\n\n                    \n                \n                \n                    \n                        Default value : defaultPaletteOptions\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/palette/palette.component.ts:65\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateAutoPalette\n                        \n                    \n                \n            \n            \n                \ngenerateAutoPalette()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/palette/palette.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateExistingPalette\n                        \n                    \n                \n            \n            \n                \ngenerateExistingPalette(configs: ComponentConfig[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/palette/palette.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n                                    \n                                                ComponentConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/palette/palette.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/palette/palette.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDndEnd\n                        \n                    \n                \n            \n            \n                \nonDndEnd()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/palette/palette.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDndStart\n                        \n                    \n                \n            \n            \n                \nonDndStart(item: PaletteItem)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/palette/palette.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                PaletteItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModalClose\n                        \n                    \n                \n            \n            \n                \nonModalClose(success: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/palette/palette.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    success\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal(id: string, type: string, configurator?: TemplateNameDirective)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/palette/palette.component.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    configurator\n                                    \n                                                TemplateNameDirective\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(item: PaletteItem)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/palette/palette.component.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                PaletteItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cdRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/palette/palette.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/palette/palette.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dragDropService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DragDropService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/palette/palette.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        existingPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaletteItem[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/palette/palette.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        modal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigModal\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/palette/palette.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        standardPalette\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaletteItem[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/palette/palette.component.ts:67\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { Configurable } from '../../configurable/configurable.service';\nimport { ComponentConfig, ConfigService } from '../../configuration/config.service';\nimport { ComponentCreator, DragDropService } from '../../dynamic-views/drag-drop.service';\nimport { TemplateNameDirective } from '../../utils';\nimport { PaletteOptions } from '../configurator.models';\n\ndeclare interface PaletteItem extends ComponentCreator {\n  type: string;\n  display?: string;\n  iconClass?: string;\n  title?: string;\n  removeable?: boolean;\n  createConfig: (id: string, creator?: ComponentCreator) => Observable;\n}\n\ndeclare interface ConfigModal {\n  configurator: TemplateNameDirective;\n  config: ComponentConfig;\n  configChanged: () => void;\n  title: string;\n  close: Subject;\n}\n\nexport const defaultPaletteOptions: PaletteOptions = {\n  enableSubcontainers: true,\n  enableRawHtml: true,\n  rawHtmlPlaceholder: \"Edit me\",\n  showStandardPalette: true,\n  showExistingPalette: true\n};\n\n@Component({\n  selector: 'uib-palette',\n  templateUrl: './palette.component.html',\n  styles: [\n    `\n.palette-item {\n  display: inline-block;\n  border: 1px solid grey;\n  padding: 0.25rem 0.5rem;\n  border-radius: 3px;\n  background: rgb(0,0,0,0.1);\n  cursor: pointer;\n  margin-right: 5px;\n  margin-bottom: 5px;\n}\n.palette-item .btn-close {\n  font-size: 0.7em;\n}\n.palette-item .grip {\n  position: relative;\n  top: -2px;\n  color: #7c7c7c;\n  margin-right: 3px;\n}\n  `\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PaletteComponent implements OnInit, OnChanges {\n  @Input() context: Configurable;\n  @Input() configurators: Record = {}; \n  @Input() options = defaultPaletteOptions;\n\n  standardPalette: PaletteItem[];\n  existingPalette: PaletteItem[];\n\n  modal?: ConfigModal;\n\n  constructor(\n    public dragDropService: DragDropService,\n    public configService: ConfigService,\n    public cdRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    // The palette of existing components is constructed from the complete configuration\n    this.configService.watchAllConfig()\n      .subscribe(configs => {\n        this.generateExistingPalette(configs)\n        this.cdRef.markForCheck();\n      });\n  }\n\n  ngOnChanges() {\n    // Initialize options with default, then custom\n    this.options = Object.assign({}, defaultPaletteOptions, this.options);\n    this.generateAutoPalette();\n    // The existing palette must be update when the standard palette changes\n    this.generateExistingPalette(this.configService.getAllConfig());\n  }\n\n  generateAutoPalette() {\n    this.standardPalette = [];\n    if(!this.options.showStandardPalette) {\n      return;\n    }\n    if (this.options.enableSubcontainers) {\n      this.standardPalette.push({\n        type: '_container',\n        display: $localize `Container`,\n        title: $localize `A component to arrange various sub-components`,\n        createConfig: (id: string) => of({ type: '_container', id, items: [] }),\n      });\n    }\n    if (this.options.enableRawHtml) {\n      this.standardPalette.push({\n        type: '_raw-html',\n        display: $localize `Raw HTML`,\n        title: $localize `A component to write HTML freely`,\n        createConfig: (id: string) => of({ type: '_raw-html', id, rawHtml: this.options.rawHtmlPlaceholder})\n      })\n    }\n    if (this.context.templates) {\n      Object.keys(this.context.templates).forEach((type) => {\n        let template = this.context.templates![type];\n        this.standardPalette.push({\n          type,\n          display: template.display || type,\n          iconClass: template.iconClass,\n          title: template.title,\n          createConfig: (id: string) => this.openModal(id, type, this.configurators[type]),\n        });\n      });\n    }\n  }\n\n  generateExistingPalette(configs: ComponentConfig[]) {    \n    if(!this.options.showExistingPalette) {\n      this.existingPalette = [];\n      return;\n    }\n    this.existingPalette = configs.filter(c =>\n      // Add any non-container config whose type is compatible with the standard palette\n      this.standardPalette\n        .find(p => p.type !== '_container' && p.type === c.type))\n        .map(c => ({\n          type: c.type,\n          display: c.id,\n          title: $localize `Type: ${this.context.templates?.[c.type]?.display || c.type}`,\n          removeable: !this.configService.isUsed(c.id),\n          createConfig: _ => of(c) // The config already exists\n        })\n    )\n  }\n\n  onDndStart(item: PaletteItem) {\n    this.dragDropService.draggedCreator = item;\n  }\n\n  onDndEnd() {\n    this.dragDropService.draggedCreator = undefined;\n  }\n\n  openModal(id: string, type: string, configurator?: TemplateNameDirective): Observable {\n    const config = {type, id};\n    if(configurator) {\n      this.modal = {\n        configurator,\n        config,\n        configChanged: () => {}, // do nothing when the configurator changes the config (before user presses 'OK')\n        title: $localize `Create new ${type} component`,\n        close: new Subject()\n      }\n      return this.modal.close;\n    }\n    return of(config);\n  }\n\n  onModalClose(success: boolean) {\n    if(this.modal?.close) {\n      this.modal.close.next(success? this.modal.config : undefined);\n      this.modal.close.complete();\n      this.modal = undefined;\n    }\n  }\n\n  removeItem(item: PaletteItem) {\n    console.log(\"remove\", item);\n    this.configService.removeConfig(item.display!); // The display is the component id\n  }\n}\n\n    \n\n    \n        \n\n  \n    New components\n    Create and configure a new component\n    \n      \n      \n    \n  \n\n  \n    Existing components\n    Insert a pre-configured conponent\n    \n      \n      \n        \n  \n\n\n\n  \n    \n    \n    {{item.display || item.type}}\n    \n    \n  \n\n\n\n\n  \n\n\n    \n\n    \n            \n.palette-item {\n  display: inline-block;\n  border: 1px solid grey;\n  padding: 0.25rem 0.5rem;\n  border-radius: 3px;\n  background: rgb(0,0,0,0.1);\n  cursor: pointer;\n  margin-right: 5px;\n  margin-bottom: 5px;\n}\n.palette-item .btn-close {\n  font-size: 0.7em;\n}\n.palette-item .grip {\n  position: relative;\n  top: -2px;\n  color: #7c7c7c;\n  margin-right: 3px;\n}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      New components    Create and configure a new component                            Existing components    Insert a pre-configured conponent                                        {{item.display || item.type}}            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'PaletteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaletteItem.html":{"url":"interfaces/PaletteItem.html","title":"interface - PaletteItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaletteItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configurator/palette/palette.component.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ComponentCreator\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            display\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iconClass\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            removeable\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createConfig:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconClass\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { Configurable } from '../../configurable/configurable.service';\nimport { ComponentConfig, ConfigService } from '../../configuration/config.service';\nimport { ComponentCreator, DragDropService } from '../../dynamic-views/drag-drop.service';\nimport { TemplateNameDirective } from '../../utils';\nimport { PaletteOptions } from '../configurator.models';\n\ndeclare interface PaletteItem extends ComponentCreator {\n  type: string;\n  display?: string;\n  iconClass?: string;\n  title?: string;\n  removeable?: boolean;\n  createConfig: (id: string, creator?: ComponentCreator) => Observable;\n}\n\ndeclare interface ConfigModal {\n  configurator: TemplateNameDirective;\n  config: ComponentConfig;\n  configChanged: () => void;\n  title: string;\n  close: Subject;\n}\n\nexport const defaultPaletteOptions: PaletteOptions = {\n  enableSubcontainers: true,\n  enableRawHtml: true,\n  rawHtmlPlaceholder: \"Edit me\",\n  showStandardPalette: true,\n  showExistingPalette: true\n};\n\n@Component({\n  selector: 'uib-palette',\n  templateUrl: './palette.component.html',\n  styles: [\n    `\n.palette-item {\n  display: inline-block;\n  border: 1px solid grey;\n  padding: 0.25rem 0.5rem;\n  border-radius: 3px;\n  background: rgb(0,0,0,0.1);\n  cursor: pointer;\n  margin-right: 5px;\n  margin-bottom: 5px;\n}\n.palette-item .btn-close {\n  font-size: 0.7em;\n}\n.palette-item .grip {\n  position: relative;\n  top: -2px;\n  color: #7c7c7c;\n  margin-right: 3px;\n}\n  `\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PaletteComponent implements OnInit, OnChanges {\n  @Input() context: Configurable;\n  @Input() configurators: Record = {}; \n  @Input() options = defaultPaletteOptions;\n\n  standardPalette: PaletteItem[];\n  existingPalette: PaletteItem[];\n\n  modal?: ConfigModal;\n\n  constructor(\n    public dragDropService: DragDropService,\n    public configService: ConfigService,\n    public cdRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    // The palette of existing components is constructed from the complete configuration\n    this.configService.watchAllConfig()\n      .subscribe(configs => {\n        this.generateExistingPalette(configs)\n        this.cdRef.markForCheck();\n      });\n  }\n\n  ngOnChanges() {\n    // Initialize options with default, then custom\n    this.options = Object.assign({}, defaultPaletteOptions, this.options);\n    this.generateAutoPalette();\n    // The existing palette must be update when the standard palette changes\n    this.generateExistingPalette(this.configService.getAllConfig());\n  }\n\n  generateAutoPalette() {\n    this.standardPalette = [];\n    if(!this.options.showStandardPalette) {\n      return;\n    }\n    if (this.options.enableSubcontainers) {\n      this.standardPalette.push({\n        type: '_container',\n        display: $localize `Container`,\n        title: $localize `A component to arrange various sub-components`,\n        createConfig: (id: string) => of({ type: '_container', id, items: [] }),\n      });\n    }\n    if (this.options.enableRawHtml) {\n      this.standardPalette.push({\n        type: '_raw-html',\n        display: $localize `Raw HTML`,\n        title: $localize `A component to write HTML freely`,\n        createConfig: (id: string) => of({ type: '_raw-html', id, rawHtml: this.options.rawHtmlPlaceholder})\n      })\n    }\n    if (this.context.templates) {\n      Object.keys(this.context.templates).forEach((type) => {\n        let template = this.context.templates![type];\n        this.standardPalette.push({\n          type,\n          display: template.display || type,\n          iconClass: template.iconClass,\n          title: template.title,\n          createConfig: (id: string) => this.openModal(id, type, this.configurators[type]),\n        });\n      });\n    }\n  }\n\n  generateExistingPalette(configs: ComponentConfig[]) {    \n    if(!this.options.showExistingPalette) {\n      this.existingPalette = [];\n      return;\n    }\n    this.existingPalette = configs.filter(c =>\n      // Add any non-container config whose type is compatible with the standard palette\n      this.standardPalette\n        .find(p => p.type !== '_container' && p.type === c.type))\n        .map(c => ({\n          type: c.type,\n          display: c.id,\n          title: $localize `Type: ${this.context.templates?.[c.type]?.display || c.type}`,\n          removeable: !this.configService.isUsed(c.id),\n          createConfig: _ => of(c) // The config already exists\n        })\n    )\n  }\n\n  onDndStart(item: PaletteItem) {\n    this.dragDropService.draggedCreator = item;\n  }\n\n  onDndEnd() {\n    this.dragDropService.draggedCreator = undefined;\n  }\n\n  openModal(id: string, type: string, configurator?: TemplateNameDirective): Observable {\n    const config = {type, id};\n    if(configurator) {\n      this.modal = {\n        configurator,\n        config,\n        configChanged: () => {}, // do nothing when the configurator changes the config (before user presses 'OK')\n        title: $localize `Create new ${type} component`,\n        close: new Subject()\n      }\n      return this.modal.close;\n    }\n    return of(config);\n  }\n\n  onModalClose(success: boolean) {\n    if(this.modal?.close) {\n      this.modal.close.next(success? this.modal.config : undefined);\n      this.modal.close.complete();\n      this.modal = undefined;\n    }\n  }\n\n  removeItem(item: PaletteItem) {\n    console.log(\"remove\", item);\n    this.configService.removeConfig(item.display!); // The display is the component id\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaletteOptions.html":{"url":"interfaces/PaletteOptions.html","title":"interface - PaletteOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaletteOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/configurator/configurator.models.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            enableRawHtml\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            enableSubcontainers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rawHtmlPlaceholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showExistingPalette\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showStandardPalette\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enableRawHtml\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enableRawHtml:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableSubcontainers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enableSubcontainers:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rawHtmlPlaceholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rawHtmlPlaceholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showExistingPalette\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showExistingPalette:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showStandardPalette\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showStandardPalette:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Configurable } from \"../configurable\";\nimport { ComponentConfig } from \"../configuration\";\nimport { TemplateNameDirective } from \"../utils\";\n\nexport interface ConfiguratorOptions {\n    paletteOptions?: PaletteOptions;\n    showFlexEditor?: boolean;\n    showHtmlEditor?: boolean;\n    showCssClasses?: boolean;\n    showConditionalDisplay?: boolean;\n    showRemove?: boolean;\n    showDuplicate?: boolean;\n}\n  \nexport interface PaletteOptions {\n    enableSubcontainers?: boolean;\n    enableRawHtml?: boolean;\n    rawHtmlPlaceholder?: string;\n    showStandardPalette?: boolean;\n    showExistingPalette?: boolean;\n}\n\nexport interface ConfiguratorContext {\n    /** Object storing the configuration of the component */\n    config: ComponentConfig;\n    /** Options of the configurators (may change depending on zone) */\n    options: ConfiguratorOptions;\n    /** Register of all the components configurators  */\n    configurators: Record;\n    /** Context of the zone of the edited component */\n    context: Configurable;\n    /** Callback that the configurator should call to update the configuration */\n    configChanged: () => void;\n};\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SVG_CONFIG.html":{"url":"interfaces/SVG_CONFIG.html","title":"interface - SVG_CONFIG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SVG_CONFIG\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/utils/svg-icon/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            defaultSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icons\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            missingIconFallback\n                                        \n                                \n                                \n                                        \n                                            sizes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultSize:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icons\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icons:         SvgIconType | SvgIconType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SvgIconType | SvgIconType[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        missingIconFallback\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        missingIconFallback:         SvgIconType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SvgIconType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sizes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sizes:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport interface SvgIconType {\n  name: string;\n  data: string;\n}\n\nexport interface SVG_CONFIG {\n  icons?: SvgIconType | SvgIconType[];\n  color?: string;\n  defaultSize?: keyof SVG_CONFIG['sizes'];\n  missingIconFallback?: SvgIconType;\n  sizes: {\n    xs?: string;\n    sm?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n    xxl?: string;\n  };\n}\n\nexport const SVG_ICONS_CONFIG = new InjectionToken('SVG_ICONS_CONFIG');\nexport const SVG_ICONS = new InjectionToken('SVG_ICONS');\nexport const SVG_MISSING_ICON_FALLBACK = new InjectionToken('SVG_MISSING_ICON_FALLBACK');\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SvgIcon.html":{"url":"classes/SvgIcon.html","title":"class - SvgIcon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SvgIcon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/utils/svg-icon/registry.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                content\n                            \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(content: string)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/utils/svg-icon/registry.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        content\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/svg-icon/registry.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        init\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/svg-icon/registry.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Injector } from '@angular/core';\n\nimport { SVG_CONFIG, SVG_ICONS_CONFIG, SvgIconType } from './types';\n\nclass SvgIcon {\n  init = false;\n\n  constructor(public content: string) {}\n}\n\n@Injectable({ providedIn: 'root' })\nexport class SvgIconRegistry {\n  private readonly svgMap = new Map();\n  private readonly document: Document;\n\n  constructor(injector: Injector, @Inject(SVG_ICONS_CONFIG) config: SVG_CONFIG) {\n    this.document = injector.get(DOCUMENT);\n\n    if (config.icons) {\n      this.register(config.icons);\n    }\n\n    if (config.missingIconFallback) {\n      this.register(config.missingIconFallback);\n    }\n  }\n\n  getAll() {\n    return this.svgMap;\n  }\n\n  get(key: string | undefined): string | undefined {\n    const icon = key && this.svgMap.get(key);\n\n    if (!icon) {\n      return undefined;\n    }\n\n    if (!icon.init) {\n      const svg = this.toElement(icon.content);\n      svg.setAttribute('fit', '');\n      svg.setAttribute('height', '100%');\n      svg.setAttribute('width', '100%');\n      svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n      svg.setAttribute('focusable', 'false');\n\n      icon.content = svg.outerHTML;\n      icon.init = true;\n    }\n\n    return icon.content;\n  }\n\n  register(icons: SvgIconType | SvgIconType[]) {\n    for (const { name, data } of Array.isArray(icons) ? icons : [icons]) {\n      if (!this.svgMap.has(name)) {\n        this.svgMap.set(name, new SvgIcon(data));\n      }\n    }\n  }\n\n  getSvgElement(name: string): SVGSVGElement | undefined {\n    const content = this.get(name);\n\n    if (!content) {\n      return undefined;\n    }\n\n    const div = this.document.createElement('div');\n    div.innerHTML = content;\n\n    return div.querySelector('svg') as SVGSVGElement;\n  }\n\n  private toElement(content: string): SVGElement {\n    const div = this.document.createElement('div');\n    div.innerHTML = content;\n\n    return div.querySelector('svg') as SVGElement;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SvgIconComponent.html":{"url":"components/SvgIconComponent.html","title":"component - SvgIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SvgIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/utils/svg-icon/svg-icon.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n            \n                host\n                {}\n            \n\n\n\n\n\n\n            \n                selector\n                svg-icon\n            \n\n\n            \n                styles\n                \n      :host {\n        display: inline-block;\n        fill: currentColor;\n        font-size: 1rem;\n        \n        transform: rotate(var(--rotate, 0deg));\n        transition: transform 0.2s ease-in-out;\n      }\n    \n            \n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lastKey\n                            \n                            \n                                    Private\n                                mergedConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                fontSize\n                            \n                            \n                                height\n                            \n                            \n                                key\n                            \n                            \n                                size\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    key\n                                \n                                \n                                    size\n                                \n                                \n                                    width\n                                \n                                \n                                    height\n                                \n                                \n                                    fontSize\n                                \n                                \n                                    color\n                                \n                                \n                                    element\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(host: ElementRef, registry: SvgIconRegistry, config: SVG_CONFIG)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        registry\n                                                  \n                                                        \n                                                                        SvgIconRegistry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        SVG_CONFIG\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fontSize\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        key\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:46\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    createConfig()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mergedConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SVG_CONFIG\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:64\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        key\n                    \n                \n\n\n                \n                    \n                        setkey(name: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:29\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n\n\n                \n                    \n                        setsize(value)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:42\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n\n                \n                    \n                        setwidth(value: number | string)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:46\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        number | string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n\n\n                \n                    \n                        setheight(value: number | string)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:50\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        number | string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        fontSize\n                    \n                \n\n\n                \n                    \n                        setfontSize(value: number | string)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:55\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        number | string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n\n\n                \n                    \n                        setcolor(color: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:60\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            color\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n\n                \n                    \n                        getelement()\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/utils/svg-icon/svg-icon.component.ts:76\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ElementRef, Inject, Input } from '@angular/core';\n\nimport { SvgIconRegistry } from './registry';\nimport { SVG_CONFIG, SVG_ICONS_CONFIG } from './types';\n\n@Component({\n  selector: 'svg-icon',\n  template: '',\n  host: {\n    role: 'img',\n    'aria-hidden': 'true',\n  },\n  styles: [\n    `\n      :host {\n        display: inline-block;\n        fill: currentColor;\n        font-size: 1rem;\n        \n        transform: rotate(var(--rotate, 0deg));\n        transition: transform 0.2s ease-in-out;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SvgIconComponent {\n  @Input()\n  set key(name: string) {\n    const icon = this.registry.get(name) ?? this.registry.get(this.config.missingIconFallback?.name);\n\n    if (icon) {\n      this.element.setAttribute('aria-label', `${name}-icon`);\n      this.element.classList.remove(`svg-icon-${this.lastKey}`);\n      this.lastKey = name;\n      this.element.classList.add(`svg-icon-${name}`);\n      this.element.innerHTML = icon;\n    }\n  }\n\n  @Input()\n  set size(value: keyof SVG_CONFIG['sizes']) {\n    this.element.style.fontSize = this.mergedConfig.sizes[value];\n  }\n\n  @Input() set width(value: number | string) {\n    this.element.style.width = coerceCssPixelValue(value);\n  }\n\n  @Input() set height(value: number | string) {\n    this.element.style.height = coerceCssPixelValue(value);\n  }\n\n  @Input()\n  set fontSize(value: number | string) {\n    this.element.style.fontSize = coerceCssPixelValue(value);\n  }\n\n  @Input()\n  set color(color: string) {\n    this.element.style.color = color;\n  }\n\n  private mergedConfig: SVG_CONFIG;\n  private lastKey!: string;\n\n  constructor(\n    private host: ElementRef,\n    private registry: SvgIconRegistry,\n    @Inject(SVG_ICONS_CONFIG) private config: SVG_CONFIG\n  ) {\n    this.mergedConfig = this.createConfig();\n    this.element.style.fontSize = this.mergedConfig.sizes[this.mergedConfig.defaultSize || 'md'];\n  }\n\n  get element() {\n    return this.host.nativeElement;\n  }\n\n  private createConfig() {\n    const defaults: SVG_CONFIG = {\n      sizes: {\n        xs: '0.5rem',\n        sm: '0.75rem',\n        md: '1rem',\n        lg: '1.5rem',\n        xl: '2rem',\n        xxl: '2.5rem',\n      },\n    };\n\n    return {\n      ...defaults,\n      ...this.config,\n    };\n  }\n}\n\nfunction coerceCssPixelValue(value: any): string {\n  if (value == null) {\n    return '';\n  }\n\n  return typeof value === 'string' ? value : `${value}px`;\n}\n\n    \n\n\n    \n            \n      :host {\n        display: inline-block;\n        fill: currentColor;\n        font-size: 1rem;\n        \n        transform: rotate(var(--rotate, 0deg));\n        transition: transform 0.2s ease-in-out;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'SvgIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SvgIconRegistry.html":{"url":"injectables/SvgIconRegistry.html","title":"injectable - SvgIconRegistry","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SvgIconRegistry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/utils/svg-icon/registry.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                document\n                            \n                            \n                                    Private\n                                    Readonly\n                                svgMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                            \n                                getSvgElement\n                            \n                            \n                                register\n                            \n                            \n                                    Private\n                                toElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector, config: SVG_CONFIG)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/utils/svg-icon/registry.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        SVG_CONFIG\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/svg-icon/registry.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/svg-icon/registry.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSvgElement\n                        \n                    \n                \n            \n            \n                \ngetSvgElement(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/svg-icon/registry.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SVGSVGElement | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(icons: SvgIconType | SvgIconType[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/svg-icon/registry.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icons\n                                    \n                                                SvgIconType | SvgIconType[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        toElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    toElement(content: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/svg-icon/registry.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SVGElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Document\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/svg-icon/registry.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        svgMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/svg-icon/registry.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Injector } from '@angular/core';\n\nimport { SVG_CONFIG, SVG_ICONS_CONFIG, SvgIconType } from './types';\n\nclass SvgIcon {\n  init = false;\n\n  constructor(public content: string) {}\n}\n\n@Injectable({ providedIn: 'root' })\nexport class SvgIconRegistry {\n  private readonly svgMap = new Map();\n  private readonly document: Document;\n\n  constructor(injector: Injector, @Inject(SVG_ICONS_CONFIG) config: SVG_CONFIG) {\n    this.document = injector.get(DOCUMENT);\n\n    if (config.icons) {\n      this.register(config.icons);\n    }\n\n    if (config.missingIconFallback) {\n      this.register(config.missingIconFallback);\n    }\n  }\n\n  getAll() {\n    return this.svgMap;\n  }\n\n  get(key: string | undefined): string | undefined {\n    const icon = key && this.svgMap.get(key);\n\n    if (!icon) {\n      return undefined;\n    }\n\n    if (!icon.init) {\n      const svg = this.toElement(icon.content);\n      svg.setAttribute('fit', '');\n      svg.setAttribute('height', '100%');\n      svg.setAttribute('width', '100%');\n      svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n      svg.setAttribute('focusable', 'false');\n\n      icon.content = svg.outerHTML;\n      icon.init = true;\n    }\n\n    return icon.content;\n  }\n\n  register(icons: SvgIconType | SvgIconType[]) {\n    for (const { name, data } of Array.isArray(icons) ? icons : [icons]) {\n      if (!this.svgMap.has(name)) {\n        this.svgMap.set(name, new SvgIcon(data));\n      }\n    }\n  }\n\n  getSvgElement(name: string): SVGSVGElement | undefined {\n    const content = this.get(name);\n\n    if (!content) {\n      return undefined;\n    }\n\n    const div = this.document.createElement('div');\n    div.innerHTML = content;\n\n    return div.querySelector('svg') as SVGSVGElement;\n  }\n\n  private toElement(content: string): SVGElement {\n    const div = this.document.createElement('div');\n    div.innerHTML = content;\n\n    return div.querySelector('svg') as SVGElement;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SvgIconType.html":{"url":"interfaces/SvgIconType.html","title":"interface - SvgIconType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SvgIconType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/utils/svg-icon/types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport interface SvgIconType {\n  name: string;\n  data: string;\n}\n\nexport interface SVG_CONFIG {\n  icons?: SvgIconType | SvgIconType[];\n  color?: string;\n  defaultSize?: keyof SVG_CONFIG['sizes'];\n  missingIconFallback?: SvgIconType;\n  sizes: {\n    xs?: string;\n    sm?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n    xxl?: string;\n  };\n}\n\nexport const SVG_ICONS_CONFIG = new InjectionToken('SVG_ICONS_CONFIG');\nexport const SVG_ICONS = new InjectionToken('SVG_ICONS');\nexport const SVG_MISSING_ICON_FALLBACK = new InjectionToken('SVG_MISSING_ICON_FALLBACK');\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SvgIconsModule.html":{"url":"modules/SvgIconsModule.html","title":"module - SvgIconsModule","body":"\n                   \n\n\n\n\n    Modules\n    SvgIconsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SvgIconsModule\n\n\n\ncluster_SvgIconsModule_declarations\n\n\n\ncluster_SvgIconsModule_exports\n\n\n\n\nSvgIconComponent\n\nSvgIconComponent\n\n\n\nSvgIconsModule\n\nSvgIconsModule\n\nSvgIconsModule -->\n\nSvgIconComponent->SvgIconsModule\n\n\n\n\n\nSvgIconComponent \n\nSvgIconComponent \n\nSvgIconComponent  -->\n\nSvgIconsModule->SvgIconComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/lib/src/utils/svg-icon/svg-icon.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SvgIconComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SvgIconComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forChild\n                        \n                    \n                \n            \n            \n                \n                    \n                    forChild(icons: SvgIconType | SvgIconType[])\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/svg-icon/svg-icon.module.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    icons\n                                    \n                                                SvgIconType | SvgIconType[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: Partial)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/svg-icon/svg-icon.module.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Inject, ModuleWithProviders, NgModule, Optional, Self } from '@angular/core';\n\nimport { SvgIconRegistry } from './registry';\nimport { SvgIconComponent } from './svg-icon.component';\nimport { SVG_CONFIG, SVG_ICONS, SVG_ICONS_CONFIG, SVG_MISSING_ICON_FALLBACK, SvgIconType } from './types';\n\n@NgModule({\n  declarations: [SvgIconComponent],\n  exports: [SvgIconComponent],\n})\nexport class SvgIconsModule {\n  static forRoot(config: Partial = {}): ModuleWithProviders {\n    return {\n      ngModule: SvgIconsModule,\n      providers: [\n        {\n          provide: SVG_ICONS_CONFIG,\n          useValue: config,\n        },\n      ],\n    };\n  }\n\n  static forChild(icons: SvgIconType | SvgIconType[]): ModuleWithProviders {\n    return {\n      ngModule: SvgIconsModule,\n      providers: [{ provide: SVG_ICONS, useValue: icons, multi: true }],\n    };\n  }\n\n  constructor(\n    @Optional() @Self() @Inject(SVG_ICONS) icons: SvgIconType[] | SvgIconType[][],\n    @Optional() @Inject(SVG_MISSING_ICON_FALLBACK) missingIconFallback: SvgIconType,\n    private service: SvgIconRegistry\n  ) {\n    if (icons) {\n      this.service.register(([] as SvgIconType[]).concat(...icons));\n    }\n\n    if (missingIconFallback) {\n      this.service.register(missingIconFallback);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TemplateNameDirective.html":{"url":"directives/TemplateNameDirective.html","title":"directive - TemplateNameDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  TemplateNameDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/utils/template-name.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uib-template]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                template\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                            \n                                iconClass\n                            \n                            \n                                title\n                            \n                            \n                                uib-template\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/utils/template-name.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        display\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/template-name.directive.ts:8\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/template-name.directive.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/template-name.directive.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uib-template\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/template-name.directive.ts:7\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/template-name.directive.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[uib-template]',\n})\nexport class TemplateNameDirective {\n  @Input('uib-template') templateName: string;\n  @Input() display?: string;\n  @Input() iconClass?: string;\n  @Input() title?: string;\n\n  constructor(public readonly template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/utils/toast/toast.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-toast\n            \n\n\n\n\n            \n                templateUrl\n                ./toast.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                el\n                            \n                            \n                                message\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                toast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/utils/toast/toast.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     Toast.Options\n\n                    \n                \n                \n                    \n                        Default value : {animation: true, autohide: true, delay: 5000}\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/toast/toast.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/toast/toast.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/toast/toast.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('toastRef', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/toast/toast.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/toast/toast.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/toast/toast.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Toast\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/toast/toast.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, Input, OnDestroy, ViewChild } from '@angular/core';\nimport { Toast } from 'bootstrap';\nimport { Subscription } from 'rxjs';\nimport { ToastService } from './toast.service';\n\n@Component({\n  selector: 'uib-toast',\n  templateUrl: './toast.component.html',\n})\nexport class ToastComponent implements OnDestroy, AfterViewInit {\n  @ViewChild('toastRef', {static: true}) el: ElementRef\n  \n  @Input() options: Toast.Options =  {animation: true, autohide: true, delay: 5000};\n  \n  toast: Toast;\n  message: string;\n  \n  private sub: Subscription;\n\n  constructor(private toastService: ToastService) {\n  }\n  \n  ngAfterViewInit(): void {\n    this.sub = this.toastService.onToastMessage.subscribe((message: string) => {\n      this.message = message;\n      if (this.el) {\n        this.toast = Toast.getOrCreateInstance(this.el.nativeElement, this.options);\n        this.toast.show();\n      } else {\n        console.warn('Toast not found!');\n      }\n    });    \n  }\n  \n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ message }}\n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ message }}          '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/utils/toast/toast.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onToastMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                info\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/utils/toast/toast.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(message: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/toast/toast.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        onToastMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/toast/toast.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class ToastService {\n  \n  onToastMessage = new Subject();\n  \n  constructor() {}\n  \n  info(message:string) { this.onToastMessage.next(message) }\n  \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/configurator/toolbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-toolbar\n            \n\n\n            \n                styles\n                \n    .uib-toolbar .btn.disabled {\n      /* allow tooltip on disabled buttons */\n      pointer-events: visible;\n      /* but display a simple arrow cursor */\n      cursor: default;\n    }\n\n    .uib-toolbar .btn svg-icon {\n      display: flex;\n      align-items: center;\n      width: 22px;\n      height: 25px;\n    }\n    .uib-toolbar-anim {\n      transition: ease .3s;\n    }\n    \n            \n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                configService\n                            \n                            \n                                    Public\n                                configurableService\n                            \n                            \n                                template\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toggleEditor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, configurableService: ConfigurableService)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/configurator/toolbar.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configurableService\n                                                  \n                                                        \n                                                                        ConfigurableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEditor\n                        \n                    \n                \n            \n            \n                \ntoggleEditor()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/toolbar.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/toolbar.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configurableService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigurableService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/toolbar.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChild(TemplateRef, {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/toolbar.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ContentChild, TemplateRef } from \"@angular/core\";\nimport { ConfigurableService } from \"../configurable\";\nimport { ConfigService } from \"../configuration\";\n\n@Component({\n  selector: 'uib-toolbar',\n  templateUrl: './toolbar.component.html',\n  styles: [\n    `\n    .uib-toolbar .btn.disabled {\n      /* allow tooltip on disabled buttons */\n      pointer-events: visible;\n      /* but display a simple arrow cursor */\n      cursor: default;\n    }\n\n    .uib-toolbar .btn svg-icon {\n      display: flex;\n      align-items: center;\n      width: 22px;\n      height: 25px;\n    }\n    .uib-toolbar-anim {\n      transition: ease .3s;\n    }\n    `\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToolbarComponent {\n  @ContentChild(TemplateRef, {static: false}) template: TemplateRef;\n  \n  constructor(\n    public configService: ConfigService,\n    public configurableService: ConfigurableService\n  ) {}\n  \n  toggleEditor() {\n    this.configurableService.toggleEditor();\n  }\n\n}\n    \n\n    \n        \n  \n    \n    \n      \n    \n    \n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n            \n    .uib-toolbar .btn.disabled {\n      /* allow tooltip on disabled buttons */\n      pointer-events: visible;\n      /* but display a simple arrow cursor */\n      cursor: default;\n    }\n\n    .uib-toolbar .btn svg-icon {\n      display: flex;\n      align-items: center;\n      width: 22px;\n      height: 25px;\n    }\n    .uib-toolbar-anim {\n      transition: ease .3s;\n    }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TooltipDirective.html":{"url":"directives/TooltipDirective.html","title":"directive - TooltipDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  TooltipDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/utils/tooltip.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            OnChanges\n                            OnDestroy\n                            AfterContentInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [uib-tooltip]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                    Optional\n                                tooltip\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                setTooltip\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                container\n                            \n                            \n                                disabled\n                            \n                            \n                                placement\n                            \n                            \n                                uib-tooltip\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/utils/tooltip.directive.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     Partial>\n\n                    \n                \n                \n                    \n                        Default value : {\n    html: true,\n    sanitize: false,\n    delay: 300,\n    trigger: 'hover'\n  }\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/tooltip.directive.ts:17\n                            \n                        \n                \n                    \n                        Allow Bootstrap tooltip's options configuration\n\ntitle, placement and container options are removed from Bootstrap options as they use their own inputs.\nhtml, sanitize, delay and trigger options are sets with different values as well by default but can\nbe overriden here.\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        container\n                    \n                \n                \n                    \n                        Type :     string | Element\n\n                    \n                \n                \n                    \n                        Default value : \"uib-toolbar\"\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/tooltip.directive.ts:35\n                            \n                        \n                \n                    \n                        Append the tooltip to a specific element.\nBy default, tooltip is append to uib-toolbar component.\nWhen undefined, tooltip is append to his host element.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/tooltip.directive.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placement\n                    \n                \n                \n                    \n                        Type :     \"auto\" | \"top\" | \"bottom\" | \"left\" | \"right\"\n\n                    \n                \n                \n                    \n                        Default value : 'auto'\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/tooltip.directive.ts:27\n                            \n                        \n                \n                    \n                        How to position the tooltip.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        uib-tooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/utils/tooltip.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/tooltip.directive.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/tooltip.directive.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/tooltip.directive.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTooltip\n                        \n                    \n                \n            \n            \n                \nsetTooltip()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/utils/tooltip.directive.ts:62\n                \n            \n\n\n            \n                \n                    \nIf the html property is set, create a tooltip with the Tooltip.getOrCreateInstance method\n\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/tooltip.directive.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        tooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Tooltip\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/utils/tooltip.directive.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { AfterContentInit, Directive, ElementRef, HostBinding, Input, OnChanges, OnDestroy } from \"@angular/core\";\nimport { Tooltip } from \"bootstrap\";\n\n@Directive({\n  selector: '[uib-tooltip]'\n})\nexport class TooltipDirective implements OnChanges, OnDestroy, AfterContentInit {\n  @Input('uib-tooltip') html: string;\n  \n  /**\n   * Allow Bootstrap tooltip's options configuration\n   * \n   * * `title`, `placement` and `container` options are removed from Bootstrap options as they use their own inputs.\n   * * `html`, `sanitize`, `delay` and `trigger` options are sets with different values as well by default but can\n   * be overriden here.\n   */\n  @Input() config?: Partial> = {\n    html: true,\n    sanitize: false,\n    delay: 300,\n    trigger: 'hover'\n  };\n  \n  /**\n   * How to position the tooltip.\n   */\n  @Input() placement: 'auto' | 'top' | 'bottom' | 'left' | 'right' = 'auto';\n  \n  /**\n   * Append the tooltip to a specific element.\n   * \n   * By default, tooltip is append to `uib-toolbar` component.\n   * When `undefined`, tooltip is append to his host element.\n   */\n  @Input() container?: string | Element = \"uib-toolbar\";\n\n  tooltip?: Tooltip;\n    \n  // @Input() it's used to trigger the changes detection cycle for the directive\n  @HostBinding('disabled')\n  @Input() disabled: boolean;\n\n  constructor(public el: ElementRef){}\n\n  ngOnChanges() {\n    // when element is disabled, remove tooltip otherwise it will be shown/created when enabled\n    this.tooltip?.dispose();\n    this.setTooltip();\n  }\n  \n  ngAfterContentInit(): void {\n    this.setTooltip();\n  }\n\n  ngOnDestroy() {\n    this.tooltip?.dispose();\n  }\n  \n  /**\n   * * If the `html` property is set, create a tooltip with the `Tooltip.getOrCreateInstance` method\n   */\n  setTooltip() {\n    if (this.html) {\n      // tooltip trigger by default is now 'hover' instead of 'hover focus'\n      // this, prevents tooltip display on component focused\n      this.tooltip = Tooltip.getOrCreateInstance(this.el.nativeElement, {\n        ...this.config,\n        placement: this.placement,\n        title: this.html,\n        container: this.container || this.el.nativeElement,\n      });\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeComponent.html":{"url":"components/TreeComponent.html","title":"component - TreeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TreeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/configurator/tree/tree.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-tree\n            \n\n            \n                styleUrls\n                tree.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tree.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configurationMap\n                            \n                            \n                                root\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                hover\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                configuration\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configurableService: ConfigurableService)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/configurator/tree/tree.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configurableService\n                                                  \n                                                        \n                                                                        ConfigurableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        configuration\n                    \n                \n                \n                    \n                        Type :         ComponentConfig[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/configurator/tree/tree.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        children\n                        \n                    \n                \n            \n            \n                \nchildren(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/tree/tree.component.ts:45\n                \n            \n\n\n            \n                \n                    Given an id, return all the children of that id.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nstring - The id of the component.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Partial[]\n\n                    \n                    \n                        The children of the component with the given id.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hover\n                        \n                    \n                \n            \n            \n                \nhover(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/tree/tree.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/tree/tree.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        select\n                        \n                    \n                \n            \n            \n                \nselect(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/configurator/tree/tree.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        configurationMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/tree/tree.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Partial[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/configurator/tree/tree.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport {ConfigurableService} from '../../configurable';\nimport { ComponentConfig } from '../../configuration';\n\n@Component({\n  selector: 'uib-tree',\n  templateUrl: './tree.component.html',\n  styleUrls: ['tree.component.css'],\n})\nexport class TreeComponent implements OnChanges {\n  @Input() configuration: ComponentConfig[];\n  \n  root: Partial[];\n  \n  private configurationMap: Map>;\n  \n  constructor(private configurableService: ConfigurableService) {}\n  \n  ngOnChanges(changes: SimpleChanges) {\n    // set our Map object,\n    this.configurationMap = new Map();\n    this.configuration.forEach((el) => this.configurationMap.set(el.id, el));\n\n    // set children parent_id and order\n    this.configuration\n      .filter((parent) => parent.items && parent.items.length > 0)\n      .forEach((parent) =>\n        parent.items.forEach((id: string, index: number) => {\n          // a child could have multiple parents\n          // get child's parents\n          const {parents = [], orders = {}} = this.configurationMap.get(id) || {};\n          this.configurationMap.set(id, {...this.configurationMap.get(id), id: id, parents: [...parents, parent.id], orders: {...orders, [parent.id]: index }} )\n        })\n    );\n\n    // items without parent_id (root level)\n    this.root = [...this.configurationMap.values()].filter((el) => el.parents === undefined);\n  }\n\n  /**\n   * Given an id, return all the children of that id.\n   * @param {string} id - string - The id of the component.\n   * @returns The children of the component with the given id.\n   */\n  children(id: string): Partial[] {\n    return [...this.configurationMap.values()].filter((el) => el.parents ? el.parents.includes(id) : false).sort((a, b) => a.orders[id] - b.orders[id]);\n  }\n  \n  select(id: string) {\n    const el = this.configurableService.configurableDirectiveMap.get(id);\n    el?.click(new MouseEvent(\"click\"));\n    el?.nativeElement.scrollIntoView({behavior: 'smooth', inline: 'nearest', block: 'center'});\n  }\n  \n  hover(id: string) {\n    const hoveredId = this.configurableService.hoveredId;\n    if (hoveredId) {\n      const prev = this.configurableService.configurableDirectiveMap.get(hoveredId);\n      prev?.removeHighlight();\n    }\n    \n    this.configurableService.hoveredId = id;\n    const el = this.configurableService.configurableDirectiveMap.get(id);\n    el?.addHighlight();\n    \n    el?.nativeElement.scrollIntoView({behavior: 'smooth', inline: 'nearest', block: 'center'});\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n  \n    \n      \n    \n  \n\n\n\n  {{ id }}\n\n\n\n  \n  \n  {{ id }}\n  \n\n    \n\n    \n                \n                    tree.component.css\n                \n                .tree,\n.section ul {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.tree li {\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: flex-start;\n  \n  list-style-type: none;\n  margin: 10px;\n  position: relative;\n  width: 100%;\n}\n\n.tree li:not(.section) {\n  max-width: max-content;\n}\n\n\n.tree li::before {\n  content: \"\";\n  position: absolute;\n  top: -9px;\n  left: -20px;\n  border-left: 1px solid #ccc;\n  border-bottom: 1px solid #ccc;\n  border-radius: 0 0 0 0px;\n  width: 20px;\n  height: 22px;\n}\n\n.tree li::after {\n  position: absolute;\n  content: \"\";\n  top: 12px;\n  left: -20px;\n  border-left: 1px solid #ccc;\n  border-top: 1px solid #ccc;\n  border-radius: 0px 0 0 0;\n  width: 20px;\n  height: 100%;\n}\n\n.tree li:last-child::after {\n  display: none;\n}\n\n.tree li:last-child:before {\n  border-radius: 0 0 0 5px;\n}\n\nul.tree > li:first-child::before {\n  display: none;\n}\n\nul.tree > li:first-child::after {\n  border-radius: 5px 0 0 0;\n}\n\n.tree li a {\n  border: 1px #ccc solid;\n  border-radius: 5px;\n  padding: 2px 5px;\n  text-decoration: none;\n}\n\n.tree li a:hover,\n.tree li a:hover + ul li a,\n.tree li a:focus,\n.tree li a:focus + ul li a {\n  background: #ccc;\n  color: #000;\n  border: 1px solid #000;\n  cursor: pointer;\n}\n\n.tree li a:hover + ul li::after,\n.tree li a:focus + ul li::after,\n.tree li a:hover + ul li::before,\n.tree li a:focus + ul li::before .tree li a:hover + ul::before,\n.tree li a:focus + ul::before .tree li a:hover + ul ul::before,\n.tree li a:focus + ul ul::before {\n  border-color: #000; /*connector color on hover*/\n}\n\n.section ul {\n  transition: opacity 0.3s linear;\n  height: 0;\n  transform: translate(9999px);\n  opacity: 0;\n}\n.section input:checked ~ ul {\n  transform: translate(0);\n  opacity: 1;\n  height: auto;\n}\n\n.section input[type=\"checkbox\"] {\n  display: none;\n}\n\n.section {\n  position: relative;\n  padding-left: 35px;\n}\n\n.section label + a {\n  margin-left: -35px;\n  padding-left: 22px;\n  text-decoration: none;\n  color: #000;\n}\n\n.section label:before {\n  content: url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='rgba%280,0,0,.5%29' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 14l6-6-6-6'/%3e%3c/svg%3e\");\n  position: absolute;\n  top: 4px;\n  left: 2px;\n  text-align: center;\n  color: black;\n  display: inline-block;\n  transition: transform 0.5s;\n  z-index: 1;\n  user-select: none;\n  cursor: pointer;\n}\n\n.section input:checked ~ label:before {\n  transform: rotate(90deg);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{ id }}      {{ id }}  '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'TreeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UIBuilderIcon.html":{"url":"interfaces/UIBuilderIcon.html","title":"interface - UIBuilderIcon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UIBuilderIcon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/svg/svg-icons.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         myIcons\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         myIcons\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const UIBuilderIconAlignXCenter: UIBuilderIcon = {\n  name: 'align_x_center',\n  data: ``\n};\nexport const UIBuilderIconAlignXEnd: UIBuilderIcon = {\n  name: 'align_x_end',\n  data: ``\n};\nexport const UIBuilderIconAlignXSpaceAround: UIBuilderIcon = {\n  name: 'align_x_space_around',\n  data: ``\n};\nexport const UIBuilderIconAlignXSpaceBetween: UIBuilderIcon = {\n  name: 'align_x_space_between',\n  data: ``\n};\nexport const UIBuilderIconAlignXStart: UIBuilderIcon = {\n  name: 'align_x_start',\n  data: ``\n};\nexport const UIBuilderIconAlignXStretch: UIBuilderIcon = {\n  name: 'align_x_stretch',\n  data: ``\n};\nexport const UIBuilderIconAlignYBaseline: UIBuilderIcon = {\n  name: 'align_y_baseline',\n  data: ``\n};\nexport const UIBuilderIconAlignYCenter: UIBuilderIcon = {\n  name: 'align_y_center',\n  data: ``\n};\nexport const UIBuilderIconAlignYEnd: UIBuilderIcon = {\n  name: 'align_y_end',\n  data: ``\n};\nexport const UIBuilderIconAlignYStart: UIBuilderIcon = {\n  name: 'align_y_start',\n  data: ``\n};\nexport const UIBuilderIconAlignYStretch: UIBuilderIcon = {\n  name: 'align_y_stretch',\n  data: ``\n};\nexport const UIBuilderIconArrowDown: UIBuilderIcon = {\n  name: 'arrow_down',\n  data: ``\n};\nexport const UIBuilderIconArrowForward: UIBuilderIcon = {\n  name: 'arrow_forward',\n  data: ``\n};\nexport const UIBuilderIconTree: UIBuilderIcon = {\n  name: 'tree',\n  data: ``\n}\nexport const UIBuilderIconUndo: UIBuilderIcon = {\n  name: 'undo',\n  data: ``\n}\nexport const UIBuilderIconRedo: UIBuilderIcon = {\n  name: 'redo',\n  data: ``\n}\nexport const UIBuilderIconTrash: UIBuilderIcon = {\n  name: 'trash',\n  data: ``\n}\nexport const UIBuilderIconGrip: UIBuilderIcon = {\n  name: 'grip',\n  data: ``\n}\nexport const UIBuilderIconEye: UIBuilderIcon = {\n  name: 'eye',\n  data: ``\n}\nexport const UIBuilderIconEyeSlash: UIBuilderIcon = {\n  name: 'eye_slash',\n  data: ``\n}\nexport type myIcons =\n  | 'align_x_center'\n  | 'align_x_end'\n  | 'align_x_space_around'\n  | 'align_x_space_between'\n  | 'align_x_start'\n  | 'align_x_stretch'\n  | 'align_y_baseline'\n  | 'align_y_center'\n  | 'align_y_end'\n  | 'align_y_start'\n  | 'align_y_stretch'\n  | 'arrow_down'\n  | 'arrow_forward'\n  | 'tree'\n  | 'undo'\n  | 'redo'\n  | 'trash'\n  | 'grip'\n  | 'eye'\n  | 'eye_slash'\nexport interface UIBuilderIcon {\n  name: myIcons;\n  data: string;\n}\nexport type UIBuilderIconNameSubset\n> = T[number]['name'];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilsModule.html":{"url":"modules/UtilsModule.html","title":"module - UtilsModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UtilsModule\n\n\n\ncluster_UtilsModule_declarations\n\n\n\ncluster_UtilsModule_exports\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\n\n\nUtilsModule\n\nUtilsModule\n\nUtilsModule -->\n\nAutocompleteComponent->UtilsModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nUtilsModule -->\n\nModalComponent->UtilsModule\n\n\n\n\n\nNgModelChangeDebouncedDirective\n\nNgModelChangeDebouncedDirective\n\nUtilsModule -->\n\nNgModelChangeDebouncedDirective->UtilsModule\n\n\n\n\n\nTemplateNameDirective\n\nTemplateNameDirective\n\nUtilsModule -->\n\nTemplateNameDirective->UtilsModule\n\n\n\n\n\nToastComponent\n\nToastComponent\n\nUtilsModule -->\n\nToastComponent->UtilsModule\n\n\n\n\n\nTooltipDirective\n\nTooltipDirective\n\nUtilsModule -->\n\nTooltipDirective->UtilsModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nUtilsModule->AutocompleteComponent \n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nUtilsModule->ModalComponent \n\n\n\n\n\nNgModelChangeDebouncedDirective \n\nNgModelChangeDebouncedDirective \n\nNgModelChangeDebouncedDirective  -->\n\nUtilsModule->NgModelChangeDebouncedDirective \n\n\n\n\n\nTemplateNameDirective \n\nTemplateNameDirective \n\nTemplateNameDirective  -->\n\nUtilsModule->TemplateNameDirective \n\n\n\n\n\nToastComponent \n\nToastComponent \n\nToastComponent  -->\n\nUtilsModule->ToastComponent \n\n\n\n\n\nTooltipDirective \n\nTooltipDirective \n\nTooltipDirective  -->\n\nUtilsModule->TooltipDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/lib/src/utils/utils.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            ModalComponent\n                        \n                        \n                            NgModelChangeDebouncedDirective\n                        \n                        \n                            TemplateNameDirective\n                        \n                        \n                            ToastComponent\n                        \n                        \n                            TooltipDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AutocompleteComponent\n                        \n                        \n                            ModalComponent\n                        \n                        \n                            NgModelChangeDebouncedDirective\n                        \n                        \n                            TemplateNameDirective\n                        \n                        \n                            ToastComponent\n                        \n                        \n                            TooltipDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TooltipDirective } from './tooltip.directive';\nimport { ModalComponent } from './modal.component';\nimport { TemplateNameDirective } from './template-name.directive';\nimport { AutocompleteComponent } from './autocomplete.component';\nimport { NgModelChangeDebouncedDirective } from './model-change.directive';\nimport { ToastComponent } from './toast/toast.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    ModalComponent,\n    TemplateNameDirective,\n    TooltipDirective,\n    NgModelChangeDebouncedDirective,\n    ToastComponent,\n    AutocompleteComponent\n  ],\n  exports: [\n    ModalComponent,\n    TemplateNameDirective,\n    TooltipDirective,\n    NgModelChangeDebouncedDirective,\n    ToastComponent,\n    AutocompleteComponent\n  ],\n})\nexport class UtilsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ZoneComponent.html":{"url":"components/ZoneComponent.html","title":"component - ZoneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ZoneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/lib/src/dynamic-views/zone.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                uib-zone\n            \n\n\n\n\n            \n                templateUrl\n                ./zone.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                children\n                            \n                            \n                                    Public\n                                configService\n                            \n                            \n                                    Public\n                                configurableService\n                            \n                            \n                                    Public\n                                dragDropService\n                            \n                            \n                                enabled$\n                            \n                            \n                                sub\n                            \n                            \n                                templates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterContentInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDndDrop\n                            \n                            \n                                onItemClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                conditionsData\n                            \n                            \n                                data\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                itemClicked\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isArray\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, configurableService: ConfigurableService, dragDropService: DragDropService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/dynamic-views/zone.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configurableService\n                                                  \n                                                        \n                                                                        ConfigurableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dragDropService\n                                                  \n                                                        \n                                                                        DragDropService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        conditionsData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/zone.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/zone.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/zone.component.ts:31\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        itemClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/dynamic-views/zone.component.ts:35\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \nngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/zone.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/zone.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/zone.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDndDrop\n                        \n                    \n                \n            \n            \n                \nonDndDrop(event: DndDropEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/zone.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            DndDropEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onItemClicked\n                        \n                    \n                \n            \n            \n                \nonItemClicked(event: Event, data?: any, index?: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/dynamic-views/zone.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cdr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/zone.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        children\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(TemplateNameDirective)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/zone.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/zone.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        configurableService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfigurableService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/zone.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dragDropService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DragDropService\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/zone.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enabled$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configurableService.editorEnabled$\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/zone.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/zone.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        templates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/dynamic-views/zone.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isArray\n                    \n                \n\n                \n                    \n                        getisArray()\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/dynamic-views/zone.component.ts:64\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Input,\n  QueryList,\n  OnDestroy,\n  OnInit,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { DndDropEvent } from 'ngx-drag-drop';\nimport { TemplateNameDirective } from '../utils/template-name.directive';\nimport { ConfigService } from '../configuration/config.service';\nimport { Subscription } from 'rxjs';\nimport { DragDropService } from './drag-drop.service';\nimport { ConfigurableService } from '../configurable';\n\n@Component({\n  selector: 'uib-zone',\n  templateUrl: './zone.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZoneComponent implements AfterContentInit, OnInit, OnDestroy {\n  @ContentChildren(TemplateNameDirective)\n  children: QueryList;\n  templates: Record = {};\n\n  @Input() id: string;\n  @Input() data?: any;\n  @Input() conditionsData?: Record;\n\n  @Output() itemClicked = new EventEmitter();\n\n  sub: Subscription;\n  \n  enabled$ = this.configurableService.editorEnabled$;\n\n  constructor(\n    public configService: ConfigService,\n    public configurableService: ConfigurableService,\n    public dragDropService: DragDropService,\n    public cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this.sub = this.configService.watchConfig(this.id).subscribe((id) => {\n      this.cdr.markForCheck(); // necessary to apply config changes\n    });\n  }\n\n  ngAfterContentInit() {\n    this.children.forEach(\n      (tpl) => (this.templates[tpl.templateName] = tpl)\n    );\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  get isArray(): boolean {\n    return Array.isArray(this.data);\n  }\n\n  onDndDrop(event: DndDropEvent) {\n    console.log('dropped', event);\n    if(typeof event.index === 'number') {\n      this.dragDropService.handleDrop(\n        this.id,\n        event.index,\n        event.data\n      );\n    }\n  }\n\n  onItemClicked(event: Event, data?: any, index?: number) {\n    data = typeof index === 'undefined'? data : data[index];\n    this.itemClicked.next({data, index, event});\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n  \n\n\n\n\n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AutocompleteComponent', 'selector': 'uib-autocomplete'},{'name': 'ClassEditorComponent', 'selector': 'uib-class-editor'},{'name': 'ConditionEditorComponent', 'selector': 'uib-condition-editor'},{'name': 'ConfiguratorComponent', 'selector': 'uib-configurator'},{'name': 'FlexEditorComponent', 'selector': 'uib-flex-editor'},{'name': 'HtmlEditorComponent', 'selector': 'uib-html-editor'},{'name': 'ItemComponent', 'selector': '[uib-item]'},{'name': 'ModalComponent', 'selector': 'uib-modal'},{'name': 'PaletteComponent', 'selector': 'uib-palette'},{'name': 'SvgIconComponent', 'selector': 'svg-icon'},{'name': 'ToastComponent', 'selector': 'uib-toast'},{'name': 'ToolbarComponent', 'selector': 'uib-toolbar'},{'name': 'TreeComponent', 'selector': 'uib-tree'},{'name': 'ZoneComponent', 'selector': 'uib-zone'}];\n    var DIRECTIVES = [{'name': 'ConfigurableDirective', 'selector': '[uib-configurable]'},{'name': 'NgModelChangeDebouncedDirective', 'selector': '[ngModelChangeDebounced]'},{'name': 'TemplateNameDirective', 'selector': '[uib-template]'},{'name': 'TooltipDirective', 'selector': '[uib-tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ZoneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/lib/src/configurable/configurable.directive.ts\n            \n            directive\n            ConfigurableDirective\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                projects/lib/src/configurable/configurable.service.ts\n            \n            injectable\n            ConfigurableService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/lib/src/configurable/configurable.service.ts\n            \n            interface\n            Configurable\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/lib/src/configuration/conditions.service.ts\n            \n            injectable\n            ConditionsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/lib/src/configuration/conditions.service.ts\n            \n            interface\n            Condition\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/lib/src/configuration/conditions.service.ts\n            \n            interface\n            ConditionValue\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/lib/src/configuration/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                projects/lib/src/configuration/config.service.ts\n            \n            interface\n            ComponentConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/lib/src/configuration/config.service.ts\n            \n            interface\n            ContainerConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/configurator.component.ts\n            \n            component\n            ConfiguratorComponent\n            \n                15 %\n                (3/20)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/configurator.component.ts\n            \n            variable\n            defaultConfiguratorOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/configurator.models.ts\n            \n            interface\n            ConfiguratorContext\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/configurator.models.ts\n            \n            interface\n            ConfiguratorOptions\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/configurator.models.ts\n            \n            interface\n            PaletteOptions\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/editors/class-editor.component.ts\n            \n            component\n            ClassEditorComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/editors/condition-editor.component.ts\n            \n            component\n            ConditionEditorComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/editors/flex-editor.component.ts\n            \n            component\n            FlexEditorComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/editors/flex-editor.component.ts\n            \n            interface\n            FlexOption\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/editors/html-editor.component.ts\n            \n            component\n            HtmlEditorComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/palette/palette.component.ts\n            \n            component\n            PaletteComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/palette/palette.component.ts\n            \n            interface\n            ConfigModal\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/palette/palette.component.ts\n            \n            interface\n            PaletteItem\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/palette/palette.component.ts\n            \n            variable\n            defaultPaletteOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/lib/src/configurator/tree/tree.component.ts\n            \n            component\n            TreeComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                projects/lib/src/dynamic-views/condition.pipe.ts\n            \n            pipe\n            ConditionPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/dynamic-views/drag-drop.service.ts\n            \n            injectable\n            DragDropService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/lib/src/dynamic-views/drag-drop.service.ts\n            \n            interface\n            ComponentCreator\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/lib/src/dynamic-views/drag-drop.service.ts\n            \n            interface\n            ContainerIndex\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/lib/src/dynamic-views/item.component.ts\n            \n            component\n            ItemComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                projects/lib/src/dynamic-views/zone.component.ts\n            \n            component\n            ZoneComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/icons-library.ts\n            \n            variable\n            iconsLibrary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            interface\n            UIBuilderIcon\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            UIBuilderIconAlignXCenter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            UIBuilderIconAlignXEnd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            UIBuilderIconAlignXSpaceAround\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            UIBuilderIconAlignXSpaceBetween\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            UIBuilderIconAlignXStart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            UIBuilderIconAlignXStretch\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            UIBuilderIconAlignYBaseline\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            UIBuilderIconAlignYCenter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            UIBuilderIconAlignYEnd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            UIBuilderIconAlignYStart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            UIBuilderIconAlignYStretch\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            UIBuilderIconArrowDown\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            UIBuilderIconArrowForward\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            UIBuilderIconEye\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            UIBuilderIconEyeSlash\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            UIBuilderIconGrip\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            UIBuilderIconRedo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            UIBuilderIconTrash\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            UIBuilderIconTree\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/svg/svg-icons.ts\n            \n            variable\n            UIBuilderIconUndo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/autocomplete.component.ts\n            \n            component\n            AutocompleteComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/model-change.directive.ts\n            \n            directive\n            NgModelChangeDebouncedDirective\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/svg-icon/registry.ts\n            \n            class\n            SvgIcon\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/svg-icon/registry.ts\n            \n            injectable\n            SvgIconRegistry\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/svg-icon/svg-icon.component.ts\n            \n            component\n            SvgIconComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/svg-icon/svg-icon.component.ts\n            \n            function\n            coerceCssPixelValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/svg-icon/types.ts\n            \n            interface\n            SVG_CONFIG\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/svg-icon/types.ts\n            \n            interface\n            SvgIconType\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/svg-icon/types.ts\n            \n            variable\n            SVG_ICONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/svg-icon/types.ts\n            \n            variable\n            SVG_ICONS_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/svg-icon/types.ts\n            \n            variable\n            SVG_MISSING_ICON_FALLBACK\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/template-name.directive.ts\n            \n            directive\n            TemplateNameDirective\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/toast/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/lib/src/utils/tooltip.directive.ts\n            \n            directive\n            TooltipDirective\n            \n                30 %\n                (4/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^12.2.5\n        \n            @angular/common : ^12.2.5\n        \n            @angular/compiler : ^12.2.5\n        \n            @angular/core : ^12.2.5\n        \n            @angular/forms : ^12.2.5\n        \n            @angular/platform-browser : ^12.2.5\n        \n            @angular/platform-browser-dynamic : ^12.2.5\n        \n            @angular/router : ^12.2.5\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @ngneat/elf : 1.0.2\n        \n            @ngneat/elf-entities : 3.0.0\n        \n            @ngneat/elf-state-history : 1.0.1\n        \n            @popperjs/core : ^2.11.0\n        \n            bootstrap : ^5.1.3\n        \n            ngx-drag-drop : ^2.0.0\n        \n            rxjs : ~6.6.3\n        \n            tslib : ^2.3.1\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            coerceCssPixelValue   (projects/.../svg-icon.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/utils/svg-icon/svg-icon.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        coerceCssPixelValue\n                        \n                    \n                \n            \n            \n                \ncoerceCssPixelValue(value: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\nUI Builder\nA library for making no-code Angular applications.\nUI Builder is an Angular library that lets you transform an application with a static layout and fixed configuration into an application that can be easily reshaped and reconfigured by an end-user, without writing code.\nPrinciple\nA normal Angular application has HTML templates that look like this:\n\n    {{product.name}}\n    \n    {{product.description}}\n    \n        EUR {{product.price}}\n        Add to basket\n    \nThis template is fine, but it is static. If you need to change the layout, or change the price currency from \"EUR\" to \"USD\", then you need a developer to modify the app and rebuild it.\nWhat if the developer could transform the app into a set of modular building blocks, and let the users do what they want, with the simplicity of drag & drop and configuration forms?\nWith UI Builder, this can be achieved with the following steps:\n\nReplace the above template with a \"zone\", including the sub-templates that users will drag & drop and configure.\nDefine your default layout with configuration.\nInsert a configurator, with optional configurators for each sub-template\n\n1) Create a zone\nA zone is defined like this:\n\n\n    \n    \n        {{data.name}}\n    \n\n    \n    \n        {{data.description}}\n    \n    \n    \n    \n        \n    \n    \n    \n    \n        {{config.currency}} {{product.price}}\n        Add to basket\n    \n    \nWe pass a list of templates to the zone by transclusion. These templates are just regular Angular templates. They may include one or multiple Angular components, or just plain HTML. Notice that these templates have 2 inputs: data and config. data corresponds to variable data (such as the product price displayed in this example). config corresponds to any other parameter that does not depend on the data (like the price currency).\n2) Define a default layout\nThe zone defined above will display components according to a given configuration. This configuration should be initialized when the application starts.\nIn order to display one of the templates defined above, the configuration must include:\n\nA configuration object for that template\nA \"container\" that references that template\n\nEvery \"zone\" should have a \"container\" configuration corresponding to the \"root\" of these HTML elements:\nzone \"products\"\n|_ container \"products\"\n  |_ template \"name\"\n  |_ template \"description\"\n  |_ template \"image\"\n  |_ template \"price\"Note that this structure can be hierachical, as containers can include other containers.\nThis arborescence of configuration is defined like this:\nimport {Component, OnInit} from '@angular/core';\nimport {ConfigService} from 'ngx-ui-builder';\n\nexport class MyComponent implements OnInit {\n\n    constructor(\n        public configService: ConfigService\n    ){}\n\n    ngOnInit() {\n        this.configService.init([{\n            id: 'products',\n            type: '_container',\n            items: ['name', 'description', 'image', 'price']\n        },{\n            id: 'price',\n            type: 'price',\n            currency: 'EUR'\n        }]);\n    }\n}Notice that:\n\nEach configuration object is passed to the template, hence why it is possible to use the parameters with bindings like this: {{config.currency}}\nIt is possible to omit a trivial configuration object, if it does not have any configuration, like the \"name\", \"description\" and \"image\" templates. The library automatically creates a {id: 'name', type: 'name'} object\nThere is no obligation to have an equal id and type. In fact, the same template can be displayed multiple times, with different input configurations. The only constraint is that id must be unique, and type must refer to a template name (see Step 1)\n\nAt this point, the application is functional: the zone should display the templates, according to the configuration tree.\n3) Insert a configurator\nThe configurator is a component from the UI Builder library which is displayed when the user clicks on a component to configure it. It can display several built-in forms as well as (optional) custom forms corresponding to each of your templates.\nLike for the zones, the custom configurators are passed by transclusion.\n\n    \n    \n        \n        Currency\n        \n            Euro\n            Dollar\n        \n    \n\nFeatures\nState management\nConfiguration is at the heart of the UI Builder: It defines which components are displayed, their visual layout and which parameters they use.\nConfiguration is managed in a reactive store based on Elf (itself based on RxJS). Elf includes a state history which powers Undo/Redo buttons. Therefore, every action on the configuration (moving a component with drag & drop, creating a new component, or modifying its parameters) is undoable.\n\nAny change to the configuration is immediately visible in the UI, giving users a \"what you see is what you get experience\" (Wysiwyg).\nConfiguration can be easily synced with a server so that users always retrieve the application in the state they left it.\nHierarchical containers\nA container is a built-in type of component that displays sub-components (whose ids are listed in the items property):\n{\n    id: 'products',\n    type: '_container',\n    items: ['name', 'description', 'image', 'price']\n}Containers can contain other containers, which can contain other containers, and so on. This allows to create abritrarily complex layouts, with rows nested into columns, nested into rows, etc.\n\nConfiguration tree\nThe configuration tree can be used to visualize the configuration of each components. It represents the hierarchy of components within containers, within containers (etc.), within each zone.\nIt also allows to see the location of a component and select it directly, rather than having to look for it in the UI.\n\nDrag & drop\nComponents can be dragged and dropped intuitively within their zone. A component can be moved within its container, or within a different container.\nDrag & drop can also be used to drag new components in from a palette, or for removing a component from its zone.\nDrag & Drop is powered by the ngx-drag-drop library.\nComponent palettes\nPalettes of components are generated automatically based on the templates available to a zone. If a zone has 3 templates, then the palette will let you drag & drop any of those 3 templates anywhere into the zone, multiple times if needed.\nAdditionally, the palette lets users drag & drop new containers into existing containers.\nWhen a template has a custom configurator, this configurator is displayed in a modal prior to insertion, so that the user can initialize its configuration properly.\n\nForm templates\nComponents can have completely custom templates. These templates are passed by transclusion to the uib-configurator component, and are displayed when the user selects the component with a click, directly in the UI, or from the configuration tree.\nSimply pass a configurator template with the same name as the component template (in this case, \"foo\"):\n\n    \n    \n        Hello world\n        Lorem Ipsum...\n    \n\n\n...\n\n\n    \n    \n        \n        Show text\n    \nCustom layouts\nContainers use CSS flexbox to display inner elements with a wide range of options (direction, alignment, wrapping, etc.)\nContainers have a built-in configurator for configuring these flexbox property visually.\n\nConditional display\nSometimes a component should be displayed only in certain conditions. In a normal Angular application, one can simply use *ngIf to define these conditions.\nWith the UI Builder, users can configure conditions by using the \"Conditional display\" form:\n\nIn the above form:\n\n\"Data\" corresponds to the [data] input passed to the  component. It is possible to pass additional objects to a zone via [conditionsData].\n\"Field\" corresponds to the field name of the data object.\n\"Type\" can be \"equals\", or \"regular expression\", for more complex use cases\n\"Values\" lists all the values that the condition should verify. \"Not\" allows to negate the condition, and \"Display if any of the conditions is true\" allows to switch between \"AND\" and \"OR\" when there are multiple values.\n\nStyle encapsulation\nThe library is dependent on Bootstrap for the styling of its components (configurator, toolbar, built-in forms).\nHowever Bootstrap does not have to be loaded globally in the host application (as it may conflict with another styling framework). Instead, we encapsulate the Bootstrap CSS within a .uib-bootstrap selector.\nThis means the library can be integrated in the host application with the following pattern:\n\n  \n    \n\n    \n\n        ...\n\n    \nHowever, the host application still requires some additional styling and utilities to correctly display the dynamic components within a .\nThese styles can be integrated with the following lines:\n@import \"~bootstrap/dist/css/bootstrap-utilities.min\";\n@import \"~ngx-ui-builder/styles/ui-builder\";(Obviously, the first line can be ommited if you already use Bootstrap in your host application)\nStatic export\nCustomizing applications with UI Builder comes at a cost:\n\nThe source code of the application becomes more complex\nThe application becomes slower, as a result of being completely dynamic (templates are displayed as a result of a changing configuration)\n\nSo, at some point, it may be desirable to take the configuration and \"convert it\" into a normal, static, Angular application.\nThis can be achieved with one line of Angular CLI:\nng generate ngx-ui-builder:make-static -- --config=my-config.jsonThe make-static schematic takes as an input a JSON file containing the configuration of your application and generates HTML template(s) with the right templates in the right positions and with the right parameters passed as inputs. It also takes care of removing the ,  and  components from your app, as well as the import of the ui-builder stylesheet.\nAfter running this script, the app should compile and display your components exactly the same as before, but without a trace of the UI Builder in them anymore!\nInternationalization\nThe library has standard Angular i18n support.\nRunning ng extract-i18n for an application using ngx-ui-builder will extract all the strings marked for translation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 Trevion\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ConfigurableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfiguratorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DynamicViewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SvgIconsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConfigurableModule\n\n\n\ncluster_ConfigurableModule_declarations\n\n\n\ncluster_ConfigurableModule_exports\n\n\n\ncluster_ConfiguratorModule\n\n\n\ncluster_ConfiguratorModule_declarations\n\n\n\ncluster_ConfiguratorModule_imports\n\n\n\ncluster_ConfiguratorModule_exports\n\n\n\ncluster_DynamicViewsModule\n\n\n\ncluster_DynamicViewsModule_declarations\n\n\n\ncluster_DynamicViewsModule_exports\n\n\n\ncluster_SvgIconsModule\n\n\n\ncluster_SvgIconsModule_declarations\n\n\n\ncluster_SvgIconsModule_exports\n\n\n\ncluster_UtilsModule\n\n\n\ncluster_UtilsModule_declarations\n\n\n\ncluster_UtilsModule_exports\n\n\n\n\nConfigurableDirective\n\nConfigurableDirective\n\n\n\nConfigurableModule\n\nConfigurableModule\n\nConfigurableModule -->\n\nConfigurableDirective->ConfigurableModule\n\n\n\n\n\nConfigurableDirective \n\nConfigurableDirective \n\nConfigurableDirective  -->\n\nConfigurableModule->ConfigurableDirective \n\n\n\n\n\nDynamicViewsModule\n\nDynamicViewsModule\n\nDynamicViewsModule -->\n\nConfigurableModule->DynamicViewsModule\n\n\n\n\n\nClassEditorComponent\n\nClassEditorComponent\n\n\n\nConfiguratorModule\n\nConfiguratorModule\n\nConfiguratorModule -->\n\nClassEditorComponent->ConfiguratorModule\n\n\n\n\n\nConditionEditorComponent\n\nConditionEditorComponent\n\nConfiguratorModule -->\n\nConditionEditorComponent->ConfiguratorModule\n\n\n\n\n\nConfiguratorComponent\n\nConfiguratorComponent\n\nConfiguratorModule -->\n\nConfiguratorComponent->ConfiguratorModule\n\n\n\n\n\nFlexEditorComponent\n\nFlexEditorComponent\n\nConfiguratorModule -->\n\nFlexEditorComponent->ConfiguratorModule\n\n\n\n\n\nHtmlEditorComponent\n\nHtmlEditorComponent\n\nConfiguratorModule -->\n\nHtmlEditorComponent->ConfiguratorModule\n\n\n\n\n\nPaletteComponent\n\nPaletteComponent\n\nConfiguratorModule -->\n\nPaletteComponent->ConfiguratorModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nConfiguratorModule -->\n\nToolbarComponent->ConfiguratorModule\n\n\n\n\n\nTreeComponent\n\nTreeComponent\n\nConfiguratorModule -->\n\nTreeComponent->ConfiguratorModule\n\n\n\n\n\nConfiguratorComponent \n\nConfiguratorComponent \n\nConfiguratorComponent  -->\n\nConfiguratorModule->ConfiguratorComponent \n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nConfiguratorModule->ToolbarComponent \n\n\n\n\n\nUtilsModule \n\nUtilsModule \n\nUtilsModule  -->\n\nConfiguratorModule->UtilsModule \n\n\n\n\n\nSvgIconsModule\n\nSvgIconsModule\n\nConfiguratorModule -->\n\nSvgIconsModule->ConfiguratorModule\n\n\n\nDynamicViewsModule -->\n\nSvgIconsModule->DynamicViewsModule\n\n\n\n\n\nSvgIconComponent \n\nSvgIconComponent \n\nSvgIconComponent  -->\n\nSvgIconsModule->SvgIconComponent \n\n\n\n\n\nUtilsModule\n\nUtilsModule\n\nConfiguratorModule -->\n\nUtilsModule->ConfiguratorModule\n\n\n\nDynamicViewsModule -->\n\nUtilsModule->DynamicViewsModule\n\n\n\n\n\nAutocompleteComponent \n\nAutocompleteComponent \n\nAutocompleteComponent  -->\n\nUtilsModule->AutocompleteComponent \n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nUtilsModule->ModalComponent \n\n\n\n\n\nNgModelChangeDebouncedDirective \n\nNgModelChangeDebouncedDirective \n\nNgModelChangeDebouncedDirective  -->\n\nUtilsModule->NgModelChangeDebouncedDirective \n\n\n\n\n\nTemplateNameDirective \n\nTemplateNameDirective \n\nTemplateNameDirective  -->\n\nUtilsModule->TemplateNameDirective \n\n\n\n\n\nToastComponent \n\nToastComponent \n\nToastComponent  -->\n\nUtilsModule->ToastComponent \n\n\n\n\n\nTooltipDirective \n\nTooltipDirective \n\nTooltipDirective  -->\n\nUtilsModule->TooltipDirective \n\n\n\n\n\nConditionPipe\n\nConditionPipe\n\nDynamicViewsModule -->\n\nConditionPipe->DynamicViewsModule\n\n\n\n\n\nItemComponent\n\nItemComponent\n\nDynamicViewsModule -->\n\nItemComponent->DynamicViewsModule\n\n\n\n\n\nZoneComponent\n\nZoneComponent\n\nDynamicViewsModule -->\n\nZoneComponent->DynamicViewsModule\n\n\n\nUtilsModule  -->\n\nDynamicViewsModule->UtilsModule \n\n\n\n\n\nConditionPipe \n\nConditionPipe \n\nConditionPipe  -->\n\nDynamicViewsModule->ConditionPipe \n\n\n\n\n\nZoneComponent \n\nZoneComponent \n\nZoneComponent  -->\n\nDynamicViewsModule->ZoneComponent \n\n\n\n\n\nSvgIconComponent\n\nSvgIconComponent\n\nSvgIconsModule -->\n\nSvgIconComponent->SvgIconsModule\n\n\n\n\n\nAutocompleteComponent\n\nAutocompleteComponent\n\nUtilsModule -->\n\nAutocompleteComponent->UtilsModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nUtilsModule -->\n\nModalComponent->UtilsModule\n\n\n\n\n\nNgModelChangeDebouncedDirective\n\nNgModelChangeDebouncedDirective\n\nUtilsModule -->\n\nNgModelChangeDebouncedDirective->UtilsModule\n\n\n\n\n\nTemplateNameDirective\n\nTemplateNameDirective\n\nUtilsModule -->\n\nTemplateNameDirective->UtilsModule\n\n\n\n\n\nToastComponent\n\nToastComponent\n\nUtilsModule -->\n\nToastComponent->UtilsModule\n\n\n\n\n\nTooltipDirective\n\nTooltipDirective\n\nUtilsModule -->\n\nTooltipDirective->UtilsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Mutable   (projects/.../types.helpers.ts)\n                        \n                        \n                            myIcons   (projects/.../svg-icons.ts)\n                        \n                        \n                            UIBuilderIconNameSubset   (projects/.../svg-icons.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/utils/types.helpers.ts\n    \n    \n        \n            \n                \n                    \n                    Mutable\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/lib/src/svg/svg-icons.ts\n    \n    \n        \n            \n                \n                    \n                    myIcons\n                \n            \n            \n                \n                        \"align_x_center\" | \"align_x_end\" | \"align_x_space_around\" | \"align_x_space_between\" | \"align_x_start\" | \"align_x_stretch\" | \"align_y_baseline\" | \"align_y_center\" | \"align_y_end\" | \"align_y_start\" | \"align_y_stretch\" | \"arrow_down\" | \"arrow_forward\" | \"tree\" | \"undo\" | \"redo\" | \"trash\" | \"grip\" | \"eye\" | \"eye_slash\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UIBuilderIconNameSubset\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defaultConfiguratorOptions   (projects/.../configurator.component.ts)\n                        \n                        \n                            defaultPaletteOptions   (projects/.../palette.component.ts)\n                        \n                        \n                            iconsLibrary   (projects/.../icons-library.ts)\n                        \n                        \n                            SVG_ICONS   (projects/.../types.ts)\n                        \n                        \n                            SVG_ICONS_CONFIG   (projects/.../types.ts)\n                        \n                        \n                            SVG_MISSING_ICON_FALLBACK   (projects/.../types.ts)\n                        \n                        \n                            UIBuilderIconAlignXCenter   (projects/.../svg-icons.ts)\n                        \n                        \n                            UIBuilderIconAlignXEnd   (projects/.../svg-icons.ts)\n                        \n                        \n                            UIBuilderIconAlignXSpaceAround   (projects/.../svg-icons.ts)\n                        \n                        \n                            UIBuilderIconAlignXSpaceBetween   (projects/.../svg-icons.ts)\n                        \n                        \n                            UIBuilderIconAlignXStart   (projects/.../svg-icons.ts)\n                        \n                        \n                            UIBuilderIconAlignXStretch   (projects/.../svg-icons.ts)\n                        \n                        \n                            UIBuilderIconAlignYBaseline   (projects/.../svg-icons.ts)\n                        \n                        \n                            UIBuilderIconAlignYCenter   (projects/.../svg-icons.ts)\n                        \n                        \n                            UIBuilderIconAlignYEnd   (projects/.../svg-icons.ts)\n                        \n                        \n                            UIBuilderIconAlignYStart   (projects/.../svg-icons.ts)\n                        \n                        \n                            UIBuilderIconAlignYStretch   (projects/.../svg-icons.ts)\n                        \n                        \n                            UIBuilderIconArrowDown   (projects/.../svg-icons.ts)\n                        \n                        \n                            UIBuilderIconArrowForward   (projects/.../svg-icons.ts)\n                        \n                        \n                            UIBuilderIconEye   (projects/.../svg-icons.ts)\n                        \n                        \n                            UIBuilderIconEyeSlash   (projects/.../svg-icons.ts)\n                        \n                        \n                            UIBuilderIconGrip   (projects/.../svg-icons.ts)\n                        \n                        \n                            UIBuilderIconRedo   (projects/.../svg-icons.ts)\n                        \n                        \n                            UIBuilderIconTrash   (projects/.../svg-icons.ts)\n                        \n                        \n                            UIBuilderIconTree   (projects/.../svg-icons.ts)\n                        \n                        \n                            UIBuilderIconUndo   (projects/.../svg-icons.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/configurator/configurator.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultConfiguratorOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ConfiguratorOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  paletteOptions: defaultPaletteOptions,\n  showFlexEditor: true,\n  showHtmlEditor: true,\n  showCssClasses: true,\n  showConditionalDisplay: true,\n  showRemove: true,\n  showDuplicate: true\n}\n                    \n                \n\n\n        \n    \n\n    projects/lib/src/configurator/palette/palette.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultPaletteOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaletteOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  enableSubcontainers: true,\n  enableRawHtml: true,\n  rawHtmlPlaceholder: \"Edit me\",\n  showStandardPalette: true,\n  showExistingPalette: true\n}\n                    \n                \n\n\n        \n    \n\n    projects/lib/src/svg/icons-library.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        iconsLibrary\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  UIBuilderIconAlignXCenter,\n  UIBuilderIconAlignXEnd,\n  UIBuilderIconAlignXSpaceAround,\n  UIBuilderIconAlignXSpaceBetween,\n  UIBuilderIconAlignXStart,\n  UIBuilderIconAlignXStretch,\n  UIBuilderIconAlignYBaseline,\n  UIBuilderIconAlignYCenter,\n  UIBuilderIconAlignYEnd,\n  UIBuilderIconAlignYStart,\n  UIBuilderIconAlignYStretch,\n  UIBuilderIconArrowDown,\n  UIBuilderIconArrowForward,\n  UIBuilderIconTree,\n  UIBuilderIconUndo,\n  UIBuilderIconRedo,\n  UIBuilderIconTrash,\n  UIBuilderIconGrip,\n  UIBuilderIconEye,\n  UIBuilderIconEyeSlash\n]\n                    \n                \n\n\n        \n    \n\n    projects/lib/src/utils/svg-icon/types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SVG_ICONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SVG_ICONS')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SVG_ICONS_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SVG_ICONS_CONFIG')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SVG_MISSING_ICON_FALLBACK\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SVG_MISSING_ICON_FALLBACK')\n                    \n                \n\n\n        \n    \n\n    projects/lib/src/svg/svg-icons.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UIBuilderIconAlignXCenter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UIBuilderIcon\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'align_x_center',\n  data: ``\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UIBuilderIconAlignXEnd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UIBuilderIcon\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'align_x_end',\n  data: ``\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UIBuilderIconAlignXSpaceAround\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UIBuilderIcon\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'align_x_space_around',\n  data: ``\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UIBuilderIconAlignXSpaceBetween\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UIBuilderIcon\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'align_x_space_between',\n  data: ``\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UIBuilderIconAlignXStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UIBuilderIcon\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'align_x_start',\n  data: ``\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UIBuilderIconAlignXStretch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UIBuilderIcon\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'align_x_stretch',\n  data: ``\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UIBuilderIconAlignYBaseline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UIBuilderIcon\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'align_y_baseline',\n  data: ``\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UIBuilderIconAlignYCenter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UIBuilderIcon\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'align_y_center',\n  data: ``\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UIBuilderIconAlignYEnd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UIBuilderIcon\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'align_y_end',\n  data: ``\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UIBuilderIconAlignYStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UIBuilderIcon\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'align_y_start',\n  data: ``\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UIBuilderIconAlignYStretch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UIBuilderIcon\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'align_y_stretch',\n  data: ``\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UIBuilderIconArrowDown\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UIBuilderIcon\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'arrow_down',\n  data: ``\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UIBuilderIconArrowForward\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UIBuilderIcon\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'arrow_forward',\n  data: ``\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UIBuilderIconEye\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UIBuilderIcon\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'eye',\n  data: ``\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UIBuilderIconEyeSlash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UIBuilderIcon\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'eye_slash',\n  data: ``\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UIBuilderIconGrip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UIBuilderIcon\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'grip',\n  data: ``\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UIBuilderIconRedo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UIBuilderIcon\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'redo',\n  data: ``\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UIBuilderIconTrash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UIBuilderIcon\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'trash',\n  data: ``\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UIBuilderIconTree\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UIBuilderIcon\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'tree',\n  data: ``\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UIBuilderIconUndo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UIBuilderIcon\n\n                    \n                \n                \n                    \n                        Default value : {\n  name: 'undo',\n  data: ``\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
